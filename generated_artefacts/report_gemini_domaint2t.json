{
    "logistics_signavio_2.json": {
        "0": {
            "text": "The process begins with receiving a customer order.  Next, stock items are picked based on the order.  Following this, the picked items are packed into parcels.  The parcels are then weighed, and corresponding shipping labels are printed.\n\nNow, three tasks happen concurrently: the parcels are moved to the loading dock, the number of parcels is checked, and the packing quality is inspected.  Once all three of these parallel tasks are complete, they converge.\n\nAfter the convergence point, two more tasks happen in parallel: the parcels are loaded onto the truck, and the order status is updated.  The loading of the parcels onto the truck is followed by sending delivery instructions to the transporter.  Simultaneously, after the order status is updated, the stock levels are also updated.  Finally, after the delivery instructions are sent and the stock levels are updated, the entire process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "inspect packing quality",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG3",
                        "name": "Parallel Gateway 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG4",
                        "name": "Parallel Gateway 4",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a7",
                        "targetRef": "PG3"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "a8",
                        "targetRef": "PG3"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a10",
                        "targetRef": "PG3"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "PG3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "a13",
                        "targetRef": "PG4"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "f19",
                        "sourceRef": "a15",
                        "targetRef": "PG4"
                    },
                    {
                        "id": "f20",
                        "sourceRef": "PG4",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving a customer's order.  Next, stock items are picked to fulfill the order.  Following this, the picked items are packed into parcels.  The parcels are then weighed, and shipping labels are printed for them.\n\nAfter the labels are printed, three actions happen simultaneously: the parcels are moved to the loading dock, the number of parcels is checked, and the quality of the packing is inspected.  Once all three of these tasks are complete, the process continues.\n\nNext, two more actions happen in parallel: the parcels are loaded onto the truck, and at the same time, delivery instructions are sent to the transporter.  Also happening concurrently, but separate from the truck loading and instructions, the order status is updated, and stock levels are adjusted.  After all of these parallel tasks are finished, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "inspect packing quality",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_join",
                        "name": "Parallel Gateway 1 Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2_join",
                        "name": "Parallel Gateway 2 Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a7",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "a8",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a10",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "PG1_join",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "a13",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "f19",
                        "sourceRef": "a15",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "f20",
                        "sourceRef": "PG2_join",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a customer's order.  Next, stock items are picked based on the order.  Following this, the picked items are packed into parcels.  The parcels are then weighed, and shipping labels are printed for them.\n\nAt this point, three tasks happen concurrently: the parcels are moved to the loading dock, the number of parcels is checked, and the quality of the packing is inspected. Once all three of these tasks are complete, the process continues.\n\nNext, two more tasks happen at the same time: the parcels are loaded onto the truck, and the order status is updated.  The updating of the order status is immediately followed by updating the stock levels.  Simultaneously, after the parcels are loaded, delivery instructions are sent to the transporter.  Once both the stock levels are updated and the delivery instructions are sent, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "inspect packing quality",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "join_gateway_1",
                        "type": "Parallel"
                    },
                    {
                        "id": "join_gateway_2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a7",
                        "targetRef": "join_gateway_1"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "a8",
                        "targetRef": "join_gateway_1"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a10",
                        "targetRef": "join_gateway_1"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "join_gateway_1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_16",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_17",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_18",
                        "sourceRef": "a13",
                        "targetRef": "join_gateway_2"
                    },
                    {
                        "id": "flow_19",
                        "sourceRef": "a15",
                        "targetRef": "join_gateway_2"
                    },
                    {
                        "id": "flow_20",
                        "sourceRef": "join_gateway_2",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_bpmai_1.json": {
        "0": {
            "text": "Category: Manufacturing\\nTitle: Production Process\\n\\nThe process begins with the creation of a production plan and processing the associated order.  Next, Material Requirements Planning (MRP) is executed.  Following this, capacity is evaluated.  Based on the capacity evaluation, a schedule and release proposal is created.  The process order is then confirmed.  A transfer order or good issue is then created.  The good issue is subsequently confirmed.  A good receipt is then recorded.  Finally, order settlement takes place, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a9",
                        "targetRef": "end_event_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "Category: Manufacturing and Production\nTitle: Production Order Process\n\nThe process begins with the creation of a production plan and processing the associated order.  Next, Material Requirements Planning (MRP) is executed.  Following this, the capacity for the order is evaluated.  A schedule and release proposal is then generated.  The process order is then confirmed.  This confirmation leads to the creation of a transfer order or a good issue.  The good issue is subsequently confirmed.  A good receipt is then recorded.  Finally, order settlement takes place, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "Category: Manufacturing\\nTitle: Production Order Process\\n\\nThe process begins with the creation of a production plan and processing of an order.  Next, Material Requirements Planning (MRP) is executed.  Following this, capacity is evaluated.  A schedule and release proposal is then created.  The process order is confirmed, and a transfer order or good issue is created.  The good issue is then confirmed.  A good receipt follows, and finally, order settlement takes place, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "id2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "id3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "id5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "id6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "id7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "id8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_bpmai_1.json": {
        "0": {
            "text": "The process begins with a shipment request.  Following the request, product availability is checked.  Based on the availability check (Decision D1), the process diverges.\n\nIf the products are available, the shipment address is checked (Decision D2).  If the address is valid, the inbound shipment is assembled and then sent.  The process then moves to receiving the inbound shipment, checking it, and finally preparing the products for shipment to a particular service station.\n\nHowever, if at Decision D2, the shipment address is *not* valid, the products are still prepared for regional shipment and then, like the previous path, prepared for shipment to the particular service station.\n\nAlternatively, if at the initial product availability check (Decision D1) it's determined the products are *not* available, the process skips the address check and proceeds directly to preparing the products for shipment to the particular service station.\n\nRegardless of the path taken, the process concludes after the products are prepared for shipment to the particular service station.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a13",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a shipment request.  Following the request, product availability is checked. Based on this check, the process diverges.\n\nIf the check is positive (condition 1 is met), the shipment address is checked.  If this address check is also positive (condition 2 is met), the inbound shipment is assembled and then sent.  If the address check is negative (condition 2 is *not* met), the products are prepared for regional shipment, bypassing the assembly and sending of an inbound shipment.\n\nAlternatively, if the initial product availability check is negative (condition 1 is *not* met), the products are prepared for shipment to a particular service station, again bypassing the assembly and sending of an inbound shipment.\n\nRegardless of whether the products were prepared for regional shipment or for a particular service station, they eventually converge to a single point in the process.\n\nIf an inbound shipment *was* sent (meaning both condition 1 and condition 2 were met earlier), it is then received and checked.  Following this check, the products are prepared for shipment to a particular service station.  This preparation step, whether reached directly after the initial product availability check, or after receiving and checking an inbound shipment, also converges to the same point as the regional shipment preparation.\n\nFinally, after this convergence point, where products have been prepared for shipment in one of the described ways, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "user"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "user"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "user"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "user"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "user"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "user"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "user"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "user"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "user"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check Condition 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Check Condition 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "Merge1",
                        "name": "Merge",
                        "type": "Exclusive"
                    },
                    {
                        "id": "Merge2",
                        "name": "Merge",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id-1",
                        "sourceRef": "start1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "id-2",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "id-3",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "id-4",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "id-5",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "id-6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "id-7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "id-8",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "id-9",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "id-10",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id-11",
                        "sourceRef": "a3",
                        "targetRef": "Merge2"
                    },
                    {
                        "id": "id-12",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "id-13",
                        "sourceRef": "a13",
                        "targetRef": "Merge2"
                    },
                    {
                        "id": "id-14",
                        "sourceRef": "Merge2",
                        "targetRef": "Merge1"
                    },
                    {
                        "id": "id-15",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id-16",
                        "sourceRef": "Merge1",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a request for shipment.  The first step is to check if the requested products are available.  Next, a decision is made based on whether the shipment address needs to be checked.\n\nIf the address needs checking, the process proceeds to verify the address. Following the address check, another decision is made based on whether the address is correct.\n\nIf the address is deemed correct, the inbound shipment is assembled and then sent.  The process then waits to receive the inbound shipment.  After receiving the shipment, it is checked.  Regardless of whether the address needed checking or if it was correct, the products are then prepared for shipment to a particular service station.\n\nIf the address *doesn't* need checking, the products are prepared directly for shipment to a particular service station, bypassing the address verification steps.\n\nIf the address was checked and found to be *incorrect*, the products are prepared for a regional shipment instead of a service station shipment.  Again, regardless of the address verification outcome, the products ultimately end up being prepared for shipment (either to a service station or regionally).\n\nFinally, after the products are prepared for shipment (by any of the paths described above), the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check address?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Is address correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-DBA12053-909D-4A5F-A519-2771872E2292",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-60011B42-4B8F-412F-87BC-8A27A0233570",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sid-6032AC06-F71D-4138-AE23-0EF27712D2A0",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-64651EB3-8E47-4134-8627-51D99E92612B",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sid-4557DD73-8D4A-4C01-A72A-E1C8B73E5406",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-29BC6103-9E6E-4907-894C-2C40152093DD",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-F6485A3C-5F81-4292-A884-A80F66E3EA92",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-80A8366D-0D2F-48B3-827A-84565774DF24",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-639F9A51-099E-4520-A5A9-80A3D48C9A77",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-D1331964-A39A-4469-9A55-04A82FCB1B83",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-28B17882-916C-4348-94A5-062420C16FE1",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-AC7E111C-2ABC-4763-B47C-B5C7E5432A50",
                        "sourceRef": "a13",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-B5118616-E920-415C-9548-9F63338B7C67",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-590D7556-F669-4138-A09E-508663691F63",
                        "sourceRef": "a3",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_corradini_2.json": {
        "0": {
            "text": "The process begins with searching for a customer.  After a customer is found, the user makes them an offer.  At this point, a decision (D1) needs to be made. If the customer has additional requests, the process continues to receiving those details and providing further information.  Another decision (D2) follows. If the customer then makes a booking request, the user sends the bill.  Upon receiving payment, a third decision (D3) is made. If payment is not complete, the user contacts the customer and the process loops back to receiving the payment.  If payment is complete, the user books the travel and sends a booking confirmation, after which the process ends.  However, if at either decision point D1 or D2 the customer does not proceed (i.e., no additional requests after the offer, or no booking request after further details are provided), the process ends immediately.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start_event_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a17",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "a14",
                        "targetRef": "end_event_1"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "D2",
                        "targetRef": "end_event_1"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "D1",
                        "targetRef": "end_event_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with searching for a customer.  After a customer is found, the user makes them an offer.  At this point, a decision (D1) needs to be made.\n\nIf the customer has additional requests, the user provides details to address those requests.  Then, another decision (D2) is required.\n\nIf the customer makes a booking request, the user sends the bill.  Upon receiving the payment, a third decision (D3) is made.\n\nIf the payment is successful, the user books the travel and sends a booking confirmation. This confirmation is then followed by a return to the first decision point (D1). If at D1, there are no further requests from the customer, the process ends.\n\nAlternatively, if after receiving the payment (D3), there is an issue with the payment, the user contacts the customer. This leads back to the second decision point (D2). If at D2, the customer does not make a booking request, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a17",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a14",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "D2",
                        "targetRef": "end"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with searching for a customer.  After a customer is found, the user makes them an offer.  At this point, a decision (D1) needs to be made. If the customer has additional requests, the process moves on to receiving those additional requests and then providing details to the customer.  After providing details, another decision (D2) is made. If the customer decides to proceed with a booking, the process continues to receiving the booking request.\n\nRegardless of whether the customer had additional requests, once a booking request is received, the user sends the bill to the customer.  The customer then makes a payment.  After receiving the payment, a third decision (D3) is made. If the payment is complete, the process moves on to booking the travel and sending a booking confirmation, after which the process ends. However, if the payment is incomplete, the user contacts the customer, and the process loops back to receiving the payment, giving the customer another opportunity to complete the payment.  This cycle can repeat until the payment is finally received.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a17",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a14",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_klessascheck_1.json": {
        "0": {
            "text": "The process begins with diagnosing Non-Specific Low Back Pain. Based on the diagnosis, the process branches into two paths. \n\nIf the diagnosis leads down the first path, Superficial Heat or other Nonpharmacological Treatments are applied.  Following this, a decision is made. If the decision leads to the next step, an NSAID or SMR is prescribed, and the process ends.\n\nAlternatively, if the initial diagnosis leads down the second path, Exercise or other Nonpharmacological Treatments are applied.  This is followed by another decision.  If this decision leads forward, an NSAID is prescribed.  Yet another decision follows the prescription of the NSAID. If this final decision leads to the next step, an Opioid is prescribed, and the process ends.  If any of the decisions along either path do not lead to the next step, the process ends without further action.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non, and the process ends.\nSpecific Low\nBack Pain",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Apply\nSuperficial\nHeat or other\nNonpharmocol.\nTreatments",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe\nNSAID or SMR",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise\nor other\nNonpharmacol.\nTreatments",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe\nNSAID",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe\nOpioid",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a14",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with diagnosing Non-Specific Low Back Pain. Based on the diagnosis (Decision D1), two paths are possible. \n\nIf the diagnosis leads down the first path, Superficial Heat or other Nonpharmacological Treatments are applied.  Following this (Decision D2), an NSAID or SMR is prescribed, and the process ends.\n\nAlternatively, if the initial diagnosis (Decision D1) leads down the second path, Exercise or other Nonpharmacological Treatments are applied.  Then, based on the outcome (Decision D3), an NSAID is prescribed.  Finally, depending on a further decision (Decision D4), an Opioid may be prescribed.  Regardless of whether an Opioid is prescribed, the process then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non, and the process ends.\nSpecific Low\nBack Pain",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Apply\nSuperficial\nHeat or other\nNonpharmocol.\nTreatments",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe\nNSAID or SMR",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise\nor other\nNonpharmacol.\nTreatments",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe\nNSAID",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe\nOpioid",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "D4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a14",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with diagnosing Non-Specific Low Back Pain.  Following the diagnosis, a decision (D1) must be made.  There are two paths based on this decision.\n\nIf the decision (D1) leads down the first path, Superficial Heat or other Nonpharmacological Treatments are applied.  After this application, another decision (D2) is made.  Depending on the outcome of D2, an NSAID or SMR is prescribed, which concludes the process.\n\nAlternatively, if the initial decision (D1) leads down the second path, Exercise or other Nonpharmacological Treatments are applied.  This is followed by another decision (D3). Based on the outcome of D3, an NSAID is prescribed.  A final decision (D4) is then made. Depending on the result of D4, an Opioid is prescribed, which then concludes the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non,\nSpecific Low\nBack Pain",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Apply\nSuperficial\nHeat or other\nNonpharmocol.\nTreatments",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe\nNSAID or SMR",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise\nor other\nNonpharmacol.\nTreatments",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe\nNSAID",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe\nOpioid",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "D4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a14",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_lodhi_5.json": {
        "0": {
            "text": "The process begins with receiving a production order.  The first step is to prepare the order.  Next, raw materials are collected.  The process then moves to the cutting stage. After cutting, the process splits into two parallel paths: stitching and printing.  Both stitching and printing converge back into a single path when the production is complete.  Following completion, the quality is checked and a quality report is created.  Based on the quality report, a decision is made. If adjustments are needed, the settings are adjusted, and the process loops back to collecting raw materials. If no adjustments are needed, the data is sent to the warehouse, and the process loops back to preparing the next production order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust  settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "d1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a7",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "pg1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "pg1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a9",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a1",
                        "targetRef": "d1"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "d1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "d1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a3",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a13",
                        "targetRef": "a16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving a production order.  The first step is to prepare this order.  Next, the necessary raw materials are collected.  The process then moves to the cutting stage.  After cutting, stitching and printing happen simultaneously.  Once both stitching and printing are complete, the production is finalized.  At this point, a quality check is performed, and a quality report is created.  Now, a decision needs to be made based on the quality report: if adjustments are needed, the settings are adjusted, and the process loops back to collecting raw materials. If no adjustments are needed, the data is sent to the warehouse, and the process loops back to preparing the next production order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust  settings",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "d1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a7",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "pg1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "pg1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a9",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a1",
                        "targetRef": "d1"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "d1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "d1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a3",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a13",
                        "targetRef": "a16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a production order.  The first step is to prepare this order.  Next, the necessary raw materials are collected.  The process then moves to the cutting stage.\n\nAfter cutting, the process splits into two parallel paths.  One path involves stitching, while the other involves printing.  Once both stitching and printing are complete, the production is considered complete.\n\nFollowing completion, the quality is checked and a quality report is created.  Based on this report, a decision is made. If adjustments are needed, the settings are adjusted, and the process loops back to collecting raw materials.  If no adjustments are needed, the data is sent to the warehouse, and the process loops back to preparing the next production order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust  settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "d1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a7",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "pg1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "pg1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a9",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a1",
                        "targetRef": "d1"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "d1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "d1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a3",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a13",
                        "targetRef": "a16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_4_right_of_portability.json": {
        "0": {
            "text": "The process begins with receiving a data subject request.  Following this, a request is sent to a third party.  After receiving the third party's request, two actions happen in parallel: retrieving elaborations and retrieving available data of the data subject.  Once both these retrieval tasks are complete, the data and elaborations are communicated to the third party. Finally, the same data and elaborations are communicated to the data subject, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "PG2",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the reception of a data subject request.  Following this, a request is sent to a third party.  Once the third party request is received, two parallel actions are initiated: retrieving elaborations and retrieving available data of the data subject.  After both these retrieval tasks are completed, the retrieved data and elaborations are communicated to the third party. Finally, the same data and elaborations are communicated to the data subject, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id1",
                        "sourceRef": "start",
                        "targetRef": "a6"
                    },
                    {
                        "id": "id2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "id3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "id4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "id5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id6",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "id7",
                        "sourceRef": "a3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "id8",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "PG2",
                        "targetRef": "a2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the reception of a data subject request.  Following this, a request is sent to a third party.  After receiving the third party's request, two actions happen in parallel: retrieving elaborations and retrieving the available data of the data subject.  Once both these retrieval tasks are complete, the data and elaborations are communicated to the third party. Finally, the same data and elaborations are communicated to the data subject, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "pg2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "pg1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "pg1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a3",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "pg2",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a9",
                        "targetRef": "end_event1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_cimino_3.json": {
        "0": {
            "text": "The process begins with a shipment request.  After receiving the request, two parallel processes are initiated: packaging the goods and selecting the kind of shipment.\n\nThe shipment selection leads to a decision. If quotes are required, the process continues with requesting quotes from carriers, assigning a carrier, and preparing the paperwork.  Alternatively, if quotes are not needed, the process proceeds directly to filling in a post label and checking the insurance.\n\nThe insurance check leads to another decision. If extra insurance is required, it is taken out. Regardless of this decision, the process converges and joins the parallel track of packaging the goods.\n\nOnce both the goods are packaged and the shipment details are finalized (with or without quotes, and with or without extra insurance), the paperwork is added to the package. Finally, the package is moved to the pickup area, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1_join",
                        "name": "PG1_join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "a0",
                        "targetRef": "j_D2"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "a8",
                        "targetRef": "j_D1"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "j_D2",
                        "targetRef": "j_D1"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "a14",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "j_D1",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "PG1_join",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "a17",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a shipment request.  After the request is received, two actions happen at the same time: the goods are packaged and the kind of shipment is selected.  \n\nBased on the kind of shipment chosen, the process branches. If quotes are needed, the next steps are to request quotes from carriers, assign a carrier, and then prepare the paperwork.  If quotes aren't needed, the process skips those steps and proceeds directly to filling in a post label and checking the insurance.\n\nAfter the insurance is checked, another decision is made. If extra insurance is required, it's taken out.  Regardless of whether extra insurance is needed or not, the process converges and the paperwork is added to the package.  At the same time, the packaged goods are also ready.  Finally, the package is moved to the pickup area, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "user"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "user"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "user"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "user"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "user"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "user"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "user"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "user"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "user"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "user"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "user"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Exclusive Decision 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a8",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "a0",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "PG2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "a14",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "a17",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a shipment request.  After the request is received, two things happen at the same time: the goods are packaged and the kind of shipment is selected.  \n\nBased on the kind of shipment chosen, the process branches. If quotes are needed, the next steps are to request quotes from carriers, assign a carrier, and then prepare the paperwork.  If quotes are *not* needed, the process skips those steps and proceeds directly to filling in a post label.\n\nAfter the post label is filled in, the insurance is checked.  This check leads to another decision point. If extra insurance is required, it is taken out.  If not, that step is skipped.  Regardless of whether extra insurance was needed, the process converges again.\n\nAt this point, the packaged goods, the paperwork (if any), and any extra insurance information are all brought together.  The paperwork is added to the package, and finally, the package is moved to the pickup area.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Exclusive Decision 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "D2",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a0",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "a8",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "a14",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "PG2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_bpmai_1.json": {
        "0": {
            "text": "The process begins when a customer makes a request.  The request is then checked. Based on the check, a decision (D1) is made.\n\nIf a certain condition is met at D1, another decision (D2) follows.  At D2, the process splits into two parallel paths. One path involves manual registration, the other automatic registration. Regardless of the path taken, the next step for both is to search for an attraction provider.\n\nAfter searching, a decision (D3) is made. If a specific condition is met at D3, the customer proceeds to book the attraction. If the condition isn't met, the process loops back to the first decision point (D1).\n\nOnce the attraction is booked, another decision (D4) is made. This decision leads to two possible outcomes: receiving a booking confirmation or receiving a rejection.\n\nIf the booking is confirmed, a confirmation is sent to the customer, and then the process loops back to search for another attraction provider. If the booking is rejected, the process also loops back to search for another attraction provider.\n\nIf the initial check of the customer request (at D1) leads to a different outcome, the customer receives a notification, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D2",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D4",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D4",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a16",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D3",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a9",
                        "targetRef": "end_event_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving a customer request.  This request is then checked. Based on the check, the process proceeds.  There are two registration types: manual and automatic.  If the check leads to manual registration, the customer is manually registered. If the check leads to automatic registration, the customer is automatically registered.  Regardless of the registration type, the process continues with searching for an attraction provider.\n\nAfter searching, the process checks for provider availability. If a provider is available, the attraction is booked. If no provider is available, a notification is sent to the customer, and the process ends.\n\nFollowing booking, the process checks the booking status.  If the booking is confirmed, a confirmation is sent to the customer.  If the booking is rejected, a rejection is received. In both cases (confirmation or rejection), the process loops back to search for an attraction provider again. This loop continues until a booking is confirmed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "ReceiveTask"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "ManualTask"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "ServiceTask"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "SendTask"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "ReceiveTask"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "ReceiveTask"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "SendTask"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "SendTask"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check Request",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "Registration Type",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D3",
                        "name": "Provider Available",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D4",
                        "name": "Booking Status",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "D2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "D2",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "D3",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "D4",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "D4",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "a16",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a customer request.  Following this, the request is checked.  Based on the check, a decision is made.\n\nIf the check reveals specific criteria are met, the process proceeds to another decision point. At this point, there are two paths: one leads to manual registration, the other to automatic registration.  Regardless of whether registration is manual or automatic, the next step is to search for an attraction provider.\n\nAfter searching, another decision is made.  One path following this decision leads to booking the attraction.  After attempting to book, there's a final decision point. This decision branches into two outcomes: receiving a booking confirmation or receiving a rejection.\n\nIf a rejection is received, the process loops back to searching for an attraction provider. If a confirmation is received, a confirmation is sent to the customer, and then the process loops back to search for an attraction provider.\n\nAlternatively, if the initial check of the customer request reveals different criteria, the process skips registration and searching for a provider entirely. Instead, a notification is sent to the customer, and the process ends.  The process can also end if a specific outcome is reached after searching for an attraction provider, bypassing the booking attempt altogether.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Manual Task"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Service Task"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "Send Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Service Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "Send Task"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "Send Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "D2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "D2",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "D4",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "D4",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "a16",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_16",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_17",
                        "sourceRef": "D3",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_18",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_19",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_1_data_breach.json": {
        "0": {
            "text": "The process begins with retrieving breached data and then retrieving the breached subjects.  Following this, two actions happen in parallel: data loss limitation and notifying the national authority.\n\nAfter the national authority is notified, the stolen data is evaluated.  Based on this evaluation, the process branches.  If a certain condition is met (implied by \"D1\"), the security standard is evaluated. If the condition isn't met, a notification is sent, and the process moves towards its end.\n\nFollowing the security standard evaluation, another decision point (\"D2\") determines the next step. If a condition is met, a request is made to determine if the breached data needs to be communicated to the data subject.  If the condition isn't met, a notification is sent, and the process moves towards its end.\n\nAfter the request regarding data communication is made, a notification for the request is received.  Based on this notification (\"D3\"), the process either sends a notification or proceeds to the final stage.  Even if a notification is sent at this point, the process still continues to the final stage.\n\nRegardless of which path is taken through the decision points, the data loss limitation efforts, any notifications sent, and the final stage all converge in parallel before the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f0",
                        "sourceRef": "start",
                        "targetRef": "a0"
                    },
                    {
                        "id": "f1",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "D3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "a18",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "PG2",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with retrieving the breached data.  Following this, the breached subjects are also retrieved.  Then, two actions happen in parallel: data loss is limited, and the national authority is notified.  After notifying the national authority, the stolen data is evaluated.  Based on the evaluation's outcome (Decision 1), the process may or may not proceed to evaluate the security standard. Regardless of whether the security standard is evaluated, the process can proceed directly to sending a notification (if the outcome of Decision 1 is such that security standard evaluation is skipped). If the security standard *is* evaluated, the outcome of that evaluation (Decision 2) determines whether a request is made to determine if the breached data has to be communicated to the data subject. If such a request is made, a notification of the request is received.  The received notification (Decision 3) then determines whether a notification is sent.  If the outcome of Decision 2 is such that no request is made, a notification is sent directly.  Also, if the outcome of Decision 1 is such that security standard evaluation is skipped, a notification is sent directly.  Finally, after the data loss limitation activity and the notification sending activity are both complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Service"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Service"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Service"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Service"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Service"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Service"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Service"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Service"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Exclusive Decision 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Exclusive Decision 3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s0",
                        "sourceRef": "start_event",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s1",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a18",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "PG2",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with retrieving breached data, followed by retrieving the affected subjects.  After these initial steps, two parallel actions take place: data loss limitation and notifying the national authority.  Once the national authority is notified, the stolen data is evaluated.  Based on this evaluation, a decision is made: if further action is required, the security standard is evaluated.\n\nFollowing the security standard evaluation, another decision point occurs.  This decision determines whether a request about communicating the breach to the data subjects needs to be made. If the request is made, a notification regarding the request is received.  A final decision is then made based on this notification, which dictates whether a notification is sent.  However, it's important to note that a notification can also be sent directly after either the security standard evaluation or the initial data evaluation, bypassing the request process, depending on the decisions made at those points.\n\nMeanwhile, the data loss limitation activity, running in parallel to the notification pathway, eventually converges with the notification process.  Once both the notification activities and the data loss limitation are complete, the entire process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Manual"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Manual"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Manual"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Manual"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Manual"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Manual"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Manual"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Manual"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start_event_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Exclusive Decision 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Exclusive Decision 3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event_1",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow_16",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_17",
                        "sourceRef": "a18",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_18",
                        "sourceRef": "PG2",
                        "targetRef": "end_event_1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_bpmai_2.json": {
        "0": {
            "text": "The process begins when a patient comes to the hospital.  They then proceed to the front desk.  Next, the patient visits the nurse. The nurse then checks the patient's insurance.\n\nBased on the insurance check, one of two paths is taken. If the insurance is valid, the nurse checks the patient's state.  Following this, another decision is made:  If the patient's condition allows, they are sent home, ending the process.  If further treatment is needed, the patient is examined by a doctor.\n\nIf the insurance is not valid, the patient's registration status within the hospital system is checked. If the patient is not registered, they are registered and then pay a fee.  Whether registered or not, the patient proceeds to book an appointment with a doctor.\n\nAfter the doctor examines the patient, three possible outcomes exist: The patient might be hospitalized, sent to the pharmacy, or, if their condition allows, sent home. If hospitalized, the patient is booked for another appointment with the doctor, and the examination process repeats. If sent to the pharmacy, the patient visits the pharmacy, orders medicine, pays for it, receives it, and then returns to the doctor for another examination. If sent home after the examination, the patient returns to the doctor for another examination. This loop of examination and subsequent actions continues until the doctor determines the patient is well enough to be sent home, ultimately concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "User"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": null,
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a19"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D3",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s21",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s22",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s23",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s24",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s25",
                        "sourceRef": "D4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s26",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "s27",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s29",
                        "sourceRef": "D4",
                        "targetRef": "a21"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient arrives at the hospital.  They proceed to the front desk and then visit a nurse. The nurse checks the patient's insurance.\n\nIf the insurance is valid, the nurse checks the patient's condition. Based on this check, the patient is either sent home or further examined.\n\nIf the patient requires further examination, the doctor examines them. Following the examination, there are three possible outcomes: hospitalization, sending the patient to the pharmacy, or sending the patient home. If sent home, the patient is re-examined by the doctor. If hospitalized, the patient is booked for a doctor's appointment and then re-examined. If sent to the pharmacy, the patient visits the pharmacy, orders medicine, pays for it, receives the medicine, and is then re-examined by the doctor. This cycle of examination and subsequent actions (hospitalization, pharmacy, or going home) can repeat.\n\nIf the patient's insurance is not valid, the nurse checks if the patient is registered with the hospital. If not registered, the patient is registered and then pays a fee before being booked for a doctor's appointment.  If already registered, they are directly booked for a doctor's appointment.  After the appointment, the patient is examined by the doctor, and the same cycle of examination and subsequent actions (hospitalization, pharmacy, or going home) applies as described above.\n\nThe process ends when the patient is sent home after their condition is checked and deemed suitable for discharge.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "User"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": null,
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "a19-a22",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "a22-a24",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "a24-a7",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "a7-D1",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "D1-a1",
                        "sourceRef": "D1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "a1-D2",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "D2-a3",
                        "sourceRef": "D2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "D2-a18",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "a18-D3",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "D3-a15",
                        "sourceRef": "D3",
                        "targetRef": "a15"
                    },
                    {
                        "id": "a15-a10",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "D3-a12",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "a12-a23",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "a23-a26",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "a26-a27",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "a27-a25",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "a25-a18",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "D3-a13",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "a13-a18",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    },
                    {
                        "id": "a3-end",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "D1-a4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "a4-D4",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "D4-a5",
                        "sourceRef": "D4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "a5-a21",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "a21-a10",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "a10-a18-loop",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "a18-D5",
                        "sourceRef": "a18",
                        "targetRef": "D5"
                    },
                    {
                        "id": "D5-a15",
                        "sourceRef": "D5",
                        "targetRef": "a15"
                    },
                    {
                        "id": "D5-a12",
                        "sourceRef": "D5",
                        "targetRef": "a12"
                    },
                    {
                        "id": "D5-a13",
                        "sourceRef": "D5",
                        "targetRef": "a13"
                    },
                    {
                        "id": "start-a19",
                        "sourceRef": "start",
                        "targetRef": "a19"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient comes to the hospital.  They then proceed to the front desk.  After staying at the front desk, the patient visits a nurse. The nurse then checks the patient's insurance.\n\nBased on the insurance check, one of two paths is followed. If the insurance is not successful, the patient is checked for registration in the hospital system. If they are not registered, they are registered and then pay a fee.  Regardless of registration status, they then proceed to book an appointment with a doctor. If the insurance check *is* successful, the patient proceeds directly to having their state checked by a staff member.\n\nAfter the patient's state is checked (either directly after insurance verification or after registration and booking), a decision is made regarding treatment. If no treatment is needed, the patient is sent home and the process ends.\n\nIf treatment *is* needed, the patient is examined. Following the examination, a decision is made about the type of treatment.  There are three possible treatment paths:\n\n1. **Hospitalization:** The patient is hospitalized and the process ends.\n2. **Pharmacy Visit:** The patient is sent to the pharmacy. At the pharmacy, they order medicine, pay for it, and receive it. After receiving the medicine, the patient is re-examined, and the treatment type is reassessed, looping back through the three treatment options.\n3. **Sent Home:** The patient is sent home, then re-examined, and the treatment type is reassessed, again looping back through the three treatment options.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "User"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Insurance check successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Patient needs treatment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Treatment type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "Patient registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "Treatment type",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start_event",
                        "targetRef": "a19"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "D1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "D2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "D3",
                        "targetRef": "a15"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "f19",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f20",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f21",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f22",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f23",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f24",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "f25",
                        "sourceRef": "D4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f26",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "f27",
                        "sourceRef": "D4",
                        "targetRef": "a21"
                    },
                    {
                        "id": "f28",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f29",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f30",
                        "sourceRef": "a18",
                        "targetRef": "D5"
                    },
                    {
                        "id": "f31",
                        "sourceRef": "D5",
                        "targetRef": "a15"
                    },
                    {
                        "id": "f32",
                        "sourceRef": "a15",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "f33",
                        "sourceRef": "D5",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f34",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "f35",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "f36",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "f37",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "f38",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f39",
                        "sourceRef": "D5",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f40",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_7_right_to_be_forgotten.json": {
        "0": {
            "text": "The process begins with a request for data from a data subject.  The user then retrieves the requested data. Next, the user checks if the retrieved data is still relevant.\n\nHere, the process branches based on the relevance of the data. If the data is still relevant, the user explains why it is so.  This explanation completes this branch of the process and it merges back to the main flow.\n\nAlternatively, if the data is no longer relevant, the user eliminates the data. After elimination, the user sends a notification about the data elimination. This notification completes this alternative branch, and it also merges back to the main flow.\n\nAfter either the explanation of relevance or the notification of elimination, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about  elimination",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id-04c89c26-943b-43b9-b1c7-e8f534d00095",
                        "name": "Join",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id-8001419f-6b78-4392-9b64-29b3c769314e",
                        "sourceRef": "start",
                        "targetRef": "a9"
                    },
                    {
                        "id": "id-9495c476-2e41-4461-8c56-ffb7827e407d",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "id-4758388a-a7a0-48b0-8f6b-5425052e2e08",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "id-87020d63-e738-4c31-b351-f3988e4b3197",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "id-66857449-e35f-4890-b5f7-43680051f327",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "Data is still relevant"
                    },
                    {
                        "id": "id-5ac42f7c-9223-49a2-8804-e17c7b844884",
                        "sourceRef": "a3",
                        "targetRef": "id-04c89c26-943b-43b9-b1c7-e8f534d00095"
                    },
                    {
                        "id": "id-f707e232-490a-4f8f-a94b-f7b00423395f",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "Data is no longer relevant"
                    },
                    {
                        "id": "id-72251290-091d-41b1-8985-7a1242f30576",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "id-9d7579b9-440e-4982-b928-f274e59380b3",
                        "sourceRef": "a7",
                        "targetRef": "id-04c89c26-943b-43b9-b1c7-e8f534d00095"
                    },
                    {
                        "id": "id-30b6b1c8-9f99-4163-8a9c-0177f399167b",
                        "sourceRef": "id-04c89c26-943b-43b9-b1c7-e8f534d00095",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the reception of a data subject request.  Following this, the relevant data is retrieved.  Next, a check is performed to determine if the retrieved data is still relevant.  This check leads to a decision point:\n\n* **If the data IS still relevant:** An explanation is provided as to why the data remains relevant, and the process concludes.\n\n* **If the data IS NOT still relevant:** The data is eliminated.  A notification about the data elimination is then sent, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about  elimination",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Is data still relevant?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_a9",
                        "sourceRef": "start_event",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_a9_to_a0",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow_a0_to_a1",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_D1",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_D1_to_a3",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow_a3_to_end_event",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_D1_to_a6",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "No"
                    },
                    {
                        "id": "flow_a6_to_a7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_a7_to_end_event",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a request regarding a data subject.  Following the request, the relevant data is retrieved. A user then checks if the retrieved data is still relevant.  This check leads to a decision point:\n\n* **If the data IS still relevant:** The user must explain why the data remains relevant. After providing the explanation, the process ends.\n\n* **If the data IS NOT still relevant:** The data is eliminated using a script.  After the data is eliminated, a notification about the elimination is sent.  Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "Service Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "User Task"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "Manual Task"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "Script Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about  elimination",
                        "type": "Send Task"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Is data still relevant?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "startEvent1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "Yes"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "No"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a3",
                        "targetRef": "endEvent1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a7",
                        "targetRef": "endEvent1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_fouad_3.json": {
        "0": {
            "text": "The process begins with a travel agent receiving a travel request from a customer.  The agent then prepares a tour plan based on the request and sends it to the customer. The customer reviews the plan and sends a response back to the agent.\n\nBased on the customer's response, the process branches. If the customer approves the plan, the agent proceeds to book the tour.  After booking, the agent charges the customer.\n\nFollowing the charge, there is another decision point. If the charge is successful, the agent sends the bill and the booking confirmation to the customer. If the charge is unsuccessful, the agent contacts the customer. Regardless of whether the charge was initially successful or not, the booking confirmation is eventually sent to the customer after either a successful charge or after contacting the customer regarding the unsuccessful charge. If the customer does not approve the initial tour plan, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour  plan",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Charge  customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a11",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D1",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a travel agent receiving a travel request from a customer.  The agent then prepares a tour plan based on the request and sends it to the customer. The customer reviews the plan and sends a response back to the agent.\n\nBased on the customer's response, the process takes one of two paths. If the customer approves the plan, the agent proceeds to book the tour. If the customer does not approve the plan, the process ends.\n\nAfter booking the tour, the agent charges the customer.  Following the charge, there's another decision point. If the charge is successful, the agent sends a bill to the customer. If the charge is unsuccessful, the agent contacts the customer. Regardless of whether a bill is sent or the agent contacts the customer, the next step is to send a booking confirmation to the customer.  Once the booking confirmation is sent, the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour  plan",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Charge  customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a11",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a travel request.  Once the request is received, a tour plan is prepared. This plan is then sent to the customer.  After the customer receives the plan, they respond.\n\nBased on the customer's response, the process takes a different path. If the response is positive (e.g., they approve the plan), the tour is booked.  If the response is negative (e.g., they reject the plan), the process jumps ahead to contacting the customer.\n\nAfter the tour is booked, the customer is charged.  Following the charge, there's another decision point. If the charge is successful, the process proceeds to sending the bill. If the charge is unsuccessful, the customer is contacted.\n\nRegardless of whether the charge was successful or not, the process converges at sending a booking confirmation to the customer.  After the confirmation is sent, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Charge customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_aris_3.json": {
        "0": {
            "text": "The process begins with receiving a production order.  Next, the necessary materials are prepared.  Following this, the door is assembled.\n\nNow, two parallel processes begin.  One involves sending an inquiry for a quality check. This inquiry is received, the quality is checked, and a quality report is sent back.  The other parallel process simply waits for the quality report.\n\nOnce the quality report is received, a decision is made based on the report's contents. If the report indicates that the door needs fixing (represented by the \"true\" condition on the decision), the door is fixed. If the report indicates the door is acceptable (represented by the \"false\" condition), the door is released.\n\nRegardless of whether the door was fixed or directly released, the two parallel processes converge. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materrials",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "decision_D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a3",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "loop_start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a6",
                        "targetRef": "decision_D1"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "decision_D1",
                        "targetRef": "a10",
                        "condition": "true"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a10",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "decision_D1",
                        "targetRef": "a8",
                        "condition": "false"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "a8",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "loop_end",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving a production order.  Following this, the materials required for assembling a door are prepared. The next step is to assemble the door. Once assembled, an inquiry for a quality check is sent.  This inquiry is then received by the quality control department, who perform the quality check and send back a quality report.  Upon receiving the quality report, a decision is made based on whether the quality check was satisfactory or not. If the quality check is not satisfactory (\"no\" path from the \"Quality check ok?\" decision), the door needs to be fixed, and the process loops back to the door assembly stage.  If the quality check is satisfactory (\"yes\" path from the \"Quality check ok?\" decision), the door is released, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materials",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Quality check ok?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id1",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "id2",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id3",
                        "sourceRef": "a3",
                        "targetRef": "a5"
                    },
                    {
                        "id": "id4",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "id5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "id6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "id7",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "id8",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "a10",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a production order.  Next, the materials required for the order are prepared.  Following this, the door is assembled.\n\nNow, two parallel actions take place.  An inquiry for a quality check is sent.  Simultaneously, this inquiry is received and the quality check is performed.  The results of this check are then sent back as a quality report.\n\nOnce the quality report is received, a decision is made. If the report indicates that the door needs fixing, the door is fixed and the process continues. If the report indicates the door is acceptable, it is released.  Regardless of whether the door was fixed or directly released, the process then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materials",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "decision_D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "loop_start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a6",
                        "targetRef": "decision_D1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "decision_D1",
                        "targetRef": "a10",
                        "condition": "true"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "decision_D1",
                        "targetRef": "a8",
                        "condition": "false"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a8",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "loop_end",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_bpmai_3.json": {
        "0": {
            "text": "The process begins with a call to the hospital.  Following the call, a decision is made regarding patient acceptance.\n\nIf the patient is accepted, they are added to the patient list.  Then begins a looping process of patient control. This means the patient's condition is checked repeatedly.  As long as further checks are needed, the process loops back to the patient control step.\n\nOnce the patient is ready, they are called to the hospital and hospitalized.  Childbirth then occurs.\n\nAfter childbirth, the patient's condition is checked.  If the patient's condition is good, they undergo post-hospitalization procedures and the process ends.  However, if the patient requires special treatment, they receive it, and then the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision about patient acceptance",
                        "type": "Exclusive"
                    },
                    {
                        "id": "loop_start",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Check patient condition",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "a13",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "loop_start",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a4",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "loop_start",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "a16",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a call to the hospital.  Following the call, a decision is made regarding patient acceptance. If the patient is accepted, they are added to the patient list.  \n\nNext, a repeating cycle begins. The patient's condition is checked.  If further checks are needed, the process loops back to the patient control step. This continues until the patient's condition meets the criteria for the next stage.  Once the checks are complete, the patient is called to the hospital and hospitalized.\n\nAfter hospitalization, the patient gives birth.  Then, another decision is made based on the patient's condition. If the patient requires special treatment, that treatment is administered.  Otherwise, the patient undergoes post-hospitalization procedures.  Finally, regardless of whether special treatment was required or not, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision about patient acceptance",
                        "type": "Exclusive"
                    },
                    {
                        "id": "loop_start",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Check patient's condition",
                        "type": "Exclusive"
                    },
                    {
                        "id": "loop_end",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_a2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_a2_to_D1",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_D1_to_a13",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_a13_to_loop_start",
                        "sourceRef": "a13",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow_loop_start_to_a4",
                        "sourceRef": "loop_start",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a4_to_loop_end",
                        "sourceRef": "a4",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow_loop_end_to_loop_start",
                        "sourceRef": "loop_end",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow_loop_end_to_a14",
                        "sourceRef": "loop_end",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_a14_to_a15",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_a15_to_a6",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_a6_to_D2",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_D2_to_a16",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow_D2_to_a8",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_a16_to_end_event",
                        "sourceRef": "a16",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_a8_to_end_event",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a call to the hospital.  Following the call, a decision is made regarding patient acceptance. If the patient is accepted, they are added to the patient list.  \n\nOnce on the patient list, a loop begins. The patient undergoes regular control checks. This control and loop back repeats until a decision is made to call the patient to the hospital.\n\nAfter the patient is called in, they are hospitalized, leading to childbirth.  Following childbirth, there are two possible outcomes.  In the standard case, the patient undergoes post-hospitalization care and the process ends. However, if complications arise during childbirth, the patient receives special treatment before the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision about patient acceptance outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "Child birth outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a13",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "loop_start",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a4",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "loop_end",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "loop_end",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a16",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_redeker_5.json": {
        "0": {
            "text": "The process begins with the patient arriving at the hospital.  Next, the room for surgery is prepared.  Following this, the surgery is performed.\n\nAfter the surgery, two tasks happen at the same time: the patient is discharged and the surgery room is sanitized. Once both the discharge and sanitization are complete, the report is filled.\n\nFinally, a decision is made.  If the conditions of the decision are met, the patient pays the bill.  The process ends once the bill is paid.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "parallel gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "exclusive decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "parallel gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_start_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_a1_to_a6",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_a6_to_a8",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_a8_to_PG1",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_PG1_to_a9",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_PG1_to_a12",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_a9_to_PG2",
                        "sourceRef": "a9",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_a12_to_PG2",
                        "sourceRef": "a12",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_PG2_to_a7",
                        "sourceRef": "PG2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_a7_to_D1",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_D1_to_a2",
                        "sourceRef": "D1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_a2_to_end_event",
                        "sourceRef": "a2",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient arrives at the hospital.  The first step is to prepare a room for surgery.  Once the room is prepared, the surgery is performed.\n\nAfter the surgery, two things happen simultaneously: the patient is discharged and the surgery room is sanitized.  Only after both the discharge and sanitization are complete, the surgical report is filled out.\n\nFollowing the completion of the report, a decision is made.  If the patient needs to pay a bill, they do so.  Whether a bill is paid or not, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "parallel gateway PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "join_gateway_PG1",
                        "name": "join PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "decision D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "join_gateway_D1",
                        "name": "join D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "join_gateway_PG1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "join_gateway_PG1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "join_gateway_PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a2",
                        "targetRef": "join_gateway_D1"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "join_gateway_D1",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient arrives at the hospital.  The first step is to prepare a room for surgery.  Once the room is prepared, the surgery is performed.\n\nAfter the surgery, two things happen simultaneously: the patient is discharged and the surgery room is sanitized.  When both the discharge and sanitization are complete, a report is filled out.\n\nFollowing the report, a decision is made.  If the patient needs to pay a bill, they do so.  Once the bill is paid (or if there's no bill to pay), the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Decision 1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a2",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_pufahl_4.json": {
        "0": {
            "text": "The process begins with an assessment of the patient's condition.  Following this, two actions happen concurrently: a physical examination is performed, and blood samples are drawn. The blood samples are then sent to a lab for analysis, and the results are received back. Once both the physical examination and the lab analysis are complete, a diagnosis is made.\n\nBased on the diagnosis, the process branches into two possible paths. If surgical intervention is required, the patient undergoes surgery and is subsequently discharged.  Alternatively, if surgery is not necessary, a surgical plan is developed (presumably for future reference), and the patient is discharged.  Regardless of the path taken, the process concludes with the patient's discharge.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a13",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "PG2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a7",
                        "targetRef": "a9"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "a14",
                        "targetRef": "a9"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with assessing the patient's condition.  Following this assessment, two actions happen concurrently: a physical examination is performed, and blood samples are drawn.  The blood samples are then sent to a lab for analysis, and the results are received back. Once both the physical examination and the lab results are available, a diagnosis is made.\n\nAfter the diagnosis, a decision is made: if surgical intervention is required, the surgery is planned and then performed. If surgery is not required, the process proceeds directly to planning the next steps. Regardless of whether surgery was performed or not, the process converges and the patient is discharged, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "j1",
                        "name": "j1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "j2",
                        "name": "j2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a3",
                        "targetRef": "j1"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a13",
                        "targetRef": "j1"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "j1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a7",
                        "targetRef": "j2"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "a14",
                        "targetRef": "j2"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "j2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with assessing the patient's condition.  Following this assessment, two actions happen concurrently: a physical examination is performed, and blood samples are drawn.  The blood samples are then sent to a lab for analysis, and the results are received back.  Once both the physical examination and the lab results are available, a diagnosis is made.\n\nBased on the diagnosis, the process branches into two possible paths. If surgical intervention is required, the surgery is planned and then performed. If surgery is not required, the planning stage is skipped, and the process proceeds directly.\n\nRegardless of whether surgery was performed or not, both paths converge, and the patient is discharged.  This marks the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "j1",
                        "name": "j1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "j2",
                        "name": "j2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a3",
                        "targetRef": "j1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a13",
                        "targetRef": "j1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "j1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a7",
                        "targetRef": "j2"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a14",
                        "targetRef": "j2"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "j2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_klessascheck_5.json": {
        "0": {
            "text": "The process begins with packaging the product.  After packaging, the product is shipped.  A decision (D1) is then made regarding the delivery method.\n\nIf the decision (D1) is to deliver to the door, the product is delivered to the door.  Following door delivery, another decision (D2) is made. If the recipient is available a pick-up receipt is printed and posted. If the recipient is not available, the package is rerouted to the closest station.\n\nIf the initial decision (D1) is to deliver to a station, the product is delivered to the station.  After delivery to the station, a final decision (D3) is made.\n\nRegardless of whether the package was rerouted after attempted door delivery, or initially delivered to the station, the final decision (D3) leads to the product being received back.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "None"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "None"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "None"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "None"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "None"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "None"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "None"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "None"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a12",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with packaging the product.  Once packaged, the product is shipped.  A decision (D1) is then made regarding the delivery method.\n\nIf the decision (D1) is to deliver to the door, the product is delivered to the door.  Following this, another decision (D2) is made. If the decision (D2) leads to printing a pick-up receipt, the receipt is printed and then posted.  After posting, the product is rerouted to the closest station.\n\nAlternatively, if the initial decision (D1) is to deliver to a station, the product is delivered to the station.  A final decision (D3) is then made.\n\nRegardless of whether the product was rerouted after door delivery or delivered directly to a station, if the decision (D3) dictates receiving the product back, the product is received back.\n\nFinally, after the product is received back, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a12",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with packaging the product.  After the product is packaged, it is shipped.  A decision (Decision 1) is then made regarding the delivery method.\n\nIf the decision is to deliver to the customer's door, the product is delivered, and then another decision (Decision 2) is made.  If the delivery is successful, a pick-up receipt is printed and posted.  Then, the product is rerouted to the closest station.\n\nHowever, if the initial decision (Decision 1) is to deliver to a station, the product is delivered to the station.\n\nRegardless of whether the product was delivered to the door or the station, and regardless of whether a pick-up receipt was needed, the process converges at a final decision point (Decision 3). After this decision, the product is received back, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Decision 3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a12",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_bpmai_2.json": {
        "0": {
            "text": "Category: Order Fulfillment\nTitle: Customer Order Fulfillment Process\n\nThe process begins when a customer order is received.  The customer's demand is then processed. Next, the required components for the order are determined based on planning data.  At this point, a check is performed to see if any parts are missing.\n\nIf parts are missing, they are purchased and put into stock. Once the missing parts are available, or if no parts were missing initially, production begins. After production, quality checks are performed.\n\nIf the quality check fails, follow-up production is performed.  Regardless of whether follow-up production was needed, the product is then filled into packaging, packed and labeled, and finally transported to the warehouse.  The final step is sending the product to the customer, which concludes the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "User Task"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "User Task"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "User Task"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "User Task"
                    },
                    {
                        "id": "a10",
                        "name": "Perform quality checks",
                        "type": "User Task"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "User Task"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "User Task"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "User Task"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "User Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "Send Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check for missing parts",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Quality check successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a8",
                        "condition": "Missing parts"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "No missing parts"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a15",
                        "condition": "Quality check failed"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a12",
                        "condition": "Quality check successful"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving a customer order.  Following this, the customer demand is processed.  Next, the required components for the order are determined based on planning.\n\nAt this point, a decision (D1) is made: Are all the necessary parts available? If not, the missing parts are purchased and put into stock before production begins. If all parts are available, production begins immediately.\n\nAfter production, quality checks are performed.  Another decision (D2) follows the quality check: Did the product pass the quality check? If not, follow-up production is performed, and then the product is filled into packaging. If the product passed the quality check, it proceeds directly to packaging.\n\nOnce packaged, the product is labeled, transported to the warehouse, and finally sent to the customer.  The process ends when the customer receives the product.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Perfor quality checks",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id_1",
                        "sourceRef": "start_event",
                        "targetRef": "a2"
                    },
                    {
                        "id": "id_2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "id_3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "id_4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "id_5",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "id_6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "id_8",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "id_9",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "id_10",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "id_11",
                        "sourceRef": "D2",
                        "targetRef": "a15"
                    },
                    {
                        "id": "id_12",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "id_13",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "id_14",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "id_15",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "id_16",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "id_17",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a customer order.  Following this, the customer's demand is processed.  Next, the required components for fulfilling the order are determined based on existing plans.\n\nAt this point, a check is performed to see if any parts are missing. If parts are missing, they are purchased and added to the stock.  Whether parts were missing or not, the process continues to production.\n\nAfter production, a quality check is conducted. If the quality check passes, the process moves on to filling the product into packaging. If the quality check fails, follow-up production is performed, and then another quality check is implied before proceeding to packaging.\n\nOnce the product is packaged, it is labeled, then transported to the warehouse. Finally, the product is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "User Task"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "User Task"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "User Task"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "User Task"
                    },
                    {
                        "id": "a10",
                        "name": "Perfor quality checks",
                        "type": "User Task"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "User Task"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "User Task"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "User Task"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "User Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "Send Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Missing Parts?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D1_end",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Quality Check?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2_end",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a8",
                        "condition": "Missing Parts"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a8",
                        "targetRef": "D1_end"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "D1_end",
                        "condition": "No Missing Parts"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1_end",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "D2_end",
                        "condition": "Quality Check Passed"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a15",
                        "condition": "Quality Check Failed"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a15",
                        "targetRef": "D2_end"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D2_end",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_tomaskova_4.json": {
        "0": {
            "text": "The process begins with Production Planning.  After planning is complete, workers are assigned.  Next comes Production Design, followed by Product Delivery.  Once the product is delivered, Production Logout occurs.  The process then moves to Quality Control.  At this point, a decision (D1) needs to be made.  If the product passes quality control, it is Registered to the finished stock and then moved to the Stock of finished goods, after which the process ends.  Alternatively, if the product does not pass quality control, it is Registered to the semi-finished stock and then Loaded to the semi-finished stock, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "loop_start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a6",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "loop_end",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a12",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with Production Planning.  Next, workers are assigned to the project.  Following this, the Production Design is created.  The product is then delivered. After delivery, a Production Logout occurs.  Quality Control then takes place.  \n\nAt this point, a decision (D1) is made. If the product passes quality control, it is registered to the finished stock and then moved to the finished goods stock, marking the end of the process.\n\nHowever, if the product does *not* pass quality control, it is registered to the semi-finished stock, loaded into that stock, and then the process ends.  If the product fails quality control, the process loops back to Production Planning and begins again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a12",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with Production Planning.  Next, workers are assigned to the project.  Following this, the Production Design is created.  The product is then delivered.  After delivery, a Production Logout occurs.  Quality Control is then performed.  At this point, a decision is made.\n\nIf the \"Loop End Decision\" criteria is met, the product is registered to the finished stock.  Then, the stock is moved to finished goods, and the process ends.\n\nAlternatively, if the \"Loop End Decision\" criteria is *not* met, the product is registered to the semi-finished stock.  It is then loaded into the semi-finished stock, and the process ends.  This implies that the loop from Quality Control back to Production Planning is only executed if the \"Loop End Decision\" criteria is not met.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Loop End Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a12",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_web_5.json": {
        "0": {
            "text": "The process begins when a user requests a booking.  The service then retrieves this booking request and checks the availability.\n\nIf the booking is available, the service sends a notification to the user. If the booking is *not* available, the service proposes an alternative time and *then* sends a notification to the user.  \n\nAfter receiving the notification, the user responds.  Based on the user's response, the process branches. If the user confirms the booking, the service confirms the booking and the process ends. If the user does *not* confirm the booking, the service sends the bill, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Service"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Service"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Service"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Service"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check availability?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Booking confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_0",
                        "sourceRef": "start_event",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_1",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "No"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "D2",
                        "targetRef": "a10",
                        "condition": "No"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "a10",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a user requests a booking.  The service then retrieves this booking request and checks the availability.\n\nNow, a decision point is reached: Is the requested booking time available?\n\nIf the booking time *is not* available, the service proposes an alternative time and sends a notification to the user about this proposed time.  If the booking time *is* available, the service skips proposing an alternative time and directly sends a notification to the user confirming the availability.\n\nAfter receiving the notification (either with the original booking confirmation or a proposed alternative time), the user responds.  This leads to another decision point: Did the user confirm the booking (either the original request or the proposed alternative)?\n\nIf the user *confirms* the booking, the service confirms the booking and the process ends.  If the user *does not* confirm the booking, the service sends the bill, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Service"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Service"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Service"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Service"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check availability?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Booking confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a10",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a user requests a booking.  The system then receives this booking request and checks the availability.\n\nNow, a decision is made based on the availability check. If the requested booking time is available, the system sends a notification to the user.  If the requested time is *not* available, the system proposes an alternative time and *then* sends a notification to the user.\n\nRegardless of whether an alternative time was proposed, the user receives a notification and then responds.  Based on the user's response, another decision is made. If the user confirms the booking (either the original time or the proposed alternative), the system confirms the booking. If the user does *not* confirm the booking, the system sends the user a bill and *then* confirms the booking.\n\nFinally, after the booking is confirmed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Service"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Service"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Service"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Service"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check availability?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Booking confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "No"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "Yes"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D2",
                        "targetRef": "a10",
                        "condition": "No"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "Yes"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a10",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_milanovic_4.json": {
        "0": {
            "text": "The process begins with a customer requesting a trip.  Once the request is received, two parallel processes are initiated. The first involves the airline selection: a price request is sent to multiple airlines, their responses are collected, and the customer then selects their preferred airline.  Simultaneously, the second process focuses on hotel selection: a price request is sent to multiple hotels, their responses are gathered, and the customer chooses their preferred hotel.  After both the airline and hotel have been selected, the tour plan is prepared.  Finally, the completed tour plan is sent to the customer, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Service"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Service"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Service"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Service"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "PG2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a customer requesting a trip.  Once the request is received, two parallel processes are initiated.  The first involves the airline selection: a price request is sent to multiple airlines, their responses are collected, and the customer then selects their preferred airline.  Simultaneously, the second process focuses on hotel selection: a price request is sent to multiple hotels, their responses are gathered, and the customer chooses their preferred hotel.  After both the airline and hotel have been selected, the tour plan is prepared. Finally, the completed tour plan is sent to the customer, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Service"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Service"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Service"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Service"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "pg2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "pg1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a4",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "pg1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a7",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "pg2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "Category: Travel Planning\nTitle: Trip Planning Process\n\nThe process begins with a customer requesting a trip.  After receiving the trip request, the process forks into two parallel paths.  On one path, the system sends a price request to various airlines, collects their responses, and then the customer selects an airline.  Simultaneously, on the other path, the system sends a price request to various hotels, collects their responses, and then the customer selects a hotel.  Once both the airline and hotel have been selected, the two paths converge.  The system then prepares a tour plan based on the customer's choices and sends the completed plan to the customer.  The process then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "user"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "service"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "service"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "user"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "service"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "service"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "user"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "service"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "service"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_PG1",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_to_a2",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_a2_to_a3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_a3_to_a4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a4_to_PG2",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_PG1_to_a5",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_a5_to_a6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_a6_to_a7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_a7_to_PG2",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_PG2_to_a10",
                        "sourceRef": "PG2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_a10_to_a11",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_a11_to_end",
                        "sourceRef": "a11",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_ferreira_4.json": {
        "0": {
            "text": "The process begins by getting temperature values. Based on these values, the process either generates a standard notification or proceeds down a more complex path.\n\nIf a standard notification is generated, it is then sent, and the process ends.\n\nIf the temperature values necessitate further action, several parallel processes begin.  These include getting the container status, the client's location, and the goods status.\n\nFor the container, its status is retrieved and then estimated. Based on this estimation, the process either loops back and retrieves the container status again, or it generates a container change request, which feeds back into the parallel processes.\n\nSimultaneously, the client's location is retrieved, and the distance is estimated. Based on this distance estimation, the delivery time is estimated.  This delivery time estimation then either loops back to the parallel processes or generates a route change request, which also feeds back into the parallel processes.\n\nAt the same time, the goods status is retrieved and then estimated. Based on this goods status estimation, the process either loops back to the parallel processes or proceeds to evaluate damages.  If damages are evaluated, a decision is made to either generate a removal request or a price change request. Both of these requests then feed back into the parallel processes.\n\nOnce all these parallel processes have completed their respective loops and requests, all generated messages are sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Service"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Service"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Service"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Service"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Service"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Service"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Service"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Service"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Service"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Service"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Service"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Service"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Service"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a4",
                        "targetRef": "a28"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D4",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a15",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "D3",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s21",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "s22",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "s23",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "s24",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s25",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "s26",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s27",
                        "sourceRef": "a25",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s28",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s29",
                        "sourceRef": "a26",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s30",
                        "sourceRef": "D5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s31",
                        "sourceRef": "PG1",
                        "targetRef": "a28"
                    },
                    {
                        "id": "s32",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with retrieving temperature values. Based on these values, a decision is made. If a specific condition related to the temperature is met, a standard notification is generated. Regardless of whether a notification is generated or not, several parallel processes are initiated.\n\nOne process involves getting the container status and then estimating this status. Based on the estimated status, another decision is made.  Depending on this decision, either the parallel processes continue, or a container change request is generated before the parallel processes continue.\n\nAnother parallel process involves getting the client's location and then estimating the distance. Based on this distance, a decision is made.  This decision leads to estimating the delivery time.  Following the delivery time estimation, yet another decision is made. Depending on this decision, either the parallel processes continue, or a route change request is generated before the parallel processes continue.\n\nA third parallel process involves getting the goods status and then estimating this status. Based on the estimated status, a decision is made. Depending on this decision, either the parallel processes continue, or the damages are evaluated.  After the damage evaluation, a final decision is made. This decision leads to either generating a removal request or a price change request.  Regardless of which request is generated, the parallel processes continue.\n\nOnce all these parallel processes \u2013 including any generated requests \u2013 are completed, all generated messages are sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Service"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Service"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Service"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Service"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Service"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Service"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Service"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Service"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Service"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Service"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Service"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Service"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Service"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "PG1",
                        "targetRef": "a28"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "a4",
                        "targetRef": "a28"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "D2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "D3",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "D4",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_21",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_22",
                        "sourceRef": "a15",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_23",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf_24",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "sf_25",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf_26",
                        "sourceRef": "D5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_27",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf_28",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "sf_29",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf_30",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "sf_31",
                        "sourceRef": "a25",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_32",
                        "sourceRef": "a26",
                        "targetRef": "PG1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with retrieving temperature values. Based on these values, the process follows one of two paths.  If the temperature values trigger a notification, a standard notification is generated and sent. Regardless of whether a notification is triggered, the process proceeds to retrieve the container status.\n\nThe container status is then estimated.  Depending on this estimation, the process might generate a container change request.  Regardless, the client's location is then retrieved, and the distance is estimated.\n\nBased on the distance estimation, the process may or may not estimate the delivery time. If the delivery time is estimated, the process might generate a route change request.  Whether or not the delivery time is estimated or a route change request is generated, the process continues by retrieving the goods status.\n\nThe goods status is then estimated.  Depending on this estimation, the process might evaluate damages.  If damages are evaluated, the process might generate a removal request or a price change request, or both.  Regardless of whether damages are evaluated or any requests are generated, the process continues.\n\nFinally, all generated messages (standard notification, container change request, route change request, removal request, and price change request, if any) are sent, and the process ends.  Note that the retrieval of container status, client location, and goods status, as well as the generation and sending of messages, always occur, while other actions depend on specific conditions and estimations.  Several actions can happen in parallel after the initial temperature check: getting container status, client location, and goods status.  These parallel processes converge before messages are sent.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Service"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Service"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Service"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Service"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Service"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Service"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Service"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Service"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Service"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Service"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Service"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Service"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Service"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Service"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a4",
                        "targetRef": "a28"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D4",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a15",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "D3",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s21",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "s22",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "s23",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "s24",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s25",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "s26",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s27",
                        "sourceRef": "a25",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s28",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s29",
                        "sourceRef": "a26",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s30",
                        "sourceRef": "D5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s31",
                        "sourceRef": "PG1",
                        "targetRef": "a28"
                    },
                    {
                        "id": "s32",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_2_consent_to_use_the_data.json": {
        "0": {
            "text": "The process begins with collecting several pieces of information.  The user starts by adding information about the logic of the processing, its significance, and the expected consequences.  Simultaneously, they also begin two separate inquiries.\n\nThe first inquiry focuses on data storage. The user checks if it's possible to determine how long the personal data will be stored. If it is possible, they retrieve the criteria used to determine this period and then retrieve the period itself. If it's not possible to determine the storage period, this part of the process simply concludes.\n\nThe second inquiry focuses on data subject rights. The user adds information about several rights: the right to rectify, access, erase, and port data, as well as the right to withdraw consent and lodge a complaint with a supervisory authority.\n\nOnce these initial steps are complete, the user checks if the data has been obtained directly from the data subject. If so, they retrieve the original source of the data.  If not, this step is skipped.\n\nNext, there are two more parallel checks. The user checks if the personal data can be transferred internationally. If it can, they add a note indicating this.  At the same time, they check if there are any recipients of the data. If there are, they retrieve a list of those recipients.\n\nFollowing these checks, the user investigates the legal basis for processing. They retrieve the legitimate interests for processing (if any), the general legal basis for processing, and the specific purposes of the processing.  They also retrieve the identity and contact details of the data controller.\n\nFinally, the user seeks information about the Data Protection Officer (DPO). They request the DPO's details and receive them.  They also collect information about consent and then ask for consent.  If consent is given, they receive confirmation. If consent is denied, they receive notification of the refusal.  After this final step, the entire process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "User"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are presents",
                        "type": "User"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "User"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "User"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposses",
                        "type": "User"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "User"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "User"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "User"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "User"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "User"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "User"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with collecting the identity and contact details, processing purposes, and the legal basis for processing.  Simultaneously, the user adds \"profiling about logic involved, significance and envisaged consequences of processing\".\n\nNext, there are several independent checks and actions that occur. The user checks if it is possible to determine the period for which personal data will be stored. If it is, they retrieve the criteria used to determine the period and the period itself.  If not, this part of the process simply moves forward.  Independently, the user checks if data has been obtained from the Data Subject. If so, they retrieve the source from which the personal data originated. If not, this step is skipped.  Another independent check is whether personal data can be transferred internationally. If it can, the user adds \"personal data will be transferred internationally\".  A further independent check involves determining if there are any recipients of the data. If there are, the user retrieves the recipients.  Finally, the user checks if there are any legitimate interests involved. If there are, the user retrieves those interests.\n\nAfter these independent checks and retrievals, the user adds several standard clauses regarding data subject rights: \"existence of the right to rectify of personal data\", \"existence of the right to access personal data\", \"existence of the right to erase personal data\", \"existence of the right to data portability\", \"existence of the right to withdraw\", and \"existence of the right to lodge a complaint to a supervisory authority\".\n\nAt this point, two parallel processes begin.  In the first, the user asks for DPO details and receives them. In the second, the user asks for consent.  If consent is received, the process continues. If consent is not received (negation is received), the process still continues.  Finally, if consent was requested, the user collects consent information.\n\nOnce all these steps are completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "User"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are presents",
                        "type": "User"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "User"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "User"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposses",
                        "type": "User"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "User"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "User"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "User"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "User"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "User"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "User"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a series of parallel actions.  We add \"profiling about logic involved, significance and envisaged consequences of processing\".  Simultaneously, we check if it is possible to determine the period for which personal data will be stored. If it *is* possible, we retrieve both the criteria used to determine that period *and* the period itself.  If it's *not* possible, we skip those steps. Regardless of whether we retrieve the storage period information, these actions converge.\n\nAt the same time as the above steps, we also perform several other actions in parallel:  We add \"existence of the right to rectify of personal data\", \"existence of the right to access personal data\", \"existence of the right to erase personal data\", \"existence of the right to data portability\", \"existence of the right to withdraw\", and \"existence of the right to lodge a complaint to a supervisory authority\".  Concurrently, we also check if data has been obtained from the Data Subject. If the data *was* obtained from the Data Subject, we retrieve the source from which the personal data originated. If *not*, we skip that retrieval.\n\nAgain, concurrently with the previous actions, we check if personal data can be transferred internationally. If it *can* be transferred, we add \"personal data will be transferred internationally\".  If *not*, we skip that addition.  Simultaneously, we check if recipients are present. If recipients *are* present, we retrieve the recipients. If *not*, we skip that retrieval.  And at the same time, we check if legitimate interests are present. If they *are* present, we retrieve the legitimate interests. If *not*, we skip that retrieval.\n\nWhile all of the above is happening, we also retrieve the processing legal basis and processing purposes.  Then, another set of parallel actions begins: We retrieve identity and contact details, and simultaneously ask for DPO details.  Once the DPO details are received, these parallel actions converge.\n\nAfter all of the initial parallel actions converge, and after the DPO details are received, we collect consent information and then ask for consent.  This leads to a decision point: If consent is *received*, the process ends.  If consent is *not* received (i.e., a negation is received), the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "User"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are presents",
                        "type": "User"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "User"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "User"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposses",
                        "type": "User"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "User"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "User"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "User"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "User"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "User"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "User"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_PG1",
                        "sourceRef": "start_event",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_to_a2",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_PG1_to_a4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a4_to_D1",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_D1_to_a6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_a6_to_PG1_join",
                        "sourceRef": "a6",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_D1_to_a7",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_a7_to_PG1_join",
                        "sourceRef": "a7",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_PG1_to_a9",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_PG1_to_a10",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_PG1_to_a11",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_PG1_to_a12",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_PG1_to_a13",
                        "sourceRef": "PG1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_PG1_to_a14",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_PG1_to_a15",
                        "sourceRef": "PG1",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_a15_to_D2",
                        "sourceRef": "a15",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_D2_to_a17",
                        "sourceRef": "D2",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow_a17_to_PG1_join",
                        "sourceRef": "a17",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_PG1_to_a19",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "flow_a19_to_D3",
                        "sourceRef": "a19",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_D3_to_a21",
                        "sourceRef": "D3",
                        "targetRef": "a21"
                    },
                    {
                        "id": "flow_a21_to_PG1_join",
                        "sourceRef": "a21",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_PG1_to_a23",
                        "sourceRef": "PG1",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow_a23_to_D4",
                        "sourceRef": "a23",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_D4_to_a25",
                        "sourceRef": "D4",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow_a25_to_PG1_join",
                        "sourceRef": "a25",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_PG1_to_a27",
                        "sourceRef": "PG1",
                        "targetRef": "a27"
                    },
                    {
                        "id": "flow_a27_to_D5",
                        "sourceRef": "a27",
                        "targetRef": "D5"
                    },
                    {
                        "id": "flow_D5_to_a29",
                        "sourceRef": "D5",
                        "targetRef": "a29"
                    },
                    {
                        "id": "flow_a29_to_PG1_join",
                        "sourceRef": "a29",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_PG1_to_a31",
                        "sourceRef": "PG1",
                        "targetRef": "a31"
                    },
                    {
                        "id": "flow_PG1_to_a32",
                        "sourceRef": "PG1",
                        "targetRef": "a32"
                    },
                    {
                        "id": "flow_PG1_to_PG2",
                        "sourceRef": "PG1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_PG2_to_a33",
                        "sourceRef": "PG2",
                        "targetRef": "a33"
                    },
                    {
                        "id": "flow_PG2_to_a35",
                        "sourceRef": "PG2",
                        "targetRef": "a35"
                    },
                    {
                        "id": "flow_a35_to_a38",
                        "sourceRef": "a35",
                        "targetRef": "a38"
                    },
                    {
                        "id": "flow_a38_to_PG2_join",
                        "sourceRef": "a38",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "flow_PG1_to_a39",
                        "sourceRef": "PG1_join",
                        "targetRef": "a39"
                    },
                    {
                        "id": "flow_a39_to_a37",
                        "sourceRef": "a39",
                        "targetRef": "a37"
                    },
                    {
                        "id": "flow_a37_to_D6",
                        "sourceRef": "a37",
                        "targetRef": "D6"
                    },
                    {
                        "id": "flow_D6_to_a41",
                        "sourceRef": "D6",
                        "targetRef": "a41"
                    },
                    {
                        "id": "flow_a41_to_end_event",
                        "sourceRef": "a41",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_D6_to_a40",
                        "sourceRef": "D6",
                        "targetRef": "a40"
                    },
                    {
                        "id": "flow_a40_to_end_event",
                        "sourceRef": "a40",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_5_right_to_withdraw.json": {
        "0": {
            "text": "The process begins with receiving a data subject request.  The request is then reviewed to determine if the withdrawn data is relevant.  If the data is deemed relevant, the use of that data is stopped, and the data subject is informed of the withdrawal. This concludes the process.\n\nHowever, if the withdrawn data is *not* considered relevant, the user is informed that withdrawing the data will halt all running business processes that utilize it.  The process then waits for the user to decide whether or not to proceed.\n\nIf the user chooses to continue, any running business processes using the withdrawn data are stopped.  Then, the use of the withdrawn data is stopped across the board, the data subject is informed of the withdrawal, and the process concludes.\n\nIf the user decides *not* to continue with the withdrawal after being informed of the consequences, the data subject is still informed that the withdrawal will stop all running business processes, and the process ends.  In this scenario, the data continues to be used and the business processes are not interrupted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "relevant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "continue?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "yes"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a5",
                        "targetRef": "end"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "no"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "yes"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving a data subject request.  The request is then reviewed to determine if the withdrawn data is relevant.  If the data is deemed relevant, the use of that data is stopped, and the withdrawal is communicated.\n\nHowever, if the data is *not* considered relevant, the user is informed that withdrawing the data will halt all running business processes that rely on it.  The user is then given the opportunity to decide whether or not to continue with the withdrawal.\n\nIf the user chooses to continue, the running business processes using the withdrawn data are stopped, the use of the data is ceased, and the withdrawal is communicated.  If the user decides *not* to continue, the withdrawal is simply communicated.  Regardless of the user's decision regarding continuation, the process concludes after the communication of the withdrawal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Relevant data?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Continue?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id_1",
                        "sourceRef": "start_event",
                        "targetRef": "a11"
                    },
                    {
                        "id": "id_2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "id_3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "id_4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "yes"
                    },
                    {
                        "id": "id_5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "id_6",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "no"
                    },
                    {
                        "id": "id_7",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "id_8",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "id_9",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "yes"
                    },
                    {
                        "id": "id_10",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "id_11",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "no"
                    },
                    {
                        "id": "id_12",
                        "sourceRef": "a5",
                        "targetRef": "end_event_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a data subject request.  This request then triggers a check to determine if the withdrawn data is relevant.  If the data *is* relevant, the process proceeds to stop using the withdrawn data and then communicate the withdrawal.  Following this communication, the process ends.\n\nHowever, if the initial check determines the withdrawn data is *not* relevant, a different path is taken.  The user is informed that the withdrawal will stop all running business processes.  The process then waits to receive notification about whether the user wants to continue.\n\nIf the user decides to continue using the data, the process moves to stop running business processes that use the withdrawn data.  After stopping these processes, the process *also* proceeds to the step of stopping the use of the withdrawn data and communicating the withdrawal, just like in the scenario where the data was relevant.  Finally, the process ends.\n\nIf the user decides *not* to continue using the data, the process skips stopping the running business processes and goes directly to stopping the use of the withdrawn data, communicating the withdrawal, and then ending.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "Manual Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "Manual Task"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "Manual Task"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "Manual Task"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "Receive Task"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "Manual Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check if withdrawn data are relevant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Continue using data?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "yes"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "no"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "yes"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a9",
                        "condition": "no"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a5",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}