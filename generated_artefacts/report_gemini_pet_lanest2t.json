{
    "9_3.json": {
        "0": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  Next, the Support Officer checks the proposed dates.  Following this check, the Support Officer suggests any necessary modifications to the schedule. The Coordination Unit then rechecks all the dates, incorporating the suggested modifications.  After rechecking, the Coordination Unit looks for any potential conflicts in the schedule.  Then, the Committee Members check their own diaries against the proposed schedule. Finally, the Committee Members advise the Coordination Unit of any conflicts they have identified, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer checks the dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Coordination Unit rechecks all dates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Coordination Unit looks for potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Committee Members check their diaries",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Committee Members advise of any conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit drafting a schedule and adding draft dates.  Next, the Support Officer reviews these dates and suggests any necessary modifications.  Following this, the Coordination Unit rechecks the modified dates, specifically looking for any scheduling conflicts. Finally, the Committee Members check their own diaries and advise the Coordination Unit of any conflicts they may have with the proposed schedule.  Once the Committee Members have provided their feedback, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts schedule and adds draft dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer checks dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Coordination Unit rechecks dates and looks for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  Next, the Support Officer checks the proposed dates.  Following this check, the Support Officer suggests any necessary modifications to the schedule. The Coordination Unit then rechecks all the dates, incorporating the suggested modifications.  After rechecking, the Coordination Unit looks for any potential conflicts in the schedule.  Then, the Committee Members check their own diaries against the proposed schedule. Finally, the Committee Members advise the Coordination Unit of any conflicts they have identified, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer checks the dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Coordination Unit rechecks all dates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Coordination Unit looks for potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Committee Members check their diaries",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Committee Members advise of any conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_7.json": {
        "0": {
            "text": "The process begins with the Measurement Service Provider Network (MSPN) registering the measurement.  Following this registration, the Grid Operator (GO) examines the MSPN's application.  Based on the GO's examination, a decision is made.\n\nIf the GO rejects the application, the process ends.\n\nHowever, if the GO confirms the application, the process continues. The GO then assigns the MSPN.  After the assignment, the GO informs the Measurement Service Provider Operator (MSPO) about the assignment.  Subsequently, the GO informs the Meter Point Operator (MPO) about the assignment.  Finally, the GO informs the Service Provider (SP) about the assignment, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO rejects the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO confirmes the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the MSPO about the assignment of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs the MPO about the assignment of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO informs the SP about the assignment of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the MSPN registering the measurement.  Following this, the GO (presumably a Governing Official) examines the application.  Based on the examination, the GO makes a decision regarding the application's outcome.\n\nIf the application is rejected, the process ends.\n\nIf the application is confirmed, the GO assigns the MSPN.  After the assignment, the GO informs the MSPO (likely a Measurement System Process Owner), the MPO (likely a Measurement Process Owner), and finally the SP (likely a Service Provider) about the assignment. Once the SP has been informed, the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO rejects the application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO confirms the application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs MSPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO informs SP about assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the Measurement Service Provider Network (MSPN) registers the measurement at the Governmental Organization (GO).  Following this, the GO examines the MSPN's application.  Based on this examination, the GO makes a decision.\n\nIf the GO rejects the application, the process ends.\n\nIf the GO confirms the application, the process continues. The GO then assigns the MSPN.  After the assignment, the GO informs the Measurement Service Provider Organization (MSPO) about the assignment.  Next, the GO informs the Measurement Provider Organization (MPO) about the assignment. Finally, the GO informs the Service Provider (SP) about the assignment, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN registers the measurement at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO rejects the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO confirmes the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the MSPO about the assignment of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs the MPO about the assignment of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO informs the SP about the assignment of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_5.json": {
        "0": {
            "text": "The process begins when MPON (Mobile Phone Operator Network) requests a device takeover bid.  This request is then sent to MPOO (Mobile Phone Operator Organization).  Next, MPOO sends a tender for the equipment takeover back to MPON.  MPON then places an order based on the received tender.  Finally, MPOO confirms the order and sends the master data to MPON, completing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO confirms order and sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when MPON (Mobile Phone Operator Network) requests a device takeover bid.  Following this request, MPOO (Mobile Phone Operator Organization) sends a tender for the equipment takeover.  MPON then places an order based on the received tender.  Finally, MPOO confirms the order and sends the master data, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order and sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id6",
                        "name": "MPON",
                        "lanes": []
                    },
                    {
                        "id": "id7",
                        "name": "MPOO",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the Mobile Phone Operator Network (MPON) requests a device takeover bid. This request is then sent to the Mobile Phone Operator Organization (MPOO).  Following this, the MPOO sends a tender for the equipment takeover back to the MPON.  The MPON then places an order based on the received tender.  Finally, the MPOO confirms the order and sends the master data to the MPON, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order and sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ]
            }
        }
    },
    "10_13.json": {
        "0": {
            "text": "The process begins with the INQ (likely an inquirer or inquiring system) transmitting a request for transaction data.  Next, the IP (likely an information provider or processing system) checks or reviews the submitted request.  Based on this check, a decision is made. If the check is successful, the IP answers the question within the request.  Following this answer, the data is transmitted.  This transmission completes the process.  However, if the initial check by the IP is not successful, the request is rejected. This rejection also concludes the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits the transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the question",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Transmission of data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Outcome of the examination?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the INQ transmitting a request for transaction data.  Next, the IP checks the received request. Based on this check, there are two possible outcomes. If the check is successful, the IP answers the question and the data is transmitted, concluding the process.  Alternatively, if the check is unsuccessful, the request is rejected, also concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "INQ transmits the transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP answers the question",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Transmission of data",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Outcome of the examination?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gw1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the INQ transmitting a transaction data request.  Next, the IP checks the request. Based on the outcome of this examination, several paths are possible. If the IP can answer the question directly, they do so, and the process ends.  Alternatively, if the examination leads to the decision to transmit data, the data is transmitted, and the process ends.  Finally, if the request is rejected, a rejection is issued, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits the transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the question",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Transmission of data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Outcome of the examination",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_11.json": {
        "0": {
            "text": "The process begins with the Grid Operator (GO) requesting measurements.  The Measurement Service Provider (MSP) then checks the received request.  Based on this check, the MSP makes a decision.\n\nIf the request is denied, the MSP denies the request of the GO, and the process ends.\n\nIf the request is accepted, the MSP performs the measurement. Following the measurement, another decision is made.  If the measurement fails, the MSP informs the GO about the failure, and the process ends.\n\nIf the measurement is successful, the MSP transmits the measured values to the GO. The GO then processes these measured values and sends any changed values back to the MSP.  Finally, the GO transmits the readings to the Service Provider (SP), and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO requests the measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP checks the received request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP denies the request of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP performs the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs the GO about the failure of the reading",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits the measured values to the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes the measured values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends the changed values to the MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO transmit the readings to the SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Decision 2",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with the Grid Operator (GO) requesting measurements.  The Measurement Service Provider (MSP) then checks the validity of this request.\n\nIf the MSP denies the request, the process ends there.  However, if the request is approved, the MSP proceeds to perform the measurement.\n\nFollowing the measurement attempt, there's another decision point. If the reading was unsuccessful, the MSP informs the GO of the failure, and the process ends.\n\nBut, if the reading is successful, the MSP transmits the measured values to the GO. The GO then processes these values, potentially making adjustments or calculations.  After processing, the GO sends any changed values back to the MSP. Finally, the GO transmits the final readings to the Service Provider (SP), concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO requests measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP checks request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP denies request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP performs measurement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs GO of failure",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits values to GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends changed values to MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO transmits readings to SP",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Reading successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id13",
                        "name": "MSP",
                        "lanes": []
                    },
                    {
                        "id": "id14",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the Grid Operator (GO) requests measurements. This request is sent to the Measurement Service Provider (MSP).  The MSP then checks the request.  If the MSP denies the request, the GO is informed of the denial and the process ends.\n\nHowever, if the MSP approves the request, they perform the measurement.  After attempting the measurement, there are two possible outcomes. If the reading is unsuccessful, the MSP informs the GO of the failure, and the process ends.\n\nIf the reading is successful, the MSP transmits the measured values to the GO. The GO then processes these values and sends any changed values back to the MSP. Finally, the GO transmits the final readings to the Service Provider (SP), and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO requests measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP checks request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP denies request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP performs measurement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs GO of failure",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits values to GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends changed values to MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO transmits readings to SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Reading successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id14",
                        "name": "MSP",
                        "lanes": []
                    },
                    {
                        "id": "id15",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id3",
                        "targetRef": "id1"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "mf6",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    }
                ]
            }
        }
    },
    "9_4.json": {
        "0": {
            "text": "The process begins with the Coordination Unit finalizing the dates for a committee meeting.  Following this, the Support Officer updates the relevant calendars and creates the necessary folders for the meeting.  The Support Officer then uploads the relevant documents to these folders.  Next, the Committee Members review the uploaded documents.  After reviewing the documents, the Committee Members hold their meeting.  The Support Office then produces the minutes of the meeting.  The Coordination Unit then conducts a quality assurance check on the minutes.  Once the quality check is complete, the minutes are sent to the Committee Members.  Finally, the Support Officer updates the records, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit finalizes dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer updates calendars and creates folders",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer uploads documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members review documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Support Office produces minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit conducts QA check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Minutes sent to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Support Officer updates records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit finalizing the dates for a meeting.  Following this, the Support Officer updates the relevant calendars and creates the necessary meeting folders.  The Support Officer then uploads the pertinent documents for the meeting.  Next, the Committee Members are expected to read these uploaded documents.  After reviewing the materials, the Committee Members hold their meeting.  The Support Office then produces the minutes of the meeting.  The Coordination Unit then conducts a quality assurance check of the minutes.  Once the quality check is complete, the minutes are sent to the Committee Members.  Finally, the Support Officer updates the departmental records, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit finalizes dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer updates calendars and creates meeting folders",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer uploads documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members read related documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Support Office produces minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit conducts QA check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Minutes sent to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Support Officer updates departmental records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Coordination Unit finalizing the dates.  Following this, the Support Officer updates the calendars and creates the necessary folders.  Next, the Support Officer uploads the relevant documents.  Once the documents are uploaded, the Committee Members are then tasked with reading them.  After reviewing the documents, the Committee Members hold a meeting.  The Support Office then produces the minutes and action points from the meeting.  The Coordination Unit then conducts a quality assurance check of the minutes and action points.  Once the check is complete, the minutes are sent to the Committee Members.  Finally, the Support Officer updates the records, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit finalizes dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer updates calendars and creates folders",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer uploads documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members read documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Support Office produces minutes and action points",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit conducts QA check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Minutes sent to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Support Officer updates records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_1.json": {
        "0": {
            "text": "The process begins with a request for warrant possession being sent.  Upon receiving the request, the next step is to retrieve the SCT file.  Following retrieval, the SCT Warrant Possession is forwarded.  The SCT physical file is then stored.  After storage, a report is received.  The next action is to retrieve the respective SCT file.  A new SCT document is then attached to the file. Finally, the expanded SCT physical file is stored, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "send a warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "receive the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "retrieve the SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "forward SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "store the SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "receive the report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "retrieve the respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "attach the new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "store the expanded SCT physical file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a warrant possession request is sent.  Following this, the request is received, and the associated SCT (presumably, some kind of file or record) is retrieved.  This SCT Warrant Possession is then forwarded. The next step involves storing the physical file. After the physical file is stored, the respective SCT file is retrieved again. A new SCT document is then attached to the file. Finally, the expanded SCT physical file is stored, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Sends warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receives request and retrieves SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Forwards SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Stores physical file",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Retrieves respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Attaches new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Stores expanded SCT physical file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a party sends a warrant possession request.  Following this, the Client Service Back Office receives the request and retrieves the associated SCT (presumably, Secure Custody Transfer) file.  Next, the SCT Warrant Possession information is forwarded to the Queensland Police.  After the Queensland Police have received the information, the Back Office stores the physical file.  The Back Office then retrieves the respective SCT file, attaches the new SCT document, and finally stores the updated, expanded SCT physical file.  The process concludes at this point.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "party sends a warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Client Service Back Office receives the request and retrieves the SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "SCT Warrant Possession is forwarded to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Back Office stores the physical file",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Back Office retrieves the respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Back Office attaches the new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Back Office stores the expanded SCT physical file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_1.json": {
        "0": {
            "text": "The process begins when a service degradation is perceived.  The first step is to enter a problem report into the system. This report is then compared against the customer's Service Level Agreement (SLA). Based on this comparison, necessary counter measures and priorities are determined.\n\nNext, the customer's significance is determined.  If the customer is considered significant, the counter measures are re-prioritized, and the process loops back to determining necessary counter measures and priorities. If the customer is not significant, a detailed problem report is created.\n\nFollowing the creation of the detailed problem report, the problem is investigated.  This investigation determines whether the problem can be analyzed by Service Management. If it can, the problem is analyzed, and a trouble report is created. This trouble report then leads to the preparation of a final status report.\n\nIf the problem cannot be analyzed by Service Management, the process checks for problems. If problems are detected, the problem is analyzed, and a trouble report is created, which again leads to preparing a final status report. If no problems are detected, a notification about normal service execution is created, also leading to the preparation of the final status report.\n\nOnce the final status report is prepared, the process determines if counter measures are necessary. If they are, the process loops back to the beginning, where a problem report is entered into the system. If no counter measures are needed, corrective actions are undertaken.  Alternatively, a request for automatic resource restoration can be created.\n\nIf a request for automatic resource restoration is created, the process checks if the restoration request was received within two days. If it was, errors are tracked, corrective actions are undertaken, and a troubleshooting report is created. This troubleshooting report, along with the corrective actions taken after the final status report, leads to the creation of a problem resolution report.\n\nIf the restoration request was not received within two days, the process terminates.  The problem resolution report leads to the creation of a report for the customer. Finally, an SLA violation rebate is reported, and the entire process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Compare problem report to customer SLA",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Determine necessary counter measures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "t5",
                        "name": "Re-prioritize counter measures",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Perform analysis",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Check for problems",
                        "type": "User"
                    },
                    {
                        "id": "t11",
                        "name": "Create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Analyze problem",
                        "type": "User"
                    },
                    {
                        "id": "t13",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "t14",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "t15",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "t16",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "t17",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "t18",
                        "name": "Track errors",
                        "type": "User"
                    },
                    {
                        "id": "t19",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "t20",
                        "name": "Create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "t21",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "t22",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Service degradation perceived",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Process terminated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Customer type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Significant customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Analyzable by Service Management?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Problems detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Counter measures?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g6",
                        "name": "Restoration request received within 2 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t4",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g1",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t5",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t7",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g3",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g3",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "t8",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "t9",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t10",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g4",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "g4",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "t11",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "t12",
                        "targetRef": "t13"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "t13",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "t14",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "g5",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "g5",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "g5",
                        "targetRef": "t17"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "t15",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "t16",
                        "targetRef": "t21"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "t17",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "t18",
                        "targetRef": "t19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "t19",
                        "targetRef": "t20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "t20",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "t21",
                        "targetRef": "t22"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "g6",
                        "targetRef": "t18"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "t22",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "g6",
                        "targetRef": "e3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a Customer perceives service degradation.  TELECO's process starts by comparing the problem report to their Service Level Agreement (SLA).  Next, they determine the necessary counter measures and the significance of the customer.\n\nIf the customer is not significant, the process proceeds directly to creating a detailed problem report. If the customer *is* significant, a detailed problem report is also created, but this happens *after* re-prioritizing the counter measures based on the customer's importance.\n\nRegardless of customer significance, the next step is to investigate the problem.  Then, TELECO decides if the problem can be analyzed by Service Management.\n\nIf Service Management *can* analyze the problem, they perform an analysis and create a trouble report.  Simultaneously, Resource Provisioning checks for problems.  If problems are detected, they analyze the problem and create a *separate* trouble report. If no problems are detected, they create a notification about normal service execution.  Once both Service Management and Resource Provisioning have completed their parallel tasks, Service Management prepares a final status report.\n\nIf Service Management *cannot* analyze the problem, Resource Provisioning still checks for problems, analyzes any detected problems, creates a trouble report, and creates a notification if no problems are found, just as before.  Service Management skips the analysis and trouble report creation steps and proceeds directly to preparing the final status report.\n\nAfter the final status report, Service Management sends the actual service performance information to Customer Service and determines if counter measures are needed.\n\nIf counter measures are *not* needed, the actual service performance is sent to Customer Service, and the process splits.  A report for the customer is created by Customer Service and sent to the customer, and simultaneously, an SLA violation rebate is reported, if applicable. Both of these paths then end the process.\n\nIf counter measures *are* needed, there are three possibilities: undertake corrective actions and create a problem resolution report, *or* create a request for automatic resource restoration.  If corrective actions are taken, the process merges back with the flow after a restoration request, and a trouble-shooting report is created. This report is sent to Service Management to create a problem resolution report.  If a restoration request is created, the process waits for two days. After two days, Resource Provisioning tracks errors and undertakes corrective actions, creating a trouble-shooting report. This report is then used by Service Management to create a problem resolution report. Regardless of whether corrective actions were taken immediately or after a two-day wait, the process merges and continues to the split where a report for the customer is created and an SLA violation rebate is reported, ultimately ending the process along both paths.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine necessary counter measures",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Re-prioritize counter measures",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Perform analysis",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Check for problems",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Analyze problem",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Send actual service performance to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id25",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id27",
                        "name": "Track errors",
                        "type": "User"
                    },
                    {
                        "id": "id28",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id29",
                        "name": "Create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "id31",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id32",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id33",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer perceives service degradation",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "Wait for restoration request (2 days)",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id30",
                        "name": "Resource Provisioning terminates process",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id35",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id36",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Customer type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Significant customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Problem analyzable by Service Management?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Problems detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "end",
                        "type": "Parallel"
                    },
                    {
                        "id": "id21",
                        "name": "Counter measures?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "end",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id34",
                        "name": "end",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "TELECO",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id1",
                                    "id32",
                                    "id33",
                                    "id35"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Service Management",
                                "elemRefs": [
                                    "id9",
                                    "id11",
                                    "id12",
                                    "id19",
                                    "id20",
                                    "id22",
                                    "id23",
                                    "id25",
                                    "id31"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Resource Provisioning",
                                "elemRefs": [
                                    "id14",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id27",
                                    "id28",
                                    "id29",
                                    "id30"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Billing & Collections",
                        "lanes": []
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id29",
                        "targetRef": "id31"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id17",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id18",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id19",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id21",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id20",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id23",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id21",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id26",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id26",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id27",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id28",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id29",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id31",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id34",
                        "targetRef": "id32"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id34",
                        "targetRef": "id33"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id32",
                        "targetRef": "id35"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id33",
                        "targetRef": "id36"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a service degradation is detected.  A Customer Service employee enters a problem report, which is then compared to the Service Level Agreement (SLA). Based on this comparison, necessary countermeasures and priorities are determined.\n\nNext, the customer's significance is determined. If the customer is premium, a detailed problem report is created.  If not, the process evaluates if the problem report requires re-prioritization of countermeasures. If so, the countermeasures are re-prioritized, and the process loops back to determining necessary countermeasures and priorities based on the new prioritization.  If re-prioritization is not needed, a detailed problem report is created, just as with a premium customer.\n\nOnce the detailed problem report is created, Service Management investigates the problem.  After the investigation, the process again checks if the problem report requires re-prioritization of countermeasures. If so, the process loops back again to adjust countermeasures and priorities. If not, the process splits into three parallel paths:\n\n1. **Service Management Analysis and Reporting:** Service Management performs an analysis, creates a trouble report, and prepares a final status report.\n2. **Resource Provisioning Checks and Reporting:** Resource Provisioning checks for problems. If problems are found, they are analyzed, and a trouble report is created. If no problems are found, a notification about normal service execution is created.  Regardless of problems, a final status report is prepared.\n3. **Automatic Resource Restoration Request:** A request for automatic resource restoration is created. If this request isn't received within 2 days, the process ends.\n\nOnce all three parallel paths are complete (final status reports are prepared, and the restoration request is either received or the 2-day timeout expires), the process continues.  The process loops back to the beginning, with the Customer Service employee entering a problem report. This loop continues until the Service Management undertakes corrective actions based on the final status report and creates a problem resolution report.  This report is then used to create a report for the customer.  Finally, if applicable, an SLA violation rebate is reported, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer Service employee enters problem report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine necessary countermeasures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Reprioritize countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Service Management investigates problem",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Service Management performs analysis",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Resource Provisioning checks for problems",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Resource Provisioning analyzes problem",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Service Management undertakes corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Resource Provisioning tracks errors",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Resource Provisioning undertakes corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Service degradation detected",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "Customer is premium",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Restoration request not received within 2 days",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id27",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id25",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id25",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id25",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id25",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id25",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id25",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id25",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id26",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id26",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id26",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id17",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id18",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id22",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id17",
                        "targetRef": "id23"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_3.json": {
        "0": {
            "text": "The process begins with the registration of a claim.  Following registration, the claim is examined.  Next, a settlement recommendation is written. This recommendation is then checked.  Based on the check, a decision is made. If the check reveals that the recommendation needs to be revised, the recommendation is repeated and subsequently re-checked. This check and revision cycle can happen multiple times.  If the recommendation is deemed satisfactory after the check, the process proceeds with claim handling. Once claim handling is complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "register claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "examine claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "write settlement recommendation",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "check recommendation",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "repeat recommendation",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "proceed with claim handling",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "name": "Check Claim",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the registration of a claim.  Following registration, the claim is examined.  Next, a settlement recommendation is written. This recommendation is then checked.  If the check reveals that the recommendation needs to be revised, the recommendation is rewritten and checked again. This check and rewrite cycle can repeat until the recommendation is deemed satisfactory. Once the recommendation is deemed satisfactory, the process proceeds with claim handling and concludes when the claim handling is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Repeat Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Proceed with Claim Handling",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Claim Registered",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Claim Handled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Check Claim Status",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the registration of a claim.  Following registration, the claim is examined.  Next, a settlement recommendation is written for the claim. This recommendation then undergoes a check.  If the check is deemed \"OK,\" the process proceeds with claim handling and concludes. However, if the check is \"Not OK,\" the recommendation must be repeated. After the recommendation is repeated, the claim status is checked. If further action is needed, the process loops back to writing the settlement recommendation.  Otherwise, the process proceeds with claim handling and concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Repeat Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Proceed with Claim Handling",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Claim Registered",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Claim Handling Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Check OK/Not OK",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Check Claim Status",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_2.json": {
        "0": {
            "text": "The process begins on a timer at Assembler AG.  When the timer goes off, Assembler AG places an order. This order is then sent to the Supplier.  The Supplier processes the order and, once completed, sends an invoice back to Assembler AG.  Assembler AG receives the invoice, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Assembler AG places an order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "5",
                                    "6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "2",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins on a regular schedule (Periodic Start) with Assembler AG placing an order.  This order is then received and processed by the Supplier.  After processing the order, the Supplier sends an invoice to Assembler AG.  Finally, Assembler AG receives the invoice, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Assembler AG places an order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Periodic Start",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id5",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id6",
                        "name": "Assembler AG",
                        "lanes": []
                    },
                    {
                        "id": "id7",
                        "name": "Supplier",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins on a recurring schedule.  Assembler AG starts by placing an order. This order is then sent to the Supplier.  The Supplier processes the order.  After processing, the Supplier sends an invoice back to Assembler AG.  Assembler AG receives the invoice, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Assembler AG places an order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Assembler AG",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Supplier",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ]
            }
        }
    },
    "5_4.json": {
        "0": {
            "text": "The expense reimbursement process begins with an employee purchasing a product or service.  Following the purchase, the employee submits an expense report.  This report then goes to a reviewer.\n\nThe reviewer checks the report and makes a decision to either approve or reject it. If the report is rejected, the employee must edit the expense report and resubmit it to the reviewer. This creates a loop where the reviewer can repeatedly reject the report until it's satisfactory.\n\nIf the reviewer approves the report, it proceeds to a receipt check.  After checking the receipts, there's another decision point: either accept or reject the expenses. If rejected, the employee again has to edit and resubmit the expense report, creating another loop similar to the reviewer's approval process.\n\nOnce the expenses are accepted, they are processed. This involves linking the expense report to a payment system and waiting for payment confirmation.  After the payment is confirmed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "purchase product/service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "submit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "review expense report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "edit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "check receipts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "accept expenses for processing",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "link to payment system",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "wait for payment confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "approve/reject",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "accept/reject",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the purchase of a product or service.  Following the purchase, the user submits an expense report.  This report then goes to a reviewer. The reviewer makes a decision to either approve or reject the report.\n\nIf the report is rejected, the user must edit the expense report and resubmit it to the reviewer. This creates a loop where the report goes back and forth between the user and reviewer until it's approved.\n\nIf the report is approved, the reviewer checks the receipts.  If the receipts don't match the report, the user must again edit the expense report and the process loops back to the reviewer for approval.  If the receipts match the report, the expenses are accepted for processing.\n\nOnce accepted, the process connects to a payment system.  The process then waits for payment confirmation.  After the payment is confirmed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase product/service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review expense report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Edit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check receipts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept expenses for processing",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Link to payment system",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for payment confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Approve or reject",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipts match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The expense reimbursement process begins when an employee purchases a product or service.  Following the purchase, the employee submits an expense report.  The report then goes to the employee's supervisor for review.\n\nThe supervisor then makes a decision to either approve or reject the report. If the report is rejected, the employee must edit the expense report and resubmit it to their supervisor for another review. This cycle of review and editing can repeat until the supervisor approves the report.\n\nOnce the supervisor approves the report, it goes to the treasurer. The treasurer checks the receipts and items listed in the report.  The treasurer then decides whether to accept or reject the expenses. If the treasurer rejects the expenses, the employee must again edit the expense report, sending it back through the supervisor's review.\n\nIf the treasurer accepts the expenses, the process moves forward automatically, linking to the payment system.  The process then waits for payment confirmation.  Once payment is confirmed, the expense reimbursement process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee purchases a product or service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Employee submits an expense report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Supervisor reviews the expense report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Employee edits the expense report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Treasurer checks receipts and items",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Treasurer accepts expenses for processing",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Automatic activity links to payment system",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for payment confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Approve or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Accept or Reject?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_6.json": {
        "0": {
            "text": "The process begins when a claim is received.  The first step is to check the claimant's insurance. If they are not insured, the claim is rejected and the process ends.\n\nIf the claimant is insured, the severity of the claim is evaluated.  This evaluation determines the next steps.  If the claim is simple, the relevant forms are sent to the claimant.  If the claim is complex, the relevant forms are also sent to the claimant.  Regardless of the claim's complexity, the next step is to check if the claimant has completed the forms.\n\nIf the forms are complete, the claim is registered, and the process ends. If the forms are incomplete, the claimant is informed about the missing information and asked to update the forms.  Once the claimant submits the updated forms, they are checked again for completeness. This check for completeness and request for updates continues until the forms are complete.  Once complete, the claim is registered, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Evaluate Severity",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Check for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Inform to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Check Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Claim Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "Claim Registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Insured?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Simple or Complex?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "9",
                        "targetRef": "5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a claim is received. The first step is to check the claimant's insurance.  If the claimant is not insured, they are informed of the rejection, and the process ends.\n\nHowever, if the claimant is insured, the claim's severity is evaluated.  This evaluation determines the next steps. If the claim is simple, relevant forms are sent to the claimant.  If the claim is complex, the same forms are also sent.  Regardless of complexity, the received forms are then checked for completeness.\n\nIf the forms are complete, the claim is registered, and the process ends.  But, if the forms are incomplete, the claimant is informed that they need to update the forms.  Once the claimant submits the updated forms, they are checked again for completeness. This check for completeness repeats until the forms are finally complete, allowing the claim to be registered and the process to end.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Inform Claimant of Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Forms for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Insured?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Simple or Complex?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a claim is received. The first step is to check the claimant's insurance.  If the claimant is not insured, they are informed of the rejection, and the process ends.\n\nHowever, if the claimant is insured, the claim's severity is evaluated.  This evaluation determines whether the claim is simple or complex.  If the claim is simple, the relevant forms are sent to the claimant.  If the claim is complex, the same forms are also sent.\n\nOnce the forms are sent, regardless of claim complexity, the next step is to check if the forms have been completed by the claimant.  If the forms are complete, the claim is registered, and the process ends.\n\nIf the forms are incomplete, the claimant is informed that they need to update the forms.  After the claimant updates the forms, they are checked again for completeness. This check for completeness repeats until the forms are finally complete, allowing the claim to be registered and the process to conclude.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Inform Claimant of Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Forms for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Claim Registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Insured?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Simple or Complex?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "10_1.json": {
        "0": {
            "text": "The process begins when MPON sends a dismissal.  Next, MPOO reviews the dismissal.  Based on this review, MPOO makes a decision. If MPOO opposes the dismissal, that action is taken and the process ends.  Alternatively, if MPOO confirms the dismissal of MPON, that action is taken and the process also ends.\n",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON sents the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO confirmes the dismissal of MPON",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the MPON (presumably a Military Personnel Office North) sends a dismissal notice.  This notice is then reviewed by the MPOO (presumably a Military Personnel Office Overseeing).  Based on the MPOO's review, a decision is made.  If the MPOO opposes the dismissal, the process ends.  Alternatively, if the MPOO confirms the dismissal, the process also ends.  Therefore, there are two possible outcomes, both resulting in the end of the process: either the dismissal is opposed by the MPOO, or it is confirmed by the MPOO.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON sents the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO confirmes the dismissal of MPON",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "MPOO decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the MPON (presumably a Military Personnel Office North) sending a dismissal.  Following this, the MPOO (likely a Military Personnel Office Overseeing) reviews the dismissal.  The MPOO then faces a decision: either oppose or confirm the dismissal of the MPON.\n\nIf the MPOO opposes the dismissal, the process ends.\n\nIf the MPOO confirms the dismissal, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON sents the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO confirmes the dismissal of MPON",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "MPOO opposes or confirmes the dismissal",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_2.json": {
        "0": {
            "text": "The process begins with checking files.  After the files are checked, a decision is made: are files missing?\n\nIf files are missing, a search is initiated.  After the search, the files are tracked.\n\nIf files are *not* missing, the process proceeds directly to tracking the files.\n\nRegardless of whether a search was needed, once the files are tracked, they are handed over to an Associate.  Following this, the Judge's Lawlist is distributed.  Finally, directions hearings are conducted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Initiate search",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Track files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Files missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with checking files.  After the files are checked, a decision is made: are any files missing?\n\nIf files are missing, the next step is to search for them.  Once the search is complete, or if no files were missing initially, the process continues with tracking the files.\n\nAfter the files are tracked, they are handed over to an Associate.  Following this, the Judge's Lawlist is distributed.  Finally, directions hearings are conducted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Track files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Files missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with checking files.  After the files are checked, a decision is made: \"Are files missing?\"\n\nIf files are missing, a search is initiated.  If files are *not* missing, the process moves to tracking the files.\n\nRegardless of whether a search was initiated or the files were tracked, both paths converge.  The files are then handed over to an Associate.\n\nFollowing this handover, the Judge's Lawlist is distributed.  Then, directions hearings are conducted.  Once the directions hearings are complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Initiate search",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Track files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Files missing?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Join",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_1.json": {
        "0": {
            "text": "The process begins when an order is received. The first step is to decide whether to accept or reject the order.  If the order is rejected, the process ends there.\n\nHowever, if the order is accepted, the process continues with processing the part list.  Next, the required quantity of each part is checked.  This check leads to a decision point: are the parts available?\n\nIf all parts are available, they are reserved. If some parts are not available, they are back-ordered. Regardless of whether parts were reserved or back-ordered, the process converges to the next step: preparing for assembly.\n\nSimultaneously with the parts availability check, preparations for assembling begin. Once the preparations are complete, and regardless of whether parts were reserved or back-ordered, another decision point is reached: is everything ready to assemble?\n\nIf everything is ready, the bicycle is assembled.  After assembly, the bicycle is shipped, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "reject or accept the order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "process the part list",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "check the required quantity of each part",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "reserve the part",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "back-order the part",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "prepare for assembling",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "assemble the bicycle",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "ship the bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "7",
                        "name": "Parts Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "name": "Ready to Assemble?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "7",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "7",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "1",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The bicycle order process begins when an order is received. The first step is to decide whether to accept or reject the order.  If the order is rejected, the process ends with the \"Order Rejected\" outcome.\n\nIf the order is accepted, the part list is processed.  Next, the quantity of each part is checked.  If a part is available, it is reserved. If a part is not available, it is back-ordered.  These two actions, reserving and back-ordering, can happen independently of each other for different parts.\n\nSimultaneously, after the order is accepted, preparations for assembling the bicycle begin.  Once all parts have been processed (either reserved or back-ordered) and the assembly preparations are complete, the bicycle is assembled.  Finally, the assembled bicycle is shipped, and the process ends with the \"Bicycle Shipped\" outcome.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "reject or accept the order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "process the part list",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "check part quantity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "reserve part",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "back-order part",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "prepare for assembling",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "assemble bicycle",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "ship bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Order Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Part Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "All Parts Processed and Assembly Prepared?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The bicycle order process begins when an order is received. The first step is to decide whether to accept or reject the order. If the order is rejected, the process ends.\n\nIf the order is accepted, the part list for the bicycle is processed.  This leads to checking the required quantity of each part.  Based on the parts availability check, two paths may be followed simultaneously: reserving the part if it's available and back-ordering the part if it's not.  If a part is reserved, the quantity check is performed again to ensure all parts are accounted for. Similarly, if a part is back-ordered, it also triggers another quantity check once it becomes available. This loop continues until all parts are accounted for.\n\nConcurrently, while the parts check and reservation/back-ordering are happening, preparations for assembling the bicycle begin. Once the parts check is complete and the assembly preparations are finished, the bicycle is assembled.  Finally, the assembled bicycle is shipped, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "reject or accept the order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "process the part list",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "check the required quantity of each part",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "reserve the part",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "back-order the part",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "prepare for assembling",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "assemble the bicycle",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "ship the bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "8",
                        "name": "Parts Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "name": "Ready to Assemble?",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf_0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf_1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "8",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "8",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "6",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "7",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "4",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "12",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "5_2.json": {
        "0": {
            "text": "The Vacation Request process begins when an employee submits a vacation request.  The request is then registered. Next, the employee's supervisor receives the request. The supervisor then approves or rejects the request.  If the request is rejected, the application is returned to the employee. If the request is approved, a notification is generated and sent to the Human Resources department.  Finally, HR completes the necessary management procedures, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "supervisor approves the request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "return application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "generate notification",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "HR completes the respective management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The Vacation Request process begins when an employee submits a vacation request.  The request is then registered. Next, the employee's supervisor receives the request.  The supervisor then approves or rejects the request.\n\nIf the supervisor rejects the request, the application is returned to the employee.\n\nIf the supervisor approves the request, a notification is generated and sent to the Human Resources (HR) department.  HR then completes the necessary management procedures.  Once HR is finished, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "supervisor approves the request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "return application",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "generate notification",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "HR completes the respective management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Request Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The Vacation Request process begins when an employee submits a vacation request.  The request is then registered, after which it is received by the employee's supervisor. The supervisor then approves or rejects the request.  If the request is rejected, the application is returned to the employee. If the request is approved, a notification is generated and sent to Human Resources (HR).  Finally, HR completes the necessary management procedures, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "supervisor approves/rejects the request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "return application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "generate notification",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "HR completes the respective management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Request Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "6_4.json": {
        "0": {
            "text": "The process begins with determining the contact details of potential customers.  The next step is calling the customer and, upon making contact, determining the contact person and their budget.  Then, the customer is asked if they are interested.\n\nIf they are not interested, the process ends.\n\nIf they are interested, the process proceeds based on the size of their budget. If the budget is huge, the head of development personally tries to acquire the customer.  Following this personal interaction, there are two possible outcomes: a detailed online presentation is given, or the process ends.\n\nIf the budget isn't huge, the process simply ends.\n\nIf a detailed online presentation is given, there's a decision point: was a technical presentation also requested? If so, two things happen in parallel: a placeholder task occurs (id16) and another placeholder task occurs (id17).  Regardless of the outcome of these parallel tasks, the process converges and asks if the customer was contacted within two weeks.\n\nIf the customer was contacted within two weeks, the sales representative calls the customer.  If not, a quotation is created directly.  Whether the sales representative calls or not, the next step is to create a quotation, after which the process ends.\n\nIf no technical presentation was requested after the detailed online presentation, the process immediately checks if the customer was contacted within two weeks, and proceeds as described above (sales representative call or directly to quotation creation).\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "determine contact details of potential customers",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "determining the contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "asking whether customer is interested",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "head of development personally tries to acquire customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "sales representative calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "create quotation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Budget huge?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Customer contacted within 2 weeks?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "technical presentation?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id16",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id17",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with determining the customer's contact details.  There are different approaches to finding this information, leading to a decision point on how to proceed. One path involves directly calling the customer. After the call, the contact person and budget are determined.  This leads to another decision point: gauging the customer's interest.\n\nIf interested, there are two possible paths that converge.  One path involves the Head of Development personally trying to acquire the customer. The other path involves a detailed online presentation.  Both paths lead to the next step.\n\nAfter the Head of Development's involvement or the online presentation, there's a decision point based on whether the customer was contacted within two weeks. If contacted within two weeks, a sales representative calls the customer. If not contacted within two weeks, the process skips the sales representative call.\n\nRegardless of whether the sales representative calls, the next step is to create a quotation.  After the quotation is created, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "determine contact details",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "determining the contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Head of development personally tries to acquire the customer",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "sales representative calls customer",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "create quotation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "How to determine contact details?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "name": "Customer contacted within 2 weeks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with determining the customer's contact details.  From there, several contact methods are possible: cold calling, meeting at an exhibition, or reaching out through a mutual acquaintance.  Regardless of the chosen method, the next step is always to call the customer.\n\nAfter the initial call, the focus shifts to determining the customer's budget and identifying the relevant contact person.  Next, the customer's interest is gauged. If they are not interested, the process ends.\n\nHowever, if the customer expresses interest, the process continues.  A decision is made based on the size of their budget. If the budget is substantial, the Head of Development Acquisition gets involved.  Regardless of budget size, a detailed online presentation is given to the customer.\n\nFollowing the online presentation, there's a choice between a presentation by a sales representative or a presentation by a presales employee.  After either presentation, there's a two-week waiting period.\n\nAfter the waiting period, a check is performed to see if the customer has been contacted. If not, a sales representative calls the customer.  In either case \u2013 whether the customer was contacted or not \u2013 the next step is to create a quotation.  Once the quotation is created, the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine contact details",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Cold Calls",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Exhibition",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Contact through acquaintance",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Calling Customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Determine budget/contact person",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Interest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Head of Development Aquisition",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Sales representative presentation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Presales employee presentation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait 2 weeks",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Sales representative calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create quotation",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Contact method?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Huge budget?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Presentation type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Customer contacted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id16",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id17",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id18",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_12.json": {
        "0": {
            "text": "The process begins when an Existing Customer (EC) informs the Initial Inquiry (INQ) about changes they want to make to their master data.  The INQ then notifies the Issuing Party (IP) about these requested changes.  The IP then checks if the master data can be changed at the requested time.  Based on this check, there are two possible outcomes. If the IP confirms the changes, the process ends.  If the IP rejects the changes, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "EC tells the INQ about the change of his master data",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "INQ notifies the IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP checks whether the master data can be changed at the desired time",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "IP confirmes the changes of the INQ",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "IP rejectes the changes of the INQ",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Confirmation or Rejection?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an Existing Customer (EC) informs the Initial Inquiry (INQ) about changes they want to make to their master data.  The INQ then notifies the Issuing Party (IP) about these requested changes.  Next, the IP checks if the master data can be changed at the requested time.  Based on this check, a decision is made. If the IP confirms the changes, the process ends.  If the IP rejects the changes, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "EC tells the INQ about the change of his master data",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "INQ notifies the IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP checks whether the master data can be changed at the desired time",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "IP confirmes the changes of the INQ",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "IP rejectes the changes of the INQ",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Confirmation decision",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the Engineering Change (EC) team informs the Inquiry (INQ) team about a change in master data.  Following this, INQ notifies the Information Provider (IP) about the proposed change. The IP then checks whether the data can be changed.  This check leads to a decision point:  If the data *can* be changed, the IP confirms the changes, and the process ends.  Alternatively, if the data *cannot* be changed, the IP rejects the changes, and the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells INQ about master data change",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies IP of change",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks if data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects changes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_7.json": {
        "0": {
            "text": "The process begins with a search for the police report related to the claim.  Following this, the located report is filed with the other claim documentation.  Next, an initial estimate of the claim is calculated.  Based on this estimate, an action plan is created.  With the action plan in place, the next step is to negotiate a settlement.  Finally, the claimant is informed of the outcome of the settlement negotiation, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Put in File with Claim Documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Claimant of Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a search of the police report.  Following this, the report is filed with the other claim documentation.  Next, an initial estimate of the claim is calculated.  With the estimate complete, an action plan is created.  Then, negotiation for a settlement begins. Finally, the claimant is informed of the outcome, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Put in File with Claim Documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Claimant of Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a search of the police report.  Following this, the report is filed with the other claim documentation.  Next, an initial claim estimate is calculated.  Based on this estimate, an action plan is created.  Then, a settlement is negotiated. Finally, the claimant is informed of the outcome, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Put in File with Claim Documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Claimant of Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_1.json": {
        "0": {
            "text": "The process begins with backing up the database.  Next, the system checks the Account Defaulter table for new records.\n\nIf there are no new records, the system checks the CRM system for new returns.  If new returns exist, the system registers all defaulting accounts and customers.  Following this, the system checks if the defaulting client codes have been previously advised. If they haven't, the system produces a table of defaulting accounts and sends a report to account management.  This report should ideally be sent by 2:30 pm. Regardless of whether the report is sent by 2:30 pm or not, the process then checks the CRM system for new returns. If new returns are filed, the system reconciles them with the existing account defaulters table. This reconciliation should ideally be completed by 4:00 pm.  Regardless of whether the reconciliation is completed by 4:00 pm or not, the process ends.\n\nHowever, if after the initial database backup, new records *are* found in the Account Defaulter table, the process bypasses the CRM check and subsequent steps, and instead proceeds directly to checking if the defaulting client codes have been previously advised. From this point, it follows the same path as described above: producing a table of defaulting accounts, sending the report (ideally by 2:30 pm), checking the CRM for new returns, reconciling with the existing account defaulters table (ideally by 4:00 pm), and finally ending.\n\nIf the initial database backup is completed, but the 2:30 pm deadline for report sending is missed, the process immediately ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup the database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register all defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if defaulting client codes have been previously advised",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send report to account management",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Reconcile with existing account defaulters table",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "No new records found",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id5",
                        "name": "New returns exist",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Defaulting client codes not previously advised",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process completed by 2:30 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process not completed by 2:30 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id14",
                        "name": "New returns filed",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Reconciliation completed by 4:00 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Reconciliation not completed by 4:00 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id18",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id20",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id21",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id11",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with backing up the database.  Next, the system checks the Account Defaulter table for new records.\n\nIf new records are found, the system checks the CRM system for new returns.  If no new records are found, the process skips this check and proceeds directly to check the CRM system for new returns. Regardless of whether new records were found in the Account Defaulter table, the CRM system is checked for new returns.\n\nFollowing the CRM check for new returns, if new returns exist, the system registers all defaulting accounts and customers. If no new returns exist, the process proceeds to check the CRM system *again* for new returns.\n\nAfter registering defaulting accounts (if any), the system checks if the defaulting client codes have been previously advised.\n\nIf the codes have been previously advised, the system produces a table of defaulting accounts and sends a report to account management.  If the codes have *not* been previously advised, the process *also* proceeds to check the CRM system (a third time) for new returns.  Regardless of whether the codes were previously advised, the CRM system is checked again.\n\nAfter this third CRM check, if new returns are filed, the system reconciles them with the existing account defaulters table. If no new returns are filed at this stage, the process skips reconciliation.\n\nThe process has several points where it can end.  If the 2:30 pm deadline is reached after the report is sent to account management, an alert is sent to the supervisor, and the process ends.  If the 4:00 pm deadline is reached after reconciling with the existing account defaulters table, a message is sent to the supervisor, and the process ends.  Additionally, if no new returns are filed after the third CRM check, or if the 2:30 pm deadline is reached before the report is sent, the process ends with a \"Process Completed\" status.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup the database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register all defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if defaulting client codes have been previously advised",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send report to account management",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Reconcile with existing account defaulters table",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "2:30 pm deadline reached",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Send alert to supervisor",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "4:00 pm deadline reached",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Send message to supervisor",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "New records found?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id5",
                        "name": "New returns exist?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id8",
                        "name": "Previously advised?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id18",
                        "name": "New returns filed?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id18",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id18",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with backing up the database.  Next, the system checks the Account Defaulter table for new records.\n\nIf new records exist, the system checks the CRM system for new returns.  If new returns exist, the system registers the defaulting accounts and customers.  Following this, the system checks if the defaulting client codes have been previously advised.\n\nRegardless of whether the client codes were previously advised or not, the process continues. If they *were* previously advised, a table of defaulting accounts is produced and a report is sent to account management. If they were *not* previously advised, the process skips those steps.  Either way, the process pauses until the 2:30 pm deadline.\n\nIf there are *no* new records in the Account Defaulter table initially, the system still checks the CRM system for new returns, but through a separate path.  If new returns are found through this second check, the system reconciles them with the existing Account Defaulter table. This reconciliation process pauses until the 4:00 pm deadline.  If no new returns are found through this second check, the process also pauses until the 4:00 pm deadline.\n\nAfter the respective deadlines (2:30 pm or 4:00 pm, depending on the path taken), the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup the database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if defaulting client codes have been previously advised",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send report to account management",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Reconcile with existing account defaulters table",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "2:30 pm deadline",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id16",
                        "name": "4:00 pm deadline",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id19",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "New records in Account Defaulter table?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "New returns exist?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Defaulting client codes previously advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "New returns filed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "10_6.json": {
        "0": {
            "text": "The process begins when the MSPN sends a dismissal.  Next, the MSPO reviews the dismissal. Based on the review, the MSPO will either reject or confirm the dismissal. If the MSPO rejects the dismissal, the process ends.  Alternatively, if the MSPO confirms the dismissal, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sents a dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Review Dismissal",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MSPN",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "MSPO",
                        "lanes": []
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the MSPN sends a dismissal.  This dismissal is then reviewed by the MSPO.  The MSPO then makes a decision: either reject or confirm the dismissal. If the MSPO rejects the dismissal, the process ends.  If the MSPO confirms the dismissal, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sents a dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Dismissal Rejected or Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "idPool1",
                        "name": "MSPN",
                        "lanes": []
                    },
                    {
                        "id": "idPool2",
                        "name": "MSPO",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the MSPN sends a dismissal.  This dismissal is then reviewed by the MSPO.  The MSPO then makes a decision regarding the dismissal. If the MSPO rejects the dismissal, the process ends.  Alternatively, if the MSPO confirms the dismissal, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sents a dismissal",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Dismissal Review Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "idpool1",
                        "name": "MSPN",
                        "lanes": []
                    },
                    {
                        "id": "idpool2",
                        "name": "MSPO",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "idsf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "idsf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "idsf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "idsf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "idsf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "idsf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "idsf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "idmf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        }
    },
    "10_10.json": {
        "0": {
            "text": "The process begins when a fault detector reports a failure, or an MPO (presumably a Maintenance Process Owner) suspects a fault.  The MPO then examines the failure.  Following the examination, the MPO makes a decision:  Do they confirm the failure, or reject it?\n\nIf the MPO confirms the failure, they inform both the GO (likely a Governing Organization) and the MSP (likely a Managed Service Provider).  After informing these parties, the MPO fixes the fault.  Once the fault is fixed, the MPO shares the repair results.  Then, the MPO informs the GO that the issue is resolved, and separately informs the MSP that the issue is resolved.  After these notifications, the process ends.\n\nIf the MPO rejects the failure after examination, the process simply ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPO informs GO and MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPO fixes fault",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MPO shares repair results",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "MPO informs GO of resolution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "MPO informs MSP of resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Fault detector reports failure or MPO suspects fault",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "MPO confirms or rejects failure?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a fault detector reports a failure, or an MPO (presumably a Maintenance, Planning, or Operations entity) suspects a fault.  The MPO then examines the failure.  Following the examination, the MPO makes a decision: either confirm the failure or reject it.\n\nIf the MPO confirms the failure, the process skips ahead to a later stage (represented by an unspecified outcome \"id3\" and \"id7\" and eventually \"id9\"). We can infer that this likely represents a continuation of the process to address the confirmed failure, but the provided model doesn't give us the details of those steps.\n\nIf the MPO rejects the failure, they proceed to fix the fault at the measuring device. After fixing the fault, the MPO shares the results of the repairs with the initial fault detector. This sharing of results then leads to the same later stage of the process as when the failure was confirmed (represented again by the unspecified outcome \"id8\" and then \"id9\").  This suggests a point of convergence in the process, regardless of whether the failure was initially confirmed or rejected and subsequently fixed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPO fixes the fault at the measuring device",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPO shares the results of the repairs carried out with the fault detector",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Fault detector reports failure or MPO has suspicion of fault",
                        "type": "StartNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "MPO confirms or rejects failure",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with an MPO (presumably a Maintenance, Planning, or Operations role) examining a failure.  Following the examination, a decision is made.  One path of this decision leads directly to the end of the process. The other path involves the MPO fixing the fault. After fixing the fault, the MPO shares the results of the repairs. This then leads to the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPO fixes the fault",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPO shares the results of the repairs",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "1_3.json": {
        "0": {
            "text": "The Room Service process begins when a guest calls room service.  The first step is taking the guest's order.  After the order is taken, the order ticket is submitted to the kitchen to begin food preparation.  Simultaneously, the order details are given to the sommelier.\n\nAt this point, a decision is made based on whether wine or other beverages are included in the order. If the order *does* include wine or other beverages, the sommelier fetches the wine and prepares the requested beverages. If the order *does not* include wine or other beverages, this step is skipped.  Regardless of whether beverages are included, the order is assigned to a waiter.\n\nWhile the food is being prepared, and potentially while the sommelier is fetching beverages, the waiter readies the cart and prepares any non-alcoholic drinks that are part of the order.  Once the food, beverages (if any), and non-alcoholic drinks (if any) are ready, and the cart is prepared, the waiter delivers the complete order to the guest.\n\nFinally, after the order is delivered, the guest's account is debited, and the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Order Ticket to Kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Order to Sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Fetch Wine & Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Assign Order to Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare Non-alcoholic Drinks",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit Guest Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest Calls Room Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order Fulfilled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Wine/Beverage Included",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a guest calls room service.  The first step is taking the guest's order.  After the order is taken, three things happen simultaneously: the order ticket is submitted to the kitchen, the order details (if any alcoholic beverages are included) are given to the sommelier, and the order is assigned to a waiter.\n\nIn the kitchen, the food preparation begins.  The sommelier checks the order. If wine or another alcoholic beverage was ordered, the sommelier fetches it from the cellar and prepares the drinks. If not, this step is skipped.  Meanwhile, the waiter readies the cart and prepares any non-alcoholic drinks.\n\nOnce the food is prepared, the wine/alcoholic beverages (if any) are ready, and the cart is ready with any non-alcoholic drinks, everything is combined. The waiter then delivers the complete order to the guest's room.\n\nAfter delivery, the waiter checks if there are any other orders to prepare or deliver. If so, the process of preparing and delivering those orders continues. If not, the guest's account is debited, and the order is marked as complete, ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Fetch wine from cellar and prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare non-alcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver order to guest's room",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit guest's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest calls room service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Wine or alcoholic beverage ordered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Food, wine, and cart ready?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Another order to prepare or deliver?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The Room Service process begins when a guest calls room service.  The order is then taken.  Following this, several things happen simultaneously: the food order ticket is submitted to the kitchen, any wine/alcohol order is submitted to the sommelier, and the order is assigned to a waiter.\n\nIn the kitchen, the food is prepared.  If wine or alcohol was ordered, the sommelier fetches the wine and prepares the alcoholic beverages.  At the same time, the waiter readies the cart and prepares any non-alcoholic drinks.\n\nOnce the food, alcoholic beverages (if any), non-alcoholic drinks, and cart are all ready, everything is delivered to the guest's room.  Finally, the guest's account is debited, completing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Take order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Submit food order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Submit wine/alcohol order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Prepare food",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Fetch wine and prepare alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Ready cart",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Prepare nonalcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Deliver to guest room",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Debit guest account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Guest calls room service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Wine or alcohol included?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_14.json": {
        "0": {
            "text": "The process begins with a choice of which type of bill is being sent.  There are four possibilities.\n\nThe first possibility is that the Metering Point Operations Operator (MPOO) sends a bill for the temporary continuation of metering point operations.  This bill is then examined by the Grid Operator (GO).\n\nThe second possibility is that the Metering Service Provider Operator (MSPO) sends a bill for the temporary continuation of measurement. This bill is also examined by the GO.\n\nThe third possibility is that the MSPO sends a bill for additional readings.  This bill, too, is examined by the GO.\n\nThe fourth and final possibility is that the MPOO sends a bill for equipment acquisition. This bill takes a different route depending on the recipient. If the recipient is the Meter Point Operator Network (MPON), the MPON examines the bill.  If the recipient is the GO, the GO examines the bill.\n\nAfter the GO examines the first three types of bills (temporary continuation of metering point operations, temporary continuation of measurement, and additional readings), or after either the MPON or the GO examines the equipment acquisition bill, a decision is made regarding the invoice.\n\nThere are three possible outcomes of this decision. The GO might confirm the invoice with a payment advice.  Alternatively, the MPON might confirm the invoice with a payment advice.  Finally, either the GO or the MPON might reject the invoice.  This decision point is the end of all four possible bill processing paths.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "Send"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO sends bill for temporary continuation of measurement",
                        "type": "Send"
                    },
                    {
                        "id": "id4",
                        "name": "GO examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id5",
                        "name": "MSPO sends bill for additional readings",
                        "type": "Send"
                    },
                    {
                        "id": "id6",
                        "name": "GO examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id7",
                        "name": "MPOO sends bill for equipment acquisition",
                        "type": "Send"
                    },
                    {
                        "id": "id8",
                        "name": "MPON examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id9",
                        "name": "GO examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id10",
                        "name": "GO confirms invoice with payment advice",
                        "type": "Confirm"
                    },
                    {
                        "id": "id11",
                        "name": "MPON confirms invoice with payment advice",
                        "type": "Confirm"
                    },
                    {
                        "id": "id12",
                        "name": "GO rejects invoice",
                        "type": "Reject"
                    },
                    {
                        "id": "id13",
                        "name": "MPON rejects invoice",
                        "type": "Reject"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Bill Recipient",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Invoice Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "id18",
                        "name": "MSPO",
                        "lanes": []
                    },
                    {
                        "id": "id19",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id20",
                        "name": "MPON",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id16",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id16",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a decision point: \"Who sends the bill?\".  There are three possibilities: the MPOO (Metering Point Operations Operator) sends a bill for temporary continuation of metering point operations, the MSPO (Metering System Point Operator) sends a bill for temporary continuation of measurement, or the MSPO sends a bill for additional readings.  If the MPOO sends the bill, it goes to the GO (Grid Operator) for examination. If the MSPO sends either type of bill, it also goes to the GO for examination.\n\nA fourth possibility exists where the MPOO sends a bill for equipment acquisition. This bill goes to another decision point: \"Who receives the bill?\".  The bill can either go to the GO for examination or to the MPON (Metering Point Operations Network) for examination.\n\nAfter the GO examines any of the bills, a final decision point is reached: \"Invoice Outcome?\". The GO can either confirm the invoice with a payment advice or reject the invoice.  Similarly, if the MPON examines the bill, they also reach the \"Invoice Outcome?\" decision point and can either confirm the invoice with payment advice or reject it.  This marks the end of the process for each possible path.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "Send"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO sends bill for temporary continuation of measurement",
                        "type": "Send"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO sends bill for additional readings",
                        "type": "Send"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends bill for equipment acquisition",
                        "type": "Send"
                    },
                    {
                        "id": "id6",
                        "name": "MPON examines the bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id7",
                        "name": "GO confirms invoice with payment advice",
                        "type": "Confirm"
                    },
                    {
                        "id": "id8",
                        "name": "MPON confirms invoice with payment advice",
                        "type": "Confirm"
                    },
                    {
                        "id": "id9",
                        "name": "GO rejects invoice",
                        "type": "Reject"
                    },
                    {
                        "id": "id10",
                        "name": "MPON rejects invoice",
                        "type": "Reject"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Who sends the bill?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Who receives the bill?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Invoice Outcome?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "id16",
                        "name": "MSPO",
                        "lanes": []
                    },
                    {
                        "id": "id17",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id18",
                        "name": "MPON",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with different types of bills being sent.  The Metering Point Operations Operator (MPOO) can send a bill for the temporary continuation of metering point operations, or for equipment acquisition. The Metering Service Provider Operator (MSPO) can send a bill for the temporary continuation of measurement, or for additional readings.\n\nIf the MPOO sends a bill for equipment acquisition, it goes to a decision point based on the bill recipient.  It will either go to the Grid Operator (GO) for examination, or to the Meter Point Operator Network (MPON) for examination. All other bills (temporary continuation of metering point operations, temporary continuation of measurement, and additional readings) go directly to the GO for examination.\n\nOnce the GO examines the bill, or the MPON examines the bill (in the case of equipment acquisition), a decision is made regarding the invoice.  This decision can result in one of three outcomes:  The GO confirms the invoice with payment advice, the MPON confirms the invoice with payment advice (if they were the recipient), or the invoice is rejected by either the GO or the MPON.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "Send"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO sends bill for temporary continuation of measurement",
                        "type": "Send"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO sends bill for additional readings",
                        "type": "Send"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends bill for equipment acquisition",
                        "type": "Send"
                    },
                    {
                        "id": "id6",
                        "name": "MPON examines bill",
                        "type": "Examine"
                    },
                    {
                        "id": "id7",
                        "name": "GO confirms invoice with payment advice",
                        "type": "Confirm"
                    },
                    {
                        "id": "id8",
                        "name": "MPON confirms invoice with payment advice",
                        "type": "Confirm"
                    },
                    {
                        "id": "id9",
                        "name": "GO rejects invoice",
                        "type": "Reject"
                    },
                    {
                        "id": "id10",
                        "name": "MPON rejects invoice",
                        "type": "Reject"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Bill Recipient",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Invoice Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "id15",
                        "name": "MSPO",
                        "lanes": []
                    },
                    {
                        "id": "id16",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id17",
                        "name": "MPON",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_3.json": {
        "0": {
            "text": "The process begins when a personnel requirement is detected.  The first step is to report this vacancy to the Personnel Department.  Next, a decision needs to be made: are there any questions about the tasks involved in the vacant position?\n\nIf yes, then the tasks and requirements are clarified, and the job is then described.  If no, the job is described directly.  After the job description is written, it is reviewed.\n\nFollowing the review, another decision is made: are any corrections needed?  If yes, corrections are requested, and the job description is reviewed again. This cycle repeats until no further corrections are needed.  If no corrections are needed, the job description is approved.  Once approved, the process ends with the job description being advertised.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify tasks and requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Detect personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job description advertised",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need corrections?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Questions about tasks?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a personnel requirement is detected.  The first step is to report this vacancy to the Personnel Department.  Next, a decision needs to be made: are there any questions about the tasks involved in the vacant position?\n\nIf there are questions, then the tasks and requirements are clarified.  This clarification feeds back into the process of describing the job.  If there are no initial questions, the job is described directly.\n\nOnce the job is described, the job description is reviewed.  Following the review, another decision is made: are any corrections needed to the job description?\n\nIf corrections are needed, they are requested, and the job description is revised and subsequently reviewed again.  This creates a loop, ensuring the job description is accurate.  If no corrections are needed, the job description is approved.  Finally, once the job description is approved, it is advertised, and the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify tasks and requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Detect personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job description advertised",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need corrections?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Questions about tasks?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a personnel requirement is detected.  The first step is to report this vacancy to the Personnel Department.  Next, a decision needs to be made: are there any questions about the tasks involved in the vacant position?\n\nIf there *are* questions about the tasks, then the tasks and requirements are clarified.  Regardless of whether there were initial questions about the tasks or not, the next step is to describe the job.  This description is then reviewed.\n\nAfter the review, another decision point is reached: are any corrections needed to the job description?  If corrections *are* needed, they are requested, and the job description is revised and reviewed again. This correction loop can repeat until the job description is satisfactory.\n\nIf no corrections are needed, the job description is approved, and the process ends with the job description being advertised.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify tasks and requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Detect personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job description advertised",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need corrections?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Questions about tasks?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "6_3.json": {
        "0": {
            "text": "The order fulfillment process begins when a new order is received from the sales department.  The first step is to determine the necessary parts and their quantities, as well as the desired delivery date.  Next, this information is entered into the PPS system.  The data is then manually transferred from the PPS system to the ERP system.  At this point, a check is performed to see if any parts are missing. If no parts are missing, the process moves on to implementation. After implementation is complete, the order quality is checked.  Once the quality check is finished, the order is considered completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts and quantities as well as delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter the information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Transfer data manually from PPS to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Take care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receive new order from sales department",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Any parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a new order from sales.  The first step is to determine the necessary parts and their quantities.  Next, this information is entered into the Production Planning System (PPS).  The data is then manually transferred to the Enterprise Resource Planning (ERP) system.  At this point, a check is performed to see if any parts are missing. If no parts are missing, an employee takes care of implementing the order.  Following implementation, the order quality is checked.  Once the quality check is complete, the order is considered completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "determine necessary parts and quantities",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "transfer data manually to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "employee takes care of the implementation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "New order from sales",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a new order is received.  The first step is to determine the necessary parts and their quantities, as well as the desired delivery date.  Next, this information is entered into the PPS system.  The data is then manually transferred from the PPS system to the ERP system.  At this point, a check is performed to see if any parts are missing. If no parts are missing, the process moves on to taking care of the implementation.  After the implementation is complete, the order quality is checked.  Finally, once the quality check is finished, the order is considered completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "determine necessary parts and quantities as well as the delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "transfer data manually to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "take care of the implementation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "receive new order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "8_2.json": {
        "0": {
            "text": "The process begins when a vacancy is reported.  The first step is to create a job description.  Once the description is drafted, a decision is made whether to ask the department for further input.\n\nIf further input is needed, the department is consulted, and the job description is revised accordingly. This creates a loop, where the description can be repeatedly refined based on the department's feedback.  Once the department is satisfied, the job description is submitted for consideration.\n\nIf no further input is needed from the department, the job description is directly submitted for consideration.\n\nNext, a decision is made regarding the approval of the description. If the description is not approved, it needs to be corrected and then resubmitted for consideration, creating another loop.  If the description is approved, the job is posted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask the Department again",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Correct the description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Post the job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Vacancy reported",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Description approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Need to ask the Department again?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a vacancy is reported.  The first step is to create a job description.  Once the job description is created, it's checked to see if the message is clear.\n\nIf the message is *not* clear, the department is asked for clarification and the job description is created again. This loop continues until the message is deemed clear.\n\nIf the message *is* clear, the job description is submitted for consideration.  Next, a decision is made on whether the description is approved.\n\nIf the description is *not* approved, it needs to be corrected and then resubmitted for consideration.  This cycle repeats until the description is approved.\n\nIf the description *is* approved, the job is posted.  The process ends once the job is posted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask the Department again",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Submit the job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Correct the description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Post the job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Vacancy reported",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Is message clear?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Is description approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a Vacancy Reported.  The first step is to Receive Vacancy Report.  Next, a Job Description is Created.  At this point, a decision is needed: Need Clarification? If yes, then any Confusion with the Department is Clarified, and the process loops back to Create Job Description.  If no clarification is needed, the Job Description is Submitted for Approval.  Another decision follows: Job Description Approved? If no, the Job Description is Corrected, and the process loops back to Submit Job Description for Approval. If yes, the Job is Posted, and the process ends with Job Posted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Vacancy Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify Confusion with Department",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Submit Job Description for Approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Correct Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Post Job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Vacancy Reported",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job Posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need Clarification?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Job Description Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "6_1.json": {
        "0": {
            "text": "The invoice processing begins with receiving an invoice.  The invoice then undergoes a visual inspection.  Following the inspection, the invoice is forwarded for further processing, where the supplier is identified, and an invoice instance is created.  Next, the invoice items and cost centers are checked and noted.\n\nA docket and a copy of the invoice are then sent to the cost center manager for review.  The cost center manager reviews the invoice copy and checks for any inconsistencies. If inconsistencies are found, the manager notes a code on the docket and returns the invoice copy to internal mail. The invoice copy is then passed to the next cost center manager, who also reviews it. This cycle of review and passing to the next manager continues until all items are marked correct.\n\nHowever, if the cost center manager identifies inconsistencies, they can choose to reject the invoice and note this on the docket. The rejected invoice copy is sent back to accounting, where clarification is sought from the vendor.  After clarification, if all inconsistencies are resolved, the process loops back to consult the cost center managers again. If not all inconsistencies are resolved, the process loops back to involve the cost center managers again, sending them the invoice copy for further review.  This loop continues until all inconsistencies are resolved.\n\nOnce all items are marked correct by all cost center managers, the invoice copy is forwarded to the commercial manager for a commercial audit and payment approval.  If the bill amount is greater than 20 EUR, a four-eyes-principle check is performed on the invoice, and the process loops back to the initial visual inspection. If the bill amount is not greater than 20 EUR, a check is made for any complaints.\n\nIf a complaint exists, the complaint is resolved with the supplier.  Regardless of whether a complaint exists or not, the final step is to give payment instructions and close the invoice instance, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Receive invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "t2",
                        "name": "Visual inspection",
                        "type": "Manual"
                    },
                    {
                        "id": "t3",
                        "name": "Forward invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "t4",
                        "name": "Identify supplier and create invoice instance",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Check invoice items and note cost center",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Send docket and invoice copy to cost center manager",
                        "type": "Manual"
                    },
                    {
                        "id": "t7",
                        "name": "Review invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Return invoice copy to internal mail",
                        "type": "Manual"
                    },
                    {
                        "id": "t10",
                        "name": "Pass invoice copy to next cost center manager",
                        "type": "Manual"
                    },
                    {
                        "id": "t11",
                        "name": "Reject AP and note on docket",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Send invoice copy back to accounting",
                        "type": "Manual"
                    },
                    {
                        "id": "t13",
                        "name": "Clarify with vendor",
                        "type": "User"
                    },
                    {
                        "id": "t14",
                        "name": "Consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "t15",
                        "name": "Send invoice copy to cost center managers",
                        "type": "Manual"
                    },
                    {
                        "id": "t16",
                        "name": "Forward invoice copy to commercial manager",
                        "type": "Manual"
                    },
                    {
                        "id": "t17",
                        "name": "Commercial audit and payment approval",
                        "type": "User"
                    },
                    {
                        "id": "t18",
                        "name": "Check invoice (4-eyes-principle)",
                        "type": "User"
                    },
                    {
                        "id": "t19",
                        "name": "Resolve complaint with supplier",
                        "type": "User"
                    },
                    {
                        "id": "t20",
                        "name": "Give payment instructions and close instance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "All items marked correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Inconsistencies?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "All inconsistencies resolved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Bill amount > 20 EUR?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t7",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g2",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g2",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t8",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t10",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g1",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g1",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t11",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t12",
                        "targetRef": "t13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t13",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "g3",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "t14",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "t15",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "g3",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "t16",
                        "targetRef": "t17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "t17",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "g4",
                        "targetRef": "t18"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "t18",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "g4",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "g5",
                        "targetRef": "t19"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "t19",
                        "targetRef": "t20"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "g5",
                        "targetRef": "t20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "t20",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The invoice processing begins with receiving an invoice.  Next, a visual inspection of the invoice is performed.  The invoice is then forwarded for further processing, where the supplier is identified, and an invoice instance is created.  The invoice items are checked, and the appropriate cost center is noted.  A docket is then created for the invoice.\n\nA copy of the invoice, along with the docket, is sent to the cost center manager for review. The cost center manager reviews the invoice copy.  At this point, a decision is made: is the invoice accurate?\n\nIf the invoice is accurate, the cost center manager notes a code on the docket. The invoice copy is then returned to internal mail.  Next, another decision point is reached: are all items marked correct? If yes, the invoice copy is passed to the next cost center manager, looping back to the cost center manager review step. If all items are *not* marked correct, the process continues.\n\nIf, back at the initial accuracy check, the invoice is *not* accurate, the Accounts Payable (AP) is rejected, and a note is made on the docket. The invoice copy is sent back to accounting, where clarification is sought from the vendor.  After clarification, there's another decision: are all inconsistencies resolved?\n\nIf all inconsistencies are resolved, the process moves forward as if the original invoice was accurate, meaning it goes to the cost center managers for review and coding. If not resolved, the cost center managers are consulted, and the invoice copy is sent to them.  This loops back to the cost center manager review step.\n\nOnce all items are marked correct, the invoice copy is forwarded to the commercial manager for a commercial audit.  During the audit, another decision is made: is the bill amount greater than 20 EUR?\n\nIf the bill is over 20 EUR, payment approval is issued. The invoice is then checked again, following the 4-eyes principle.  Finally, the instance is closed in ACME financial accounting, ending the process.\n\nIf the bill is not over 20 EUR, a different decision is considered: was there a complaint during the audit?  If a complaint arose, the complaint is resolved with the supplier, and the process loops back to the commercial manager for audit. If no complaint arose, payment instructions are given, and the instance is closed in ACME financial accounting, ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "2",
                        "name": "Visual inspection",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "Forward invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "4",
                        "name": "Identify supplier and create invoice instance",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Check invoice items and note cost center",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Create docket",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Send docket and invoice copy to cost center manager",
                        "type": "Manual"
                    },
                    {
                        "id": "8",
                        "name": "Review invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Return invoice copy to internal mail",
                        "type": "Manual"
                    },
                    {
                        "id": "11",
                        "name": "Pass invoice copy to next cost center manager",
                        "type": "Manual"
                    },
                    {
                        "id": "12",
                        "name": "Reject AP and note on docket",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Send invoice copy back to accounting",
                        "type": "Manual"
                    },
                    {
                        "id": "14",
                        "name": "Clarify with vendor",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Send invoice copy to cost center managers",
                        "type": "Manual"
                    },
                    {
                        "id": "17",
                        "name": "Forward invoice copy to commercial manager",
                        "type": "Manual"
                    },
                    {
                        "id": "18",
                        "name": "Commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "Issue payment approval",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "Check invoice (4-eyes-principle)",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "Resolve complaint with supplier",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "Give payment instructions",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "Close instance in ACME financial accounting",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "24",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "25",
                        "name": "Invoice accurate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "26",
                        "name": "All items marked correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "27",
                        "name": "All inconsistencies resolved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "28",
                        "name": "Bill amount > 20 EUR?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "29",
                        "name": "Complaint during audit?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "25",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "25",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "26",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "11",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "26",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "14",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "27",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "16",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "27",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "18",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "18",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "28",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "20",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "29",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "21",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "29",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "22",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "23",
                        "targetRef": "24"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when an invoice is received.  The first step is to receive the invoice and forward it to an accounting employee.  Next, the accounting employee identifies the charging suppliers and creates a new instance for this invoice.  The employee then checks the invoice items and makes notes.  Following this, a review of the invoice copy takes place.\n\nAfter the review, a decision is made: Are there any inconsistencies? If yes, the employee notes the code of the inconsistency. If no inconsistencies are found, the process moves forward.  If the code is noted, another decision follows: Are all items now correct? If yes, the invoice copy is forwarded to the commercial manager. If not, the invoice review step is repeated.\n\nIf inconsistencies were found initially, but no code was noted, the accounts payable (AP) is rejected with a note and statement, and clarification is sought from the vendor. After clarification, the invoice copy is again reviewed.\n\nOnce the commercial manager receives the invoice copy, they perform a commercial audit and issue approval.  Next, a decision is made based on the invoice amount: Does the amount exceed 20 EUR? If yes, a check based on the 4-eyes-principle is performed. If not, the process moves forward. If the 4-eyes-principle check reveals further issues, the invoice item check is revisited.\n\nAfter the amount check (or the 4-eyes-principle check, if applicable), a final decision is made: Is there a complaint? If yes, the complaint is resolved, and then payment instructions are given, and the instance is closed. If no complaint exists, payment instructions are given, and the instance is closed, completing the invoice processing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "receive invoice and forward to accounting employee",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Identify the charging suppliers and creates new instance",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check invoice items and take notes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Notes his code",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "reject the AP with a note and statement",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Clarification with vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Forward invoice copy to commercial manager",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Commercial audit and issue approval",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check again (4-eyes-principle)",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Resolve complaint",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Give payment instructions and close instance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Invoice received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Invoice processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "All items correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Inconsistencies?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Amount exceeds 20 EUR?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "2_2.json": {
        "0": {
            "text": "The process begins with a switch-over request.  Customer service then transmits data to the customer and receives customer data back. This data is entered into the CRM system and checked for accuracy.\n\nIf errors are found, they are corrected, and the data is checked again. This loop continues until the data is accurate.  If the customer already exists in the system, the process proceeds directly to creating the contract documents. If the customer is new, a new customer object is created before proceeding to contract document creation.\n\nOnce the contract documents are prepared, they undergo an automated check. If issues are found, they are analyzed and resolved, and the documents are prepared again. This cycle repeats until the automated check is successful.  When the documents are ready, a confirmation is sent to the customer.\n\nNext, a switch-over request is sent to the grid operator. The grid operator checks the request for supplier concurrence.  If the supplier concurs, the CIS contract is created, and the customer checks the contract details.\n\nThe customer can then either withdraw from the process or confirm. If they withdraw, the process ends. If they confirm and 7 days have passed, the customer transmits power meter data.  If 7 days have not passed, the process ends.\n\nAfter the meter data is transmitted, two parallel processes occur: the final bill is computed and sent to the customer, and the meter data is imported into the systems.  Each of these parallel paths leads to the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "compare and check customer data",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "correct errors",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "automated check of contract documents",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "send confirmation document to customer",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "send switch-over request to grid operator",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "check switch-over request for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "inform suppliers and demand conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "terminate sales agreement with old supplier",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "customer checks contract details",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "transmit power meter data",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "send final billing to customer",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "import meter data to systems",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "switch-over request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "17",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "22",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "23",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "24",
                        "name": "customer exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "25",
                        "name": "contract documents generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "26",
                        "name": "supplier concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "27",
                        "name": "withdraw or confirm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "28",
                        "name": "7 days passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Customer Service",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "Old Supplier",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "24",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "24",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "25",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "25",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "26",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "26",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "16",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "27",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "27",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "28",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "28",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "20",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "18",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "21",
                        "targetRef": "23"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a switch-over request.  Customer service then transmits data to the customer, receives customer data back, and enters that data into their CRM system.  The next step is to compare and check the customer data.\n\nIf errors are found, they are corrected, and the data is checked again. This check-and-correct cycle repeats until no more errors are found.  If no errors are found initially, the process continues with creating a new customer object.\n\nAfter the customer object is created, contract documents are prepared and automatically checked. If the automated check finds issues, they are analyzed and resolved, and the contract documents are prepared again. This cycle repeats until the automated check finds no issues.  If the automated check finds no issues initially, a confirmation document is sent to the customer.\n\nOnce the confirmation is sent, a switch-over request is sent to the grid operator, who then checks the request.  The grid operator then checks for supplier concurrence.\n\nIf the suppliers do *not* concur, the customer service informs the suppliers and works to resolve any demand conflicts. If necessary, the sales agreement is terminated, a new CIS contract is created, and the contract details are checked.  Whether or not the suppliers initially concur, a CIS contract is eventually created and checked.\n\nAfter checking the contract details, the customer is asked for confirmation. If the customer *declines*, the switch contract is withdrawn, and the process ends.\n\nIf the customer confirms, a 7-day waiting period begins.  If the customer does not confirm within 7 days, the switch contract is confirmed anyway, and the process continues. If the customer *does* confirm within the 7 days, the switch contract is also confirmed, and the process continues.\n\nOnce the switch contract is confirmed (either by customer confirmation or after 7 days), meter data is transmitted to customer service and the old supplier.  The final billing is computed and sent to the customer.  Simultaneously, the meter data is imported into the systems, and the process ends.  There are three potential end points: withdrawal of the switch contract, successful final billing, and successful import of meter data.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "compare and check customer data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "correct errors",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "automated check of contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "send confirmation document to customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "send switch-over request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "check switch-over request",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "inform suppliers and demand conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "terminate sales agreement",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "check contract details",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "withdraw from switch contract",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "confirm switch contract",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "transmit meter data to customer service and old supplier",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "send final billing to customer",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "import meter data to systems",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "switch-over request",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id24",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id27",
                        "name": "Customer exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Contract documents generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Supplier concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Customer confirmation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id31",
                        "name": "7 days passed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id27",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id27",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id28",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id28",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id29",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id29",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id30",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id30",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id31",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id31",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id21",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id26"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Customer Service",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "Old Supplier",
                        "lanes": []
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with a switch-over request.  The first step is to transmit data to customer service, who then receive and enter the customer data into the CRM system. This data is then compared against an internal database.\n\nNow, a decision is made: Does the customer already exist in the database?\n\nIf the customer *does not* exist, the process moves to create a new customer object.  Following this, contract documents are prepared and automatically checked. If the automated check finds issues, the documents are analyzed, issues are resolved, and the contract documents are prepared again. This cycle repeats until the automated check finds no issues. Once the contract is successfully generated, a confirmation is sent to the customer, and a request is sent to the grid operator.\n\nIf the customer *does* exist, any errors in the data are corrected, and the data is compared against the internal database again. This loop continues until no errors are found.  Once the data is accurate, the process continues with creating a new customer object, as described above.\n\nAfter the request is sent to the grid operator, we check for supplier concurrence.  If concurrence is *not* received, the suppliers are informed, demand resolution is performed, and the sales agreement is terminated, ending the process.\n\nIf supplier concurrence *is* received, a CIS contract is created, and the contract details are checked.  At this point, another decision is made: Withdraw or confirm the contract?  If withdrawn, the process ends.\n\nIf confirmed, we wait for 7 days. After 7 days, meter data is imported. Regardless of whether 7 days have passed or not, meter data is imported. This data is then used to compute and create the final billing, which is then sent to the customer.  After the billing is sent, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "compare with internal database",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "correct errors",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "automated check of contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "send confirmation to customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "send request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "check for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "inform suppliers and demand resolution",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "terminate sales agreement",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "check contract details",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "import meter data",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "create and send final billing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "switch-over request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id27",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Customer exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Contract generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Supplier concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Withdraw or confirm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "7 days passed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id21",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id22",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id23",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id24",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id24",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id17",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id19",
                        "targetRef": "id26"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "7_1.json": {
        "0": {
            "text": "The process begins with the Manager checking open leads.  Following this, the Manager selects the top five most promising leads.  A Sales Assistant then calls one of the selected customers.\n\nAfter the call, a decision is made based on whether the customer expressed interest. If the customer is not interested, the Sales Assistant sends a note to the Manager. The Manager then processes the lead, and the process ends.\n\nHowever, if the customer *is* interested, another decision point is reached: have all five customers been called yet?  If not, the Sales Assistant loops back and calls the next of the top five leads. This cycle of calling and assessing interest continues until all five customers have been contacted. Once all five customers have been called, regardless of their interest level, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manager checks open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Manager selects top five leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Sales Assistant calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Sales Assistant sends note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Manager processes lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Customer Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "All five customers called?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Manager checking open leads.  Following this, the Manager selects the top five leads.  Next, the Sales Assistant calls the customer.  At this point, a decision is made based on whether the customer is interested.\n\nIf the customer is interested, the Sales Assistant sends a note to the Manager, who then processes the lead.  The process then ends.\n\nHowever, if the customer is not interested, the Sales Assistant calls the next customer from the top five leads. This loop of calling customers and checking for interest continues until a customer expresses interest or all five leads have been contacted.  Once a lead is processed, the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manager checks open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Manager selects top five leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Sales Assistant calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Sales Assistant sends note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Manager processes lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Customer Interested?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with checking open leads.  Following this, the top five leads are selected.  Next comes a decision point: \"Interested?\".  If the lead is deemed interesting, the customer is called. After the call, another decision is made: \"All called?\". If not all leads have been called, the process loops back to the \"Interested?\" decision point for the next lead. This cycle of calling and checking continues until all five selected leads have been addressed.  Once all calls are complete, a note is sent to the manager. Finally, the lead is processed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top five leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "All called?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_5.json": {
        "0": {
            "text": "The Expense Report process begins when an Expense Report is received.  The first step is to check if the employee has an existing account. If not, a new account is created.  Regardless of whether a new account was needed, the Expense Report then proceeds to review.\n\nAfter the review, the process checks if the expense amount is less than $200. If it is, the report is automatically approved and the reimbursement is sent via direct deposit.  The process then ends.\n\nHowever, if the expense amount is $200 or more, the report requires Supervisor Approval.  Following the supervisor's decision, there are two possible outcomes. If the supervisor approves, the reimbursement is sent via direct deposit, and the process ends.  If the supervisor rejects the report, a rejection notice is sent to the employee, who can then resubmit the Expense Report, restarting the entire process from the beginning.\n\nSimultaneously, after the initial Expense Report is received, a timer starts. If 7 days pass, an \"Approval in Progress\" email is sent.  If the timer reaches 30 days, a cancellation notice is sent, and the employee can resubmit the Expense Report, again restarting the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create a new account",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Automatic Approval",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor Approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Reimbursement to Direct Deposit",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Approval in Progress Email",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send Cancellation Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Resubmit Expense Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Expense Report Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "7 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id12",
                        "name": "30 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Account Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Amount < $200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Supervisor Approves?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id0",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id9",
                        "targetRef": "id0"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The expense report process begins when an expense report is received.  Upon receiving the report, there are two paths: one for existing accounts and one for new accounts. If a new account needs to be created, that happens first, and then the process continues as it would for an existing account.  The report then undergoes a review.\n\nAfter the review, there are two possibilities: automatic approval or supervisor approval. If the report qualifies for automatic approval, it proceeds directly to the reimbursement stage via direct deposit.  If it requires supervisor approval, the supervisor then makes a decision.\n\nIf the supervisor approves the report, it moves to reimbursement via direct deposit. If the supervisor rejects the report, a rejection notice is emailed to the employee.  Regardless of whether the report is automatically approved or requires and receives supervisor approval, the process then stops.\n\nSimultaneously, there are two timed events running in the background. Seven days after the initial receipt of the expense report, an email is sent to the employee confirming that the approval process is in progress.  If 30 days pass after the initial receipt and the report hasn't been processed, a cancellation notice is emailed to the employee.\n",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "13",
                        "name": "7 days",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "15",
                        "name": "30 days",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "1",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "15",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "16",
                        "targetRef": "3"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Create a new account",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Review the Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Automatic Approval",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "Supervisor Approval",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "send rejection notice via email",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Reimbursement via direct deposit",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Stop Process",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Send an email for approval in progress",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Send cancellation notice via email",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The expense report process begins when an expense report is received.  The first step is to check if the employee has an existing account. If not, a new account is created. Regardless of whether a new account was needed, the report then proceeds to review.\n\nNext, the report amount is checked. If the amount is less than $200, it goes to automatic approval.  If the amount is $200 or greater, it requires supervisor approval.\n\nIf automatically approved, the reimbursement is sent directly to the employee's bank account.  If supervisor approval is required, the supervisor makes a decision. If the supervisor approves, the reimbursement is also sent to the employee's bank account. If the supervisor rejects the report, a rejection notice is emailed to the employee.\n\nAfter reimbursement is sent (either through automatic or supervisor approval), a check is made to see if the entire process has been completed within 7 days. If so, an \"approval in progress\" email is sent, and the process ends.\n\nIf 7 days have passed but the process isn't complete, a further check is made to see if 30 days have passed. If 30 days have passed, a cancellation notice is sent to the employee, and they are asked to resubmit the expense report. The process then ends.  If it's been more than 7 days but less than 30, the process simply continues to wait, presumably until either approval/rejection occurs or the 30-day limit is reached.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Create a new account",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Review the report",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Automatic approval",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Supervisor approval",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Send rejection notice by email",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "Reimbursement to direct deposit bank account",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Send approval in progress email",
                        "type": "Service"
                    },
                    {
                        "id": "10",
                        "name": "Send cancellation notice and request re-submission",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Expense Report Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Account exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Amount < $200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Completed in 7 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Completed in 30 days?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "g1",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "4",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g4",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g4",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "6",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "8",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "9",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "10",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "3_8.json": {
        "0": {
            "text": "The process begins when a customer submits a claim.  The Notification department then checks the submitted documents and registers the claim.  Next, the Handling department picks up the registered claim and checks the customer's insurance.  An assessment of the claim is then performed.\n\nBased on the outcome of the assessment, the process follows one of two paths. If the assessment is positive, the garage is phoned to authorize the necessary repairs.  Following authorization, the payment for the repairs is scheduled.  Finally, a letter is sent to the customer.\n\nAlternatively, if the assessment outcome is negative, the claim is rejected.  Even in the case of rejection, a letter is sent to the customer.  The process ends after the letter is sent, regardless of whether the claim was approved or rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department picks up and checks insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assessment is performed",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject Claim",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Assessment Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer submits a claim.  The Notification department then checks the submitted documents and registers the claim.  Next, the Handling department checks the customer's insurance.  Following this, an assessment of the claim is performed.\n\nBased on the result of the assessment, the process takes one of two paths. If the assessment is positive, the next step is to phone the garage to authorize the necessary repairs.  After authorization, the payment is scheduled, and finally, a letter is sent to the customer.\n\nAlternatively, if the assessment is negative, the claim is rejected.  Even in this case, a letter is still sent to the customer explaining the rejection.  The process ends after the letter is sent, regardless of whether the claim was approved or rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department checks insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assessment is performed",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer submits a claim.  The Notification department then checks if all necessary documents have been provided with the claim.  Following this check, the Notification department registers the claim.  Next, the Handling department picks up the registered claim and checks the customer's insurance.  An assessment of the claim is then performed.\n\nBased on the result of the assessment, the process takes one of two paths. If the assessment is positive, the Handling department phones the garage to authorize the necessary repairs.  After authorization, the payment for the repairs is scheduled, and finally, a letter is sent to the customer.\n\nAlternatively, if the assessment is negative, the claim is rejected.  Regardless of whether the claim is approved or rejected, a letter is sent to the customer, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents for completeness",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Notification department registers the claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Handling department picks up the claim",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Handling department checks the insurance",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Assessment is performed",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Reject the claim",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Assessment result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "idg1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "idg1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_4.json": {
        "0": {
            "text": "The process begins when a company decides to go public.  First, they select underwriters.  Next, they provide procedural and financial advice.  The underwriters then buy the issue and resell it to the public.  Following this, the company prepares a registration statement and checks the issue's compliance with blue-sky laws.  They then begin to firm up the issue price and arrange a road show.  After the road show, the company receives clearance from the SEC and fixes the issue price.  The underwriters then enter into a firm commitment to buy the stock.  At this point, a decision is made: are there any reasons not to offer the stock? If there are no reasons not to offer the stock, it is offered to the public, and the process ends. If there *are* reasons not to offer the stock, the process also ends, but without the stock being offered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Resell the issue to the public",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare a registration statement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check issue compliance with blue-sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Begin to firm up the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Arrange a road show",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive clearance from the SEC",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter into a firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Offer the stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Company decides to go public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Reason not to offer stock?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a company decides to go public.  The first step is to select underwriters.  Next, the underwriters provide procedural and financial advice to the company.  Following this, the underwriters buy the issue. The underwriters then resell the issue to the public.  The company then prepares a registration statement.  After the registration statement is prepared, compliance with blue-sky laws is checked.  The next step is to arrange a road show where the company can talk to potential investors.  Based on feedback from potential investors, the issue price is fixed.  The underwriters then enter into a firm commitment to buy the stock.  Before offering the stock to the public, a check is performed to determine if there is any reason not to offer the stock. If there is no reason to halt the process, the stock is offered to the public, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Resell the issue to the public",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare a registration statement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check compliance with blue-sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Arrange a road show",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Talk to potential investors",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Enter into a firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Offer the stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Company decides to go public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Check if any reason not to offer stock",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a company decides to go public.  First, they select underwriters.  Next, they provide procedural and financial advice.  The underwriters then buy the issue and resell it to the public.  Following this, the company prepares a registration statement and checks for compliance with blue-sky laws (state-level securities regulations).  They then begin to determine the issue price and arrange a road show to promote the stock.  After the road show, the company receives clearance from the SEC.  The issue price is then finalized, and the underwriters enter into a firm commitment to buy the stock.  At this point, a decision is made: are there any reasons not to offer the stock? If there are no reasons to halt the offering, the stock is offered to the public, and the process is complete.  However, if there *is* a reason not to offer the stock, the process ends without the stock being offered to the public.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Resell the issue to the public",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare a registration statement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check blue-sky laws compliance",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Begin to firm up the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Arrange a road show",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive clearance from the SEC",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter into a firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Offer the stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Company decides to go public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Issue complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Any reason not to offer?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "1_2.json": {
        "0": {
            "text": "The computer repair process begins when a customer brings in a defective computer.  The CRS then checks the defect and provides the customer with a repair cost calculation.\n\nAt this point, the customer decides whether the costs are acceptable. If not, the customer takes their computer home unrepaired, and the process ends.\n\nIf the customer accepts the cost, the repair process begins.  This process involves two potential paths: hardware repair and software configuration, which can happen concurrently.\n\nOn the hardware repair path, the technician checks and repairs the hardware.  Following the repair, the technician tests the system functionality. If the test is successful, the process moves forward. If not, the technician executes an arbitrary repair activity and retests the system. This loop continues until the hardware test is successful.\n\nSimultaneously, on the software configuration path, the technician checks and configures the software.  After the configuration, the technician tests the system functionality. If the test is successful, the process moves forward. If not, the technician executes an arbitrary repair activity and retests the system. This loop continues until the software test is successful.\n\nOnce *both* the hardware repair and software configuration are successful, the repair is considered finished, and the customer can take their computer home.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "hands out a repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "check and repair the hardware",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "check and configure the software",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "test the proper system functionality after hardware repair",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "test the proper system functionality after software configuration",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "execute arbitrary repair activity after hardware repair",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "execute arbitrary repair activity after software configuration",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer brings in a defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "customer takes her computer home unrepaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Repair is finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Are costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Is hardware repair successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg3",
                        "name": "Is software configuration successful?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "idg2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "idg2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "idg3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "idg3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The computer repair process begins when a customer brings in a defective computer.  The CRS (Customer Repair Service) then checks the defect and provides the customer with a cost calculation for the repair.  Based on this calculation, the customer decides whether or not to proceed with the repair.\n\nIf the customer decides against the repair, they take their computer home unrepaired, and the process ends.\n\nIf the customer accepts the cost, the repair process begins.  Hardware and software checks occur simultaneously. The CRS checks and repairs the hardware, then tests its functionality. If a hardware error is still detected after the initial repair, further arbitrary hardware repairs are executed, and the functionality is tested again. This loop continues until no further hardware errors are found.\n\nConcurrently, the CRS also checks and configures the software and tests its functionality.  If a software error is detected, arbitrary software repairs are executed, and the functionality is tested again. This loop continues until no further software errors are found.\n\nOnce both the hardware and software checks and repairs are complete, and no further errors are detected, the repair is considered finished, and the customer can take their computer home.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "CRS hands out repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Customer decides on costs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check and repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Test hardware functionality",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Execute arbitrary hardware repair",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check and configure software",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Test software functionality",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Execute arbitrary software repair",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer brings in defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer takes computer home unrepaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Repair finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Hardware error detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Software error detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The computer repair process begins when a customer brings in a defective computer.  The CRS then checks the defect and provides the customer with a repair cost calculation.  At this point, the customer decides whether the costs are acceptable.\n\nIf the costs are not acceptable, the customer takes the computer home unrepaired, and the process ends.\n\nIf the customer accepts the cost, the repair process begins.  Hardware and software repairs are carried out simultaneously. The hardware repair involves checking and repairing the hardware, followed by testing the system functionality. If the hardware repair is not successful, an arbitrary repair activity is executed, and the system functionality is tested again. This loop continues until the hardware repair is successful.\n\nSimilarly, the software repair involves checking and configuring the software, followed by testing the system functionality. If the software repair is not successful, an arbitrary repair activity is executed, and the system functionality is tested again. This loop continues until the software repair is successful.\n\nOnce *both* the hardware and software repairs are successful, the repair is considered finished, the customer can take their computer home, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "hands out a repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check and repair the hardware",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check and configure the software",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Test system functionality after hardware repair",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test system functionality after software repair",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Execute arbitrary repair activity (after hardware repair)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Execute arbitrary repair activity (after software repair)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Customer brings in defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer takes computer home unrepaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Repair finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Hardware repair successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Software repair successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_8.json": {
        "0": {
            "text": "The process begins with the MSPO deregistering at the GO.  The GO then verifies this deregistration request.  Following verification, the GO makes a decision: either reject the MSPO's deregistration or preliminarily confirm it.\n\nIf the deregistration is preliminarily confirmed, the GO then assigns themselves as the MSP.  After this self-assignment, the GO informs the MSPO that their assignment has ended and the GO's assignment has begun.  The GO then informs the MPO about their new assignment, and subsequently informs the SP about the assignment as well.  Once the SP has been notified, the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "GO rejects the deregistration of the MSPO or the GO preliminarily confirms the deregistration of the MSPO",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the MSPO initiating a deregistration.  Following this, the GO (Government Organization) verifies the deregistration. Based on the outcome of the verification, the process branches.\n\nIf the deregistration is not successful, the process simply ends.\n\nIf the deregistration is successful, the GO assigns themselves as the MSP (Management Service Provider).  After this assignment, the GO informs the MSPO that their assignment has ended and the GO's assignment has begun.  The GO then informs the MPO (Mission Planning Organization) about their new assignment. Finally, the GO informs the SP (Service Provider) about their assignment, after which the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Deregistration Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the MSPO deregistering at the GO.  The GO then verifies this deregistration request.  Following the verification, the GO makes a decision: either confirm or reject the deregistration.\n\nIf the GO rejects the deregistration, the process simply ends.\n\nIf the GO confirms the deregistration, the GO then assigns himself as the MSP.  After this self-assignment, the GO informs the MSPO about the end of their assignment and the beginning of the GO's assignment.  Next, the GO informs the MPO about their new assignment.  Finally, the GO informs the SP about their new assignment.  Once all these notifications are complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "GO rejects or confirms deregistration?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_2.json": {
        "0": {
            "text": "The process begins with sending a mortgage offer to the customer.  After the offer is sent, we wait for the customer's reply.  There are three possible outcomes: the customer declines, the customer accepts and sends a completed offer, or there is no answer after a certain time.\n\nIf the customer declines the offer, the case details are updated, the work is archived, and the case is cancelled.\n\nIf the customer sends a completed offer, we check if all necessary documents are provided. If the documents are provided, the case is moved to administration and the process ends. If the documents are missing, a message is generated to the customer requesting the missing documents.  (It is implied that after this, the process would likely wait for the documents or further communication, though this is not explicitly modeled here).\n\nIf there is no answer from the customer after a specified time, the case details are updated, and the case is both archived and cancelled.  This implies that \"archive and cancel\" is a combined action.  In all cases where the case is cancelled, the process ends.  Similarly, when the case is moved to administration, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Mortgage offer",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Update case details",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Archive work",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Cancel Case",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Move case to administration",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Generate message to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Update case details",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Archive and cancel",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer declines",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Completed offer received",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Documents missing",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id13",
                        "name": "No answer",
                        "type": "TimerEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Customer reply?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Documents provided?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The mortgage process begins with sending a mortgage offer to the customer.  After the offer is sent, we wait for the customer's response.\n\nThere are three possible outcomes: the customer accepts, the customer declines, or there is no answer after a certain period.\n\nIf the customer declines, the case details are updated, the work is archived, and the case is cancelled.  The process then ends.\n\nIf there is no answer after a period of time, the case details are also updated, the work is archived, and the case is cancelled, ending the process.\n\nIf the customer accepts the mortgage offer, we check if the necessary documents are complete.\n\nIf the documents are complete, the case is moved to administration and the process ends.\n\nIf the documents are incomplete, a message requesting the outstanding documents is generated and sent to the customer.  We then return to waiting for the customer's response, creating a loop until either the customer provides the documents, declines the offer, or fails to respond within the timeframe.  This loop continues until one of the three initial outcomes (accept, decline, no answer) is reached.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Mortgage Offer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Case Details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Archive Work",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Move Case to Admin",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Generate Message for Outstanding Documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Cancel Case",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Customer Declines",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Customer Accepts",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Documents Complete",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Documents Incomplete",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id12",
                        "name": "No Answer",
                        "type": "TimerEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Customer Response?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Documents Complete?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with a Customer Service Representative sending a mortgage offer.  Following this, a decision is made based on the customer's reply method.\n\nIf the customer replies in a certain way (the specific method isn't defined here), the case details are updated.  Then, the work is archived, the case is canceled, and the process ends.\n\nHowever, if the customer replies using a different method, another decision is made based on whether all the pre-requisite documents have been provided.\n\nIf all the required documents are present, the case is moved to administration, and the process ends.\n\nIf the documents are *not* all present, a message is generated to the customer requesting the missing documents, and the process ends.\n\nThere's one more path:  If the customer doesn't reply within two weeks, the case details are updated, the case is archived, then canceled, and finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer Service Representative sends mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Archive the work",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Cancel the case",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate message to customer requesting documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Archive",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "cancel",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "2 weeks pass with no response",
                        "type": "IntermediateTimer"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Customer reply method",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Check if all pre-requisite docs provided",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    }
}