{
    "9_3.json": {
        "0": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  They then add these draft dates to everyone's calendars. Next, the Support Officer checks the proposed dates and suggests any necessary modifications. The Coordination Unit then rechecks all the dates, incorporating the Support Officer's feedback, and looks for any potential conflicts.  Once this is done, the final schedule is sent to the Committee Members. The Committee Members then check their own diaries and advise the Coordination Unit of any conflicts they might have. Once the Coordination Unit receives this feedback, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Add draft dates to calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer checks proposed dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Coordination Unit rechecks dates and looks for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send final schedule to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Committee Members check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  They then add these draft dates to everyone's calendars.  Next, the Support Officer checks the dates and suggests any necessary modifications. The Coordination Unit then rechecks all the dates, incorporating the Support Officer's suggestions, and looks for any potential conflicts. After this review, the final schedule is sent to the Committee Members.  The Committee Members then check their diaries and advise the Coordination Unit of any conflicts. Once the Coordination Unit receives this feedback, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Add draft dates to calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer checks dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Coordination Unit rechecks dates and incorporates suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Coordination Unit checks for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send final schedule to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Committee Members check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins within the Town Planning Authority.  The Coordination Unit starts by drafting a schedule of meetings.  Then, they add these draft dates to everyone's calendars. Next, the Support Officer checks the dates and suggests any necessary modifications.  The Coordination Unit then rechecks all the dates, incorporating the Support Officer\u2019s feedback, and looks for any potential conflicts. After this review, the final schedule is sent to the Committee Members. The Committee Members then check their diaries and advise the Coordination Unit of any conflicts. Once the Coordination Unit receives this feedback, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "draft a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "add draft dates to calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "check dates and suggest modifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "recheck dates and incorporate feedback",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Town Planning Authority",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Coordination Unit",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Support Officer",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Committee Members",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [],
                "id5": {
                    "name": "send final schedule",
                    "type": "User"
                }
            }
        }
    },
    "10_7.json": {
        "0": {
            "text": "The process begins with the MSPN registering the measurement.  Following this, the GO examines the application of the MSPN.  Based on this examination, the GO makes a decision.\n\nIf the application is rejected, the GO rejects the application of the MSPN.  This rejection leads back to the GO examining the MSPN application, effectively creating a loop where the MSPN can potentially resubmit and the GO can re-examine until the application is deemed acceptable. If the application is approved, the GO confirms the application of the MSPN. After either confirming or rejecting the application, the process proceeds to the next step.\n\n\nAfter the GO confirms the MSPN application, the next action is to assign the MSPN.  Once the assignment is complete, the GO informs the MSPO about the assignment.  Following this, the GO also informs the MPO about the assignment.  Finally, the GO informs the SP about the assignment, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPN registers measurement",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO examines application of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "GO rejects application of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "GO confirms application of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Assign MSPN",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO informs MSPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO informs MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO informs SP about assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Application Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the MSPN registering the measurement.  Following this, the GO examines the application of the MSPN.  Based on this examination, the GO makes a decision.\n\nIf the application is rejected, the GO rejects the application of the MSPN.  After the rejection, the process splits into two paths. The assigned MSPN is informed, and concurrently the MPO is informed. Once both the assigned MSPN and MPO are informed, the SP is informed. The process ends once the SP has been informed of the rejected assignment.\n\nAlternatively, if the application is confirmed, the GO confirms the application of the MSPN. Again the process splits into two concurrent paths: the assigned MSPN and the MPO are informed. Once both parties are informed, the SP is then informed and the process ends.\n",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "4",
                        "type": "Parallel"
                    },
                    {
                        "id": "8",
                        "type": "Parallel"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPN registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "GO rejects the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Inform assigned MSPN",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Inform MPO",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO confirms the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Inform assigned MSPN",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Inform SP",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the MSPN registering the measurement.  Following this, the GO examines the application of the MSPN.  Based on this examination, the GO makes a decision.\n\nIf the application is rejected, the GO rejects the application of the MSPN.  This leads to another decision point. Regardless of the outcome of this second decision, the process continues to assigning the MSPN.\n\nIf the application is not rejected, the GO confirms the application of the MSPN, leading to the same second decision point mentioned before.  Again, the outcome of this decision does not affect the next step, assigning the MSPN.\n\nAfter the MSPN is assigned, the GO informs the MSPO about the assignment.  Next, the GO informs the MPO about the assignment.  Finally, the GO informs the SP about the assignment, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO rejects the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO confirms the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Assign the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "GO informs the MSPO about the assignment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "GO informs the MPO about the assignment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "GO informs the SP about the assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application Rejected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_5.json": {
        "0": {
            "text": "The process begins with the MPON requesting a device takeover bid from the MPOO.  Following this request, the MPON places an order with the MPOO.  Concurrently, the MPOO sends a tender for the equipment takeover to the MPON.  Once the MPOO receives the order from the MPON, they confirm the order.  After the order confirmation, the MPOO sends the master data to the MPON, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON places order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the MPON requesting a device takeover bid from the MPOO.  Following this request, the MPON places an order with the MPOO.  Concurrently, the MPOO sends a tender for the equipment takeover to the MPON. The MPOO then waits for the MPON to confirm the order.  Once the MPON confirms the order, the MPOO sends the master data to the MPON, which signifies the completion of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON places order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO waits for order confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPON confirms order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MPOO sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "MPON",
                        "lanes": []
                    },
                    {
                        "id": "id12",
                        "name": "MPOO",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the MPON requesting a device takeover bid from the MPOO.  Following this request, the MPON places an order with the MPOO.  Concurrently, the MPON also sends a tender for the equipment takeover to the MPOO.  The MPOO then confirms the MPON's order.  Finally, after order confirmation, the MPOO sends the master data to the MPON, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON places order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPON sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms MPON order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id9",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "MPON",
                        "lanes": []
                    },
                    {
                        "id": "id11",
                        "name": "MPOO",
                        "lanes": []
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ]
            }
        }
    },
    "10_13.json": {
        "0": {
            "text": "The process begins with the INQ transmitting a transaction data request.  This request is then checked by the IP.  Following the check, the IP answers the INQ's question.  Once the IP provides the answer, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the INQ's question",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the INQ (presumably an inquirer) transmitting a transaction data request.  This request is then checked by the IP (likely Information Provider).  After checking the request, the IP answers the INQ's question.  Once the INQ receives the answer, the process ends.  All these actions happen within a larger system.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the INQ's question",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the INQ (likely an Inquiry system or role) transmitting a transaction data request.  This request is then checked by the IP (likely an Information Provider system or role).  After checking the request, the IP answers the INQ's question.  Once the INQ receives the answer, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the INQ's question",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_11.json": {
        "0": {
            "text": "The process begins with the Grid Operator (GO) requesting measurements from the Measurement Service Provider (MSP).  The MSP then checks the received request.\n\nFollowing the check, a decision is made. If the request is denied, the MSP denies the GO's request. This denial leads to a final decision point which always results in the end of the process.\n\nIf the request is accepted, the MSP performs the measurement. After the measurement is performed, another decision is made. If the measurement fails, the MSP informs the GO about the failure. This, like a denied request, also leads to the final decision and the end of the process.\n\nIf the measurement is successful, the MSP transmits the measured values to the GO.  The GO then processes these measured values and sends changed values back to the MSP.  The MSP transmits these readings to the Service Provider (SP).  Following this transmission, a final decision is made. Regardless of the outcome of this decision, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deny GO Request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Perform Measurement",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform GO of Failure",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Transmit Measured Values",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process Measured Values",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send Changed Values",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Transmit Readings to SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Request Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Measurement Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Grid Operator",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Grid Operator Lane",
                                "elemRefs": [
                                    "id1",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Measurement Service Provider",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MSP Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6",
                                    "id8",
                                    "id10",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Service Provider",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "SP Lane",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id15",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "mf6",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the Grid Operator (GO) requesting measurements from the Metering Service Provider (MSP).  The MSP then checks the received request.\n\nNext, the MSP makes a decision. If the request is deemed invalid, the MSP denies the request and the process ends. If the request is valid, the MSP performs the measurement.\n\nAfter performing the measurement, the MSP faces another decision.  If the measurement fails, the MSP informs the GO about the failure, and the process ends. If the measurement is successful, the MSP transmits the measured values to the GO.\n\nUpon receiving the measured values, the GO processes them.  Following this, the GO sends changed values back to the MSP.  The MSP then transmits the readings to the Service Provider (SP).\n\nFinally, the MSP makes one last decision. If there is an issue with transmitting the readings, the process ends.  If the transmission is successful, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Received Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deny Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Perform Measurement",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform GO of Failure",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Transmit Measured Values",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Process Measured Values",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Changed Values",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Transmit Readings to SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Request Valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Measurement Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Transmission Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Grid Operator",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Grid Operator Lane",
                                "elemRefs": [
                                    "id1",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Metering Service Provider",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Metering Service Provider Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Service Provider",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id15",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the Grid Operator (GO) requesting measurements from the Metering Service Provider (MSP).  The MSP then checks the received request.\n\nFollowing the check, a decision is made. If the request is denied, the MSP denies the GO's request. This then leads to a final decision point which we'll come back to later.\n\nIf the request is not denied after the check, the MSP performs the measurement.  After the measurement, another decision is made.  If the measurement fails, the MSP informs the GO about the failure, and this also leads to the final decision point mentioned earlier.\n\nIf the measurement is successful, the MSP transmits the measured values to the GO.  The GO then processes the measured values and sends changed values back to the MSP.  The MSP then transmits these readings to the Service Provider (SP).  After this transmission, a final decision is made.\n\nRegardless of whether the request was initially denied, the measurement failed, or the readings were successfully transmitted to the SP, a final decision point is reached.  This final decision point considers all prior outcomes and concludes the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Check request",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Perform measurement",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Deny GO's request",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "Inform GO about failure",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "Transmit measured values to GO",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "Process measured values",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "Send changed values to MSP",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Transmit readings to SP",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Grid Operator (GO) requests measurements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "Process concluded",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Request Denied?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "m1",
                        "name": "Measurement failed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Metering Service Provider (MSP)",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Grid Operator (GO)",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Service Provider (SP)",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "2",
                        "targetRef": "m1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "m1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "m1",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_4.json": {
        "0": {
            "text": "The process begins with the Coordination Unit finalizing the dates for a meeting.  Following this, they update all group calendars.  Concurrently, the Support Officer creates the meeting folders and ensures all the appropriate documents are uploaded to the system.  The Support Officer then advises the Committee Members to read these documents.  After the Committee Members have been notified, they hold the meeting. Following the meeting, the Support Officer produces the minutes. These minutes are then subjected to a QA check by the Coordination Unit. The QA-checked minutes are sent to all Committee Members by the Coordination Unit.  Once the minutes are distributed, the Support Officer updates the departmental records, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Finalize meeting dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update group calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create meeting folders and upload documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Advise Committee Members to read documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Produce meeting minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "QA check minutes",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send minutes to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Update departmental records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit finalizing the dates for a meeting.  Following this, they update all group calendars and then create the necessary meeting folders.  Concurrently, after finalizing the dates, the Support Officer updates all group calendars.  Next, the Support Officer ensures all appropriate documents are uploaded to the system.  Once the documents are uploaded, the Support Officer advises Committee Members to read them.  After the Committee Members have been advised to read the documents, the meeting is held. Following the meeting, the Support Officer produces the meeting minutes.  These minutes are then subjected to a QA check by the Coordination Unit.  The results of the QA check are then sent to all Committee Members by the Coordination Unit. After the QA check is sent, the Support Officer updates departmental records, which concludes the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Finalize meeting dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update all group calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create meeting folders",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Update all group calendars",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Advise Committee Members to read documents",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Produce meeting minutes",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "QA check minutes",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send QA results to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Update departmental records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Coordination Unit",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Coordination Unit Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Support Officer",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Support Officer Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Committee Members",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Committee Members Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Coordination Unit finalizing the dates for a meeting.  Following this, they update all group calendars with the finalized dates.  In parallel, the Support Officer creates the necessary meeting folders.  After creating the folders, the Support Officer ensures all appropriate documents are uploaded to the system.  Once the documents are uploaded, the Support Officer advises the Committee Members to read all the documents.  The Committee Members then hold the meeting.  After the meeting, the Support Officer produces the minutes.  Next, the Coordination Unit conducts a QA check on the minutes. Once the check is complete, the Coordination Unit sends the QA check to all Committee Members.  After the QA check is sent, the Support Officer updates the departmental records, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Finalize meeting dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update group calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create meeting folders",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Advise Committee Members to read documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Produce minutes",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct QA check on minutes",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send QA check to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Update departmental records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_1.json": {
        "0": {
            "text": "The process begins when a party sends a warrant possession request. This request is received by the Client Service Back Office within the Small Claims Registry Operations.  The Back Office then retrieves the relevant SCT (Small Claims Tribunal?) file and forwards the SCT Warrant Possession to the Queensland Police.  After forwarding, the Back Office stores the physical SCT file.\n\nNext, the Back Office awaits a police report.  Upon receiving the report, they retrieve the corresponding SCT file again and attach the newly received report document to the file.  This expanded file is then stored.  Simultaneously, MC internal staff receives the physical SCT file.\n\nOnce the internal staff receives the file, the process ends.  The initial sending of the warrant possession request also concludes the party's involvement in the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Warrant Possession Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Store Physical SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Await Police Report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Retrieve SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Attach Report to File",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Store Expanded File",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Physical SCT File",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Party",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Party Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Small Claims Registry Operations",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Client Service Back Office",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Queensland Police",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "MC Internal Staff",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Internal Staff Lane",
                                "elemRefs": [
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a party sends a warrant possession request. This request is received by the Client Service Back Office within the Small Claims Registry Operations.  The Back Office then retrieves the relevant SCT (Small Claims Tribunal?) file.  After retrieving the file, the Back Office forwards the SCT Warrant Possession to the Queensland Police.  The physical SCT file is then stored.\n\nNext, the Small Claims Registry Operations awaits a police report.  Upon receiving the report, the Back Office retrieves the corresponding SCT file again. A new SCT document, presumably related to the police report, is attached to the file.  This expanded physical SCT file is then stored.\n\nSimultaneously, after the initial warrant possession request is sent, the party also sends the physical SCT file which is received by MC (Magistrates Court?) internal staff.\n\nFinally, after the expanded SCT file is stored by the Small Claims Registry Operations, it is then sent to and received by  MC internal staff, completing the Small Claims Registry Operations processes. After MC Internal staff receives the physical SCT file, the overall process is complete for all parties involved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Store physical SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Await police report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive police report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Store expanded SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send physical SCT file (Party)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive physical SCT file (MC Staff)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send expanded SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Receive expanded SCT file (MC Staff)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Party",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Party Lane",
                                "elemRefs": [
                                    "id1",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Small Claims Registry Operations",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Client Service Back Office",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Queensland Police",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "MC Internal Staff",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "MC Staff Lane",
                                "elemRefs": [
                                    "id12",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id4",
                        "targetRef": "pool3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "pool3",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a party sends a warrant possession request. This request is received by the Client Service Back Office within the Small Claims Registry Operations.  The Back Office then retrieves the relevant SCT (Small Claims Tribunal) file.  After retrieving the file, they forward the SCT Warrant Possession to the Queensland Police and store the physical SCT file.  Next, the Small Claims Registry Operations awaits a police report.  Upon receiving the report, the Back Office retrieves the corresponding SCT file again and attaches the new SCT document (the police report) to it.  The expanded physical SCT file is then stored. This expanded file is then received by MC internal staff, which concludes the process for Small Claims Registry Operations. Concurrently, after the party sends the initial request, they then wait for confirmation that MC internal staff has the SCT file and confirmed it, which also concludes the overall process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Warrant Possession Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward SCT Warrant Possession to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Store Physical SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Await Police Report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Retrieve SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Attach Police Report to SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Store Expanded SCT File",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Expanded File",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Wait for Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Confirm SCT File",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_1.json": {
        "0": {
            "text": "The process begins when a customer perceives a service degradation. This triggers a message to the Customer Service Department of TELECO.  The Customer Service Department receives the problem parameters and enters a problem report into their system.  They then compare this problem report to the customer's Service Level Agreement (SLA).\n\nNext, the Customer Service Department determines the necessary countermeasures. This leads to a decision point. If the situation requires linking to an extra problem fix process, that process is initiated.  Otherwise, a detailed problem report is created and sent to Service Management.\n\nSimultaneously, and independently of whether an extra problem fix process is needed, the Electronic Service department determines the customer's significance.  Based on the significance level, several paths are possible.  If the customer has \"certain significance\", the process loops back to the earlier step where the customer service department creates a detailed report and sends it to service management. If the customer's significance is \"premium\", the extra problem fix process is initiated, as mentioned before. If the customer's significance is categorized as \u201cother\u201d, another decision needs to be made regarding the appropriate action.\n\nService Management, upon receiving the problem report, deals with any quality violations and investigates the problem.  Then, another decision point is reached: is it a Service Management problem? If yes, Service Management performs an analysis and creates a trouble report.  If not, the problem report is sent to Resource Provisioning. Resource Provisioning then checks for potential issues.  If potential issues are detected, Resource Provisioning analyzes the problem and creates a trouble report, if not, they create a service execution notification. Either way, a status report is then sent to Service Management.\n\nOnce Service Management receives either the trouble report or the status report, a final status report is prepared. This report is used to decide which actions are required. Several options are available at this decision point: address the situation with \"minor corrective actions,\" request \"automatic resource restoration,\" or mark the case as \"no problem.\"\n\nIf minor corrective actions are chosen, Service Management undertakes those actions.  If automatic resource restoration is chosen, a request for automatic resource restoration is created and sent to Resource Provisioning.  Resource Provisioning receives the request and tracks all possible errors, then undertakes any necessary corrective actions and creates a trouble-shooting report which is sent back to Service Management.  If \"no problem\" is identified, the actual service performance is sent to customer service.  Customer Service then relays this performance information to the customer.\n\nIf the trouble-shooting report is sent to customer service, Customer Service combines this with the actual service performance and then the problem resolution report if available. From here, Customer Service then updates their internal report for the customer, and this report is then sent to the customer. \n\nWhenever a problem resolution report is received by Customer Service, it triggers a decision: is the problem resolved?  This decision leads to two parallel actions: creating a report for the customer, and if applicable, reporting an SLA violation rebate to Billing & Collections.  Billing & Collections then adjusts the billing accordingly. The customer then receives the final report, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive problem parameters and enter problem report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine necessary countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate extra problem fix process",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Determine customer significance",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deal with quality violations and investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Perform analysis and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check for potential issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Analyze problem and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Create service execution notification",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Undertake minor corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Track possible errors and undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Relay performance information to customer",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Combine reports",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Update internal report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Adjust billing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "Customer perceives service degradation",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id24",
                        "name": "Problem Resolved?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id25",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Need extra problem fix process?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Customer Significance?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Service Management problem?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Potential issues detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Required Actions?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id31",
                        "name": "Problem Resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id32",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "id33",
                        "name": "TELECO",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "Customer Service Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20"
                                ]
                            },
                            {
                                "id": "id35",
                                "name": "Electronic Service Department",
                                "elemRefs": [
                                    "id6"
                                ]
                            },
                            {
                                "id": "id36",
                                "name": "Service Management",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id37",
                                "name": "Resource Provisioning",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id15",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id38",
                                "name": "Billing & Collections",
                                "elemRefs": [
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id26",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id27",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id27",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id28",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id28",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id29",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id29",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id12",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id30",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id30",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id30",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id13",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id19",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id24",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id31",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id31",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id20",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id22",
                        "targetRef": "id25"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a customer perceives a service degradation. This triggers a message to the Customer Service Department of TELECO.  The Customer Service Department receives the problem parameters and enters a problem report into their system.  Next, they compare the problem report to the customer's Service Level Agreement (SLA). Based on this comparison, they determine the necessary countermeasures.\n\nThe process then splits based on the determined countermeasures. One path involves linking to an extra problem fix process. The other path proceeds within the Customer Service Department.\n\nIf the extra problem fix process is chosen, the significance of the customer is determined by the Electronic Service department within TELECO. If the customer is deemed of \"certain significance\", the process loops back to an earlier stage where the Customer Service Department creates a detailed problem report. If the customer's significance level is \"other,\"  the Customer Service Department proceeds directly to creating the detailed problem report. If the customer significance is \u201cpremium\u201d, then an extra problem fix process is linked.\n\nOnce the detailed problem report is created, it's sent to the Service Management department. Service Management investigates the problem and decides whether it's a service management problem.\n\nIf it's *not* a service management problem, they send the problem report to the Resource Provisioning department. Resource Provisioning checks for potential issues. If issues are detected, they analyze the problem and create a trouble report.  Whether potential issues are found or not, they subsequently send a status report to Service Management.\n\nIf it *is* a service management problem, Service Management undertakes analysis and creates a trouble report.  The trouble report then triggers a status report sent back to Service Management.  Service Management prepares a final status report and decides which actions are required.\n\nDepending on the required actions, one of three paths is taken.  If minor corrective actions are needed, those are undertaken.  If automatic resource restoration is needed, a request for that is created and sent to Resource Provisioning.  If no problems are found,  the actual service performance is sent to Customer Service.  If Resource Provisioning receives an automatic resource restoration request, they track possible errors, undertake necessary corrective actions, create a troubleshooting report, and send it to Service Management. Service Management then sends the troubleshooting report to Customer Service.  \n\nRegardless of which action path was taken by Service Management, a problem resolution report is eventually created and sent to Customer Service. Customer Service then receives the problem resolution report along with the actual service performance.  Based on whether the problem is resolved, they either report an SLA violation rebate to Billing & Collections or create a report for the customer.  If an SLA violation is reported, Billing & Collections adjusts the billing.  If a customer report is created, it is sent to the customer. Finally, the customer receives the report, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive problem parameters and enter problem report",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Determine necessary countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Determine customer significance",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Investigate problem and decide if it's a service management problem",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check for potential issues",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Analyze problem and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Send status report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Undertake analysis and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Prepare final status report and decide actions",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Undertake minor corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Create automatic resource restoration request",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Track possible errors and undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Send troubleshooting report to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "Report SLA violation rebate to Billing & Collections",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "Adjust billing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Customer perceives service degradation",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "21",
                        "name": "Customer receives report",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Countermeasures?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Customer Significance?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Service Management Problem?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Potential Issues?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Required Actions?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g6",
                        "name": "Problem Resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "TELECO",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Service Department",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "5",
                                    "19"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Electronic Service Department",
                                "elemRefs": [
                                    "4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Service Management Department",
                                "elemRefs": [
                                    "6",
                                    "10",
                                    "11",
                                    "16",
                                    "17"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Resource Provisioning Department",
                                "elemRefs": [
                                    "7",
                                    "8",
                                    "9",
                                    "14",
                                    "15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Billing & Collections",
                        "lanes": [
                            {
                                "id": "lane5",
                                "name": "Billing Adjustments",
                                "elemRefs": [
                                    "18",
                                    "20"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "g2",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "6",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g3",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "7",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g4",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "11",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "g5",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "g5",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "g5",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "12",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "17",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "19",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "g6",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "g6",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "18",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "20",
                        "targetRef": "21"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a customer perceives a service degradation. This triggers a message to the Customer Service Department of TELECO.  The Customer Service Department receives the problem parameters and enters a problem report into their system. They then compare the problem report to the customer's Service Level Agreement (SLA). Based on this comparison, they determine the necessary counter-measures.\n\nNext, the Customer Service Department checks the significance level of the customer.  If the customer is of 'certain significance', a detailed problem report is created and sent to Service Management. If the customer is 'premium', the process links to an extra problem fix process, the details of which are not described within this specific process flow. If the customer is of any other significance level, the process returns to determining the customer's significance, effectively looping until the customer is classified as either 'certain significance' or 'premium'.\n\nWhen Service Management receives the problem report, they deal with any violations of quality and investigate the problem.  Service Management then decides if this is a problem they should handle. If yes, they perform an analysis and create a trouble report, which they then send to the Customer Service Department. If no, Service Management sends the problem report to Resource Provisioning. Resource Provisioning checks for potential issues.  If an issue is detected, they analyze the problem and create a trouble report, which feeds into a later common path.  If no problem is detected, Resource Provisioning creates a service execution notification. This notification goes back to a decision point within the Service Management process.\n\n\nWhether the problem report originates from Service Management's analysis or Resource Provisioning's analysis, it goes to Service Management, where a final status report is prepared. Following this, Service Management decides on the required actions.  They may choose \"minor corrective actions,\" in which case they undertake these actions.  They may choose \"automatic resource restoration,\" in which case they create a request for automatic resource restoration and send this request to Resource Provisioning. If neither of these options is suitable, Service Management sends a trouble-shooting report to Customer Service.\n\nIf Resource Provisioning receives a restoration request, they track all possible errors, undertake any necessary corrective actions, and create a trouble-shooting report, which they send to Service Management. \n\nFrom the trouble-shooting report (whether coming directly from Service Management or via Resource Provisioning), Service Management creates the problem resolution report, sends it to Customer Service, and simultaneously sends the actual service performance to Customer Service.\n\nOnce Customer Service receives the problem resolution report, they decide whether to send it to the customer. At the same time, the actual service performance information received by Customer Service also triggers the process of receiving the problem parameters from the customer again. This creates a feedback loop, allowing Customer Service to iterate based on updated information. If Customer Service decides to send the report to the customer, they prepare a report for the customer and report any SLA violation rebate to Billing & Collections.  Billing & Collections then adjusts the billing.  The prepared report is sent to the customer, who receives it, thus concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive problem parameters and enter problem report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine necessary counter-measures",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check customer significance level",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Deal with quality violations and investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Decide if Service Management should handle",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Perform analysis and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check for potential issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Analyze problem and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Create service execution notification",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Decide on required actions",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Undertake minor corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Track all possible errors and undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Decide whether to send report to customer",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Receive problem parameters from customer",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Prepare report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Adjust billing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id24",
                        "name": "Customer perceives service degradation",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Problem report sent to customer",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Customer Significance",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Should Service Management Handle?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Potential Issues Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Required Actions",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Send Report to Customer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "Customer",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "Teleco",
                        "name": "TELECO",
                        "lanes": [
                            {
                                "id": "CustomerService",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id19",
                                    "id20",
                                    "id21",
                                    "id22"
                                ]
                            },
                            {
                                "id": "ServiceManagement",
                                "name": "Service Management",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id17",
                                    "id18"
                                ]
                            },
                            {
                                "id": "ResourceProvisioning",
                                "name": "Resource Provisioning",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id16"
                                ]
                            },
                            {
                                "id": "BillingCollections",
                                "name": "Billing & Collections",
                                "elemRefs": [
                                    "id23"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id26",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id27",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id27",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id28",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id28",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id29",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id29",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id29",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id19",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id30",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id20",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id30",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id23",
                        "targetRef": "id25"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_3.json": {
        "0": {
            "text": "The process begins with the registration of a claim.  A claims officer then examines the claim.  Based on this examination, the claims officer decides whether further investigation is needed.\n\nIf more information is required, the claims officer writes a settlement recommendation. This recommendation is then checked by a senior claims officer.\n\nThe senior claims officer then marks the claim and makes a decision.  If the senior claims officer deems the recommendation acceptable (\"ok\"), the claim handling process proceeds.  However, if the recommendation is not acceptable (\"nok\"), the claim is sent back to the claims officer for further examination, and the process loops back to the examination stage. This cycle can repeat until the senior claims officer is satisfied.\n\nOnce the senior claims officer is satisfied with the recommendation, the claim handling process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Mark Claim and Make Decision",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Claim Handling Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Further Investigation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Recommendation OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the registration of a claim.  A claims officer then examines the claim.  Based on this examination, the claims officer decides on the next course of action.\n\nIf the claim requires further investigation, the claims officer writes a settlement recommendation. This recommendation is then passed on to a senior claims officer for checking.\n\nThe senior claims officer, after checking the recommendation, marks the claim and makes a decision.  If the senior claims officer finds the recommendation acceptable (\"ok\"), the claim handling process proceeds, and the process ends.\n\nHowever, if the senior claims officer finds the recommendation unsatisfactory (\"nok\"), the claim is sent back to the claims officer for further review and potentially another examination. This loop of examination, recommendation, checking, and potential return continues until the senior claims officer is satisfied.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Mark Claim and Make Decision",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Review Claim",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Requires Further Investigation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Recommendation OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with registering a claim.  A claims officer then examines the claim.  Following the examination, the claims officer has a decision to make. One path is to write a settlement recommendation.  This recommendation then goes to a senior claims officer to check. After checking, the senior claims officer marks the claim and makes a decision. If everything is okay (\"ok\" condition), the claim handling process proceeds, and the process ends. However, if something is not right (\"nok\" condition), the claim is sent back to the claims officer, who examines the claim again, creating a loop.  The other path after the claims officer examines the claim and chooses not to write a recommendation immediately also loops back to the examination step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Claim",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Mark Claim",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Write Recommendation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Claim OK?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_2.json": {
        "0": {
            "text": "The process begins when Assembler AG places an order with a supplier.  Assembler AG then sends the order details to the supplier.  The supplier receives the order and processes it. After processing, the supplier sends an invoice to Assembler AG.  Finally, Assembler AG receives the invoice, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order Details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id9",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when Assembler AG places an order with the Supplier.  Assembler AG then sends the order details to the Supplier.  The Supplier receives the order and processes it.  After processing, the Supplier sends an invoice to Assembler AG.  Finally, Assembler AG receives the invoice, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order Details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id9",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when Assembler AG places an order with a Supplier.  Assembler AG then sends the order details to the Supplier.  The Supplier receives the order and processes it.  Once the order is processed, the Supplier sends an invoice to Assembler AG.  Assembler AG receives the invoice, and the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order Details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        }
    },
    "5_4.json": {
        "0": {
            "text": "The expense report process begins with an employee purchasing a product.  The employee then submits an expense report listing the purchased items.  This report then goes to the employee's supervisor for review.\n\nThe supervisor reviews the expense report and decides whether to approve it. If the supervisor approves the report, it is moved to the treasurer. If the report is not approved, it is sent back to the employee with a note to edit it. The employee then edits the report and resubmits it to the supervisor, starting the review process again.\n\nOnce the treasurer receives the report, they check the receipts to ensure they match the items listed on the report. If the receipts and items match, the treasurer accepts the expenses for processing and confirms the payment, which concludes the process.  However, if any receipts are missing or there is a mismatch, the treasurer sends the report back to the employee to make corrections. The employee then goes through the process of correcting and resubmitting the report again, leading back to the supervisor for review.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Edit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Receipts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept Expenses for Processing",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm Payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Expense Report Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Expense Report Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Receipts and Items Match?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The expense report process begins with an employee purchasing a product.  The employee then submits an expense report listing the purchased items.  This report is then reviewed by a Supervisor.\n\nThe Supervisor reviews the expense report and decides whether to approve it. If the report is approved, it is moved to the Treasurer.  If the report is *not* approved, the Supervisor sends it back to the employee, along with the reason for rejection.  The employee can then edit the report and resubmit it. This creates a loop allowing for revisions until the Supervisor approves.\n\nOnce the Treasurer receives the report, they check the receipts and match them against the items listed in the report.  Following this check, the Treasurer decides if everything is in order. If the items and receipts align, the Treasurer accepts the expenses for processing and confirms the payment, concluding the process.  However, if the Treasurer finds missing receipts or discrepancies, the report is sent back to the employee, who can edit and resubmit as before.  This also creates a loop ensuring accuracy before final payment processing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Edit and Resubmit Report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Receipts and Items",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Accept and Process Expenses",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Approve?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Supervisor approves?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "All in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Treasurer approves?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The expense report process begins with an employee purchasing a product.  Following the purchase, the employee submits an expense report listing the purchased items. This report then goes to the employee's supervisor for review.\n\nThe supervisor reviews the expense report and decides whether to approve it. If the supervisor approves the report, it is moved to the treasurer.  However, if the supervisor does not approve the report, it's sent back to the employee, who can then edit the report and resubmit it through the same review process again with the supervisor. This loop continues until the supervisor approves the report.\n\nOnce the treasurer receives the approved expense report, they check the receipts attached to it.  Then, the treasurer matches the items listed on the expense report with the receipts. If everything is in order and matches correctly, the expenses are accepted for processing, and the treasurer confirms the payment, concluding the process. But if there are any missing receipts or discrepancies, the report is sent back to the employee. The employee then goes through the process of editing and resubmitting the expense report to their supervisor, starting the cycle again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Edit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Receipts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Match Items with Receipts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm Payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Expense Report Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Expense Report Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Receipts and Items Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_6.json": {
        "0": {
            "text": "The process begins with the Claims Notification Department receiving a claim.  The department then checks the claimant's insurance status.\n\nNext, a decision is made based on the insurance status. If the claimant has insurance, the process moves to evaluating the claim's severity. If not, the claimant is informed about the claim rejection, and the process ends.\n\nFollowing claim severity evaluation, the claimant is sent relevant forms. Another decision point occurs when the claimant returns these forms: the department checks if they are complete.\n\nIf the forms are complete, the claim is registered in the Claims Management system.  After registration, there might be some additional checks or actions (implied by the presence of the last Exclusive gateway), after which the process ends.\n\nIf the forms are incomplete, the claimant is informed about the necessary updates. The claimant then returns the updated forms, and the process loops back to checking for completeness. This cycle repeats until the forms are deemed complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Insurance Status",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Forms to Claimant",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Forms Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Register Claim in Claims Management System",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform Claimant about Updates",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Claimant Returns Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "Claim Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Insurance Status Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Forms Completeness Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Additional Checks",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Claims Notification Department receiving a claim.  The department then checks the claimant's insurance status.\n\nBased on the insurance status, a decision is made. If the claimant has insurance, the process moves to evaluating the claim's severity. If the claimant *doesn't* have insurance, the claimant is informed about the claim rejection, and the process ends.\n\nIf the claim severity is being evaluated, the claimant is sent relevant forms.  Another decision point occurs when the claimant returns these forms.  The department checks if the forms are complete.\n\nIf the forms are *not* complete, the claimant is informed to update them, and they must return the forms again.  This creates a loop where the department continues to check for completeness until the forms are satisfactory.\n\nIf the forms *are* complete, the claim is registered in the Claims Management system. A final check is performed (the nature of this check is not specified but assumed necessary), and after this check, the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Insurance Status",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Claim Forms",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Forms Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Register Claim in Claims Management System",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Perform Final Check",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Claim Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Claim Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Insurance Status Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Forms Completeness Check",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Claims Notification Department receiving a claim.  The department then checks the claimant's insurance status.\n\nBased on the insurance status check, the process follows one of two paths. If the claimant has valid insurance, the claim's severity is evaluated. If the claimant doesn't have valid insurance, the claimant is informed about the claim rejection, and the process ends.\n\nIf the claim severity is being evaluated, the claimant is then sent relevant forms. The claimant is expected to return these forms, and the department checks the returned forms for completeness.\n\nNow, another decision point is reached. If the forms are complete, the claim is registered in the Claims Management system. If the forms are incomplete, the claimant is informed about the necessary updates, and the forms are sent back to the claimant.  This creates a loop where the claimant resubmits the forms and the department checks them again, continuing until the forms are deemed complete.\n\nOnce the claim is registered in the Claims Management system, the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Check Insurance Status",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Send Claim Forms",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Receive Returned Forms",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Check Returned Forms",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Inform Claimant (Rejection)",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Inform Claimant (Incomplete Forms)",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Resubmit Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Claim Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "Claim Registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "7",
                        "name": "Insurance Valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf_1",
                        "sourceRef": "1",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "9",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "6",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "13",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "13",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "12",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_1.json": {
        "0": {
            "text": "The process begins with sending a dismissal.  Following this, the dismissal is reviewed.  At this point, a decision must be made.  There are two possible outcomes: either the dismissal is opposed, or it is confirmed. If the dismissal is opposed, another decision is required. After this second decision, the process ends. If, instead of being opposed, the dismissal was confirmed at the first decision point, another decision follows the confirmation, after which the process ends. So, regardless of whether the dismissal is initially opposed or confirmed, the process concludes after a series of two decisions.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Review Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Dismissal Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Opposition Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Confirmation Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "endEvent1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway3",
                        "targetRef": "endEvent1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with sending the dismissal.  Following this, a review of the dismissal takes place.  Based on the review, there are two possible paths.  If the decision is to oppose the dismissal, then the process moves to the \"oppose the dismissal\" step. After opposition is complete, the process proceeds to a point where the dismissal is either confirmed or further actions are taken. If, during the initial review, the decision is *not* to oppose the dismissal, then the process moves directly to the \"confirm the dismissal\" step.  Regardless of whether the dismissal was opposed or not, once the confirmation step is completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Oppose the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Decision to oppose?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Dismissal Confirmed or Further Actions?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with sending a dismissal.  Following this, the dismissal is reviewed.  At this point, a decision must be made.  There are two possible paths: oppose the dismissal or confirm the dismissal.  If the decision is to oppose the dismissal, then the process moves to the opposition task.  Whether the dismissal is opposed or confirmed, the next step involves another decision. This acts as a point of convergence for both paths.  After this final decision, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Oppose Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Oppose or Confirm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_2.json": {
        "0": {
            "text": "The process begins with checking the files.  Then, a decision is made: are there missing files?\n\nIf no files are missing, the process proceeds directly to physically tracking the files.  If files are missing, the first step is to initiate a search for them.  Regardless of whether files were initially missing or not, once the physical tracking of the files is complete, the process converges.\n\nNext, two actions happen simultaneously: the files are handed to the Associate, and the Judge's Lawlist is distributed to the relevant people. Once both of these tasks are finished, the process moves to conducting the directions hearings.  After the hearings conclude, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Physically Track Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Search for Missing Files",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hand Files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct Directions Hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Missing Files?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Converge",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with checking the files.  After checking the files, a decision must be made: are there missing files?\n\nIf there are *no* missing files, the process proceeds to physically track the files.\n\nIf there *are* missing files, the process goes to initiating a search for the missing files.  Regardless of whether files were initially missing or not, both the \"physically track the files\" path and the \"initiate the search of missing files\" path converge.\n\nOnce both physically tracking existing files and searching for any missing files is complete, two parallel actions take place: handing the files to the Associate *and* distributing the Judge's Lawlist to the relevant people.\n\nAfter both these tasks are finished, the process moves to conducting the directions hearings. Finally, after the hearings, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Physically Track Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Initiate Search for Missing Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand Files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Directions Hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Missing Files?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with checking the files.  Following this check, a decision is made: are there missing files?\n\nIf there are *no* missing files, the process proceeds to physically track the files.\n\nIf files *are* missing, the process of initiating a search for the missing files begins.\n\nRegardless of whether files were initially missing or not, both the \"physically track files\" and \"initiate search for missing files\" paths converge.  At this convergence point, two actions happen in parallel: handing the files to the Associate and distributing the Judge\u2019s Lawlist to the relevant people.\n\nOnce both of these parallel actions are complete, the directions hearings are conducted. After the hearings are finished, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Physically Track Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate Search for Missing Files",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hand Files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Distribute Judge\u2019s Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct Directions Hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Missing Files?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Converging Gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_1.json": {
        "0": {
            "text": "The bicycle company's order fulfillment process begins when the sales department receives an order.  The sales department then decides whether to accept or reject the bike order.\n\nIf the order is rejected, the process ends.  If the order is accepted, the sales department informs both the engineering department and the storehouse.  These two departments work concurrently.\n\nThe engineering department starts preparing for assembly and then assembles the bicycle.  Simultaneously, the storehouse processes the part list and checks the quantity of parts.\n\nBased on the parts check, the storehouse decides if the part is in house.  If the part is available, it's reserved. If not, the part is back-ordered.  Regardless of whether the part was in house or back-ordered, the storehouse proceeds with an \"ok?\" check.\n\nOnce this \"ok?\" check is complete, *and* the bicycle has been assembled, the bicycle is shipped by the sales department and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Inform Engineering",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Inform Storehouse",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Prepare for Assembly",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Check Quantity of Parts",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Back-order Part",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "\"Ok?\" Check",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Accept or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Part in House?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Ready to Ship?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gw1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw2",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "12",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "6",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gw3",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The bicycle ordering process at the bicycle company starts when the sales department receives an order.  The sales department then decides whether to accept or reject the bike order.\n\nIf the order is rejected, the process ends. If the order is accepted, the sales department informs both the engineering department and the storehouse simultaneously.\n\nWhen informed, the engineering department starts preparing for assembly.  Concurrently, the storehouse processes the parts list and checks the quantity of parts.  After checking parts, the storehouse determines if the part is in house.\n\nIf the part is in house, the storehouse reserves the part and, once reserved, the process checks if everything is okay.  If not okay, the process loops back to checking the part quantity. If okay, this branch of the process is complete and joins back with the engineering department\u2019s work.\n\nIf the part is *not* in house, the storehouse back-orders the part.  Once the part is back-ordered, the process also checks if everything is okay. Again, if not okay, it loops back to checking part quantity.  If okay, this branch, too, completes and rejoins the main flow.\n\nOnce the storehouse tasks and the engineering department\u2019s preparation are finished, the engineering department assembles the bicycle.  After assembly, the sales department ships the bicycle, and the entire process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Inform Engineering",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Inform Storehouse",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Prepare Assembly",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Process Parts List",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check Part Quantity",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Back-Order Part",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "16",
                        "name": "Order Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Accept or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Part in House?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Everything Okay?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "Everything Okay?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "name": "Assembly Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gw1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw2",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gw3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gw4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "gw3",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gw4",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "5",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "gw5",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "15",
                        "targetRef": "16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The bicycle company's order fulfillment process begins when the sales department receives an order.  The sales department then decides whether to accept or reject the bike order.\n\nIf the order is rejected, the process ends.  If the order is accepted, the sales department informs both the engineering department and the storehouse.  These two departments then work concurrently.\n\nThe engineering department starts preparing for assembly, and simultaneously, the storehouse begins processing the part list. Once the part list is processed, the storehouse checks the quantity of parts.\n\nBased on the parts check, the storehouse decides if the part is in house. If the part is available, it's reserved.  If the part is not in house, it's back-ordered. After either reserving or back-ordering the part, there is a check to see if everything is okay. This \"okay\" check might represent confirmation that a back-ordered part has arrived or a final quality check after reserving an existing part.\n\nRegardless of whether the part was in house initially, after the \u201cokay\u201d check, the process continues.  Once the parts are ready and the engineering department has prepared for assembly, the bicycle is assembled.  Following assembly and the \u201cokay\u201d check from the storehouse, the sales department ships the bicycle, and the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Inform Engineering",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Inform Storehouse",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Prepare for Assembly",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check Quantity of Parts",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Back-order Part",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Check if Okay",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "16",
                        "name": "Order Fulfilled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Accept or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Part in House?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw4",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gw1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gw1",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gw3",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw2",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "9",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "5",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gw4",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "15",
                        "targetRef": "16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "5_2.json": {
        "0": {
            "text": "The vacation request process begins when an Employee submits a vacation request.  The system then registers the requirement.  Next, the Immediate Supervisor receives the request and reviews it.  The Supervisor then makes a decision: approve or reject.\n\nIf the request is rejected, the system returns the application to the Employee.  If the request is approved, the system generates a notification for the HR Representative.  The HR Representative then completes the required procedures.  Once the HR Representative completes the procedure or the application is returned to the employee, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "System registers the requirement",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Immediate Supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor reviews the request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "System returns the application to the Employee",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "HR Representative completes the required procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Supervisor approves or rejects",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when an Employee submits a vacation request.  The System then registers the requirement.  Next, the Immediate Supervisor receives the request and reviews it.  The Supervisor then makes a decision: is the request approved?\n\nIf the request is *not* approved, the System returns the application to the Employee.  If the request *is* approved, the System generates a notification for the HR Representative.  The HR Representative then completes the required procedure. Regardless of whether the vacation request is approved or not, the process ends after either the employee receives the returned application or the HR representative completes the procedures.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "System registers the requirement",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Immediate Supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor reviews the request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "System returns the application to the Employee",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "System generates a notification for the HR Representative",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "HR Representative completes the required procedure",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Is the request approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an Employee submits a vacation request. The System then registers the requirement.  This request is then received by the Employee's Immediate Supervisor. The Supervisor reviews the request and makes a decision: approve or reject.\n\nIf the Supervisor rejects the request, the System returns the application to the Employee.  \n\nIf the Supervisor approves the request, the System generates a notification for the HR Representative.  The HR Representative then completes the necessary procedures.  Regardless of whether the request is approved or rejected, once the HR Representative has finished their tasks (if applicable) or the application is returned to the Employee, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "System registers the requirement",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor reviews the request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "System returns the application to the Employee",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "System generates a notification for the HR Representative",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "HR Representative completes the necessary procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Supervisor Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_4.json": {
        "0": {
            "text": "The sales process begins with the Sales Staff determining contact details of potential customers.  From there, they have a few options. They can directly buy details for cold calls, participate in exhibitions to find leads, or they might already know a person interested in the product.\n\nIf they participate in exhibitions, they will eventually merge back with the other paths and proceed to call the customer (Call Center Staff). If the sales staff already knows an interested person, they'll also move directly to calling them.  If they buy contact details, they will follow up by calling those contacts (Call Center Staff).\n\nOnce the call center staff calls the customer, they will determine the contact person and then determine the budget. After assessing customer interest, they check if the customer has a low budget.\n\nIf the budget is low, the process ends. If the budget isn't low, the Head of Development acquires the customer and decides if a technical presentation is necessary.\n\nIrrespective of how the Sales Staff initially identified the potential customer (bought details, exhibition, known contact), all leads will converge at the call center staff making calls.  \n\nIf the customer is interested after the initial assessment and the budget isn't low, the Head of Development acquires the customer and then determines if a technical presentation is needed.\n\nIf a technical presentation *is* needed, there are two possibilities: either the Sales Representative makes an online presentation, or the Pre-Sales Employee makes an online presentation. Afterwards, they wait for the customer to respond.\n\nIf a technical presentation is *not* needed, they also wait for the customer.\n\nAfter waiting, regardless of whether there was a technical presentation or not, they check if the customer wants to be contacted.  If so, they create a quotation and subsequently check whether they have secured the customer. Regardless of the outcome, the process then ends.\n\nIf the customer does *not* want to be contacted after waiting, they can call the customer (Sales Representative), and the process flows back to creating a quotation.  If the customer cannot be reached directly after waiting, the sales staff will call and ask for contact details of the potential customer. The loop can potentially restart from that point if any relevant criteria aren't met.\n\nThis creates a cycle where a sales representative might call again, create a quotation again, and so on until the customer either declines contact or the sales staff secure them as a customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Determine Contact Details",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Buy Contact Details",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Participate in Exhibitions",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Call Customer",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Determine Contact Person",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Determine Budget",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Assess Customer Interest",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Acquire Customer",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Decide on Technical Presentation",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Make Online Presentation (Sales Rep)",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Make Online Presentation (Pre-Sales)",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Wait for Customer Response",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Check if Customer Wants to be Contacted",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Create Quotation",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Check if Customer Secured",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Call Customer (Sales Rep)",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "Call and Ask for Contact Details",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "18",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "19",
                        "name": "Low Budget End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "20",
                        "name": "Initial Contact Method",
                        "type": "Exclusive"
                    },
                    {
                        "id": "21",
                        "name": "Budget Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "22",
                        "name": "Technical Presentation Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "23",
                        "name": "Who Makes Presentation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "24",
                        "name": "Customer Contacted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "25",
                        "name": "Customer Secured?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "20",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "20",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "20",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "21",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "21",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "9",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "22",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "22",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "23",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "23",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "13",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "24",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "24",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "24",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "16",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "17",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "15",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "25",
                        "targetRef": "18"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The sales process begins with the Sales Staff determining contact details of potential customers. From there, they have a few options:\n\n1. **Buy details for cold calls:**  The Sales Staff buys contact details and then checks the outcome.  Based on this, they either loop back to \"Call Center Staff calls the customer\" and begin the process anew or move forward in the process, checking customer interest.\n2. **Participate in exhibitions:** The Sales Staff participates in exhibitions, which leads to the same check as buying details: \"Call Center Staff calls the customer\".  Again, they either loop back to the beginning call or move forward to assess customer interest.\n3. **Know person interested in the product:** If the Sales Staff already knows a person interested in the product, they skip directly to checking customer interest.\n\nOnce customer interest is being assessed, several decisions happen based on the information gathered by the Call Center Staff, who will first call the customer, determine the contact person, and then determine the budget:\n\n* **Is the customer interested?** If not, the process ends. If yes, the process assesses if the budget is low.\n* **Is the budget low?** If so, the process ends.  If not, the Head of Development acquires the customer.\n\nAfter acquiring the customer, the Head of Development makes another decision:\n\n* **Is a technical presentation required?** If not, the Sales Representative makes an online presentation and then follows up with the customer. The process continues through the decision: Did the customer make contact?\n* If yes, the sales staff creates a quotation and follows up with a decision point to end or restart based on if they make further contact.\n* If not, then a sales representative calls the customer.  This loops back to creating a quote and checking for future contact.\nIf a technical presentation *is* required, the Pre-Sales Employee makes an online presentation, and the process continues with the \"wait for the customer\" task, followed by another key decision.\n\nFollowing the wait, another decision occurs:\n\n* **Did the customer make contact?**  If yes, the Sales Staff creates a quotation, and the process continues based on if they make contact as above. If no, the Sales Representative calls the customer, which then loops back to \"create a quotation\" and the subsequent decision point to end or restart.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Determine contact details",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Buy details for cold calls",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Check outcome",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Call Center Staff calls the customer",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Participate in exhibitions",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Know person interested in the product",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check customer interest",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Determine contact person",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Determine budget",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Acquire customer",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Make online presentation",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Follow up with customer",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Create quotation",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Sales Representative calls customer",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Make technical presentation",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Wait for customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "17",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "18",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "19",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "20",
                        "name": "Source of Lead?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "21",
                        "name": "Outcome?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "22",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "23",
                        "name": "Budget Low?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "24",
                        "name": "Technical Presentation Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "25",
                        "name": "Further contact?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "26",
                        "name": "Customer make contact?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "20",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "20",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "20",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "21",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "21",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "7",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "22",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "22",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "9",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "23",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "23",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "10",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "24",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "24",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "12",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "16",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "26",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "26",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "14",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "13",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "25",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "25",
                        "targetRef": "4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The sales process begins with the Sales Staff determining contact details of potential customers.  From there, there are four possible paths:\n\n1. **Buying details for cold calls:** The Sales Staff may choose to buy details for cold calls, after which they rejoin the main flow.\n2. **Participating in exhibitions:** The Marketing Staff participates in exhibitions, after which they rejoin the main flow.\n3. **Knowing a person interested in the product:** If the Sales Staff knows a person interested in the product, they rejoin the main flow directly.\n4. **Call Center Staff initiated contact:**  This path starts with the Call Center Staff calling a customer. Next, the Call Center Staff determines the contact person and then the budget.  Following this, the Call Center Staff assesses the customer's interest.\n\nAll four paths converge to a point where it is determined whether the customer has been contacted.\n\n* **If not contacted:** The Call Center Staff calls the customer again, starting the Call Center Staff process anew.  This forms a loop, repeating until the customer is contacted.\n* **If contacted:** The process checks if the customer is interested.\n\n    * **If not interested:** If the customer isn't interested, based on the budget check from the Call Center Staff, two actions can occur. The Sales staff acquires the customer if they have a high budget. Alternatively, If it's determined the customer has a low budget, the process ends.\n    * **If interested:** If the customer *is* interested and the budget check indicates a low budget, the process ends. If the budget is not low, the process progresses. \n\nContinuing from the scenario where the customer *is* interested and doesn't have a low budget, the Head of Development acquires the customer. Then, a decision is made on whether a technical presentation is necessary.\n\n* **If a technical presentation is *not* needed:** The Sales Representative makes an online presentation to the customer. Afterward, the Sales Staff determines if the customer is still interested via contact. If yes, create quotation and then the Sales staff must decide if customer was acquired, if yes the process ends, and returns to \"wait for customer\" to contact them again if they were not. If the Sales staff determines the customer is no longer interested the process ends there. \n* **If a technical presentation *is* needed:** The Pre-Sales Employee makes an online presentation to the customer. This flows into the same subsequent steps as above (Sales Staff contact, create quotation, acquisition check and end).\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Buy details for cold calls",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Participate in exhibitions",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "Call customer",
                        "type": "Manual"
                    },
                    {
                        "id": "4",
                        "name": "Determine contact person",
                        "type": "Manual"
                    },
                    {
                        "id": "5",
                        "name": "Determine budget",
                        "type": "Manual"
                    },
                    {
                        "id": "6",
                        "name": "Assess customer interest",
                        "type": "Manual"
                    },
                    {
                        "id": "8",
                        "name": "Acquire customer (high budget)",
                        "type": "Manual"
                    },
                    {
                        "id": "10",
                        "name": "Acquire customer",
                        "type": "Manual"
                    },
                    {
                        "id": "12",
                        "name": "Make online presentation",
                        "type": "Manual"
                    },
                    {
                        "id": "13",
                        "name": "Make online presentation",
                        "type": "Manual"
                    },
                    {
                        "id": "14",
                        "name": "Determine interest via contact",
                        "type": "Manual"
                    },
                    {
                        "id": "15",
                        "name": "Create quotation",
                        "type": "Manual"
                    },
                    {
                        "id": "17",
                        "name": "Wait for customer",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "End (Low Budget)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "End (Low Budget)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "16",
                        "name": "End (Acquired)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "18",
                        "name": "End (Not Interested)",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "7",
                        "name": "Customer contacted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "19",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "20",
                        "name": "Low Budget?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "21",
                        "name": "Technical Presentation Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "22",
                        "name": "Customer Acquired?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "0",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "1",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "20",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "20",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "19",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "21",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "21",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "12",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "14",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "22",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "22",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "15",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "10",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "16",
                        "targetRef": "17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_12.json": {
        "0": {
            "text": "The process begins with the EC telling INQ about a data change.  Following this, INQ notifies the IP of the change. The IP then checks whether the data can be changed. Based on this check, there are two possible paths.  If the IP determines the data *can* be changed, they confirm the changes. If, however, the IP determines the data *cannot* be changed, they reject the changes.  Regardless of whether the changes are confirmed or rejected, the IP ultimately marks the process as complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "INQ notifies IP of change",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "IP checks whether data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "IP rejects changes",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "IP marks process as complete",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the EC telling INQ about a data change.  Following this, INQ notifies the IP of the change. The IP then checks whether the data can be changed. Based on this check, there are two possible paths.\n\nIf the IP determines that the data can be changed, they confirm the changes.\n\nIf, however, the IP determines that the data cannot be changed, they reject the changes.\n\nRegardless of whether the changes are confirmed or rejected, the process then concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells INQ about data change",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies IP",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks if data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects changes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the EC telling INQ about a data change.  Following this notification, INQ then notifies the IP of the proposed change.  The IP then checks whether the data can be changed.  Based on this check, there are two possible paths.\n\nIf the IP determines that the data *can* be changed, they confirm the changes.\n\nIf the IP determines the data *cannot* be changed, they reject the changes.\n\nRegardless of whether the changes are confirmed or rejected, the IP proceeds to the end of the process.  Both confirming and rejecting the changes lead to the same outcome \u2013 the conclusion of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells INQ about a data change",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies IP of proposed change",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks whether data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects changes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_7.json": {
        "0": {
            "text": "The process begins with an employee searching the police report.  Following this, the employee puts together the claim documentation and the police report.  Next, a claims handler calculates an initial claim estimate.  Based on this estimate, the claims handler creates an action plan.  This action plan is then passed to a claims manager, who negotiates a settlement based on the claim estimate.  Finally, the claims manager informs the claimant of the outcome, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Collate Claim Documentation and Police Report",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Negotiate Settlement",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Inform Claimant of Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with an employee searching the police report.  After the search is complete, the employee puts together the claim documentation along with the police report.  This combined information is then passed on to a claims handler who calculates an initial claim estimate.  Based on this estimate, the claims handler creates an action plan. The action plan is then sent to a claims manager who negotiates a settlement based on the claim estimate. Finally, the claims manager informs the claimant of the outcome, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Put together claim documentation with police report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create action plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform claimant of the outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an employee searches the police report.  Following this, the employee puts together the claim documentation along with the police report.  This combined information is then passed on to a claims handler who calculates an initial claim estimate.  Next, the claims handler creates an action plan based on this estimate. The action plan is then passed to a claims manager who negotiates a settlement based on the claim estimate.  Finally, the claims manager informs the claimant of the outcome of the settlement negotiation, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Put together claim documentation with police report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create action plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform claimant of the outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_1.json": {
        "0": {
            "text": "The process begins with backing up the database.  Next, the database is checked.  Based on this check, the process branches:\n\n* **If no new records are found:** The CRM system is checked. This check leads to another decision:\n    * **If new returns exist in the CRM system:** Accounts and customers with defaults are registered. Then, a decision is made regarding advising codes:\n        * **If codes have not been advised:** A new table of defaulting accounts is produced and sent to account management. After this, a complex loop begins involving the time of day and checking the CRM system and filling in returns. In Detail: \n            * The process checks if it's after 2:30 PM.\n            * **If it's after 2:30 PM:** An alert is sent to the supervisor. The supervisor has a number of options and can fill in returns.\n                * The returns are checked by the supervisor to see if they are filled.\n                * **If they have not been filled by the supervisor:** The process loops back around again to checking if its after 2:30 PM, as the supervisor might need more time.\n                * **If returns are filled:** They are reconciled with the existing account defaulters table. After which, another time check is performed.\n            * **If it's before 2:30 PM:** The process goes directly to the section of filling out returns by the supervisor.\n            * Post reconciliation, if the time is past 4:00 PM, a message is sent to the supervisor and the process moves on. Otherwise, if it's before 4:00 PM, it goes back and checks if returns have been filled by the supervisor again until its after 4:00 PM. Once its after 4:00PM, the reconciliation is completed and the process ends.\n        * **If codes have been advised:** The process checks if it's after 2:30 PM, going through the same procedure of sending an alert to the supervisor, checking and filling out returns, reconciling if filled and looping back to checking the time until 4:00PM, as described previously. \n    * **If no new returns exist in the CRM system:** The process proceeds directly to check if its past 2:30PM and then loops through the rest of the process as before: send alert, fill returns, check time, check filling, reconcile if filled, and complete reconciliation if its after 4:00PM.    \n* **If new records are found:**  The process checks if its after 2:30 PM. It then branches based on the time in the same process of sending alerts, filling and checking returns, reconciling, checking the time again till its after 4:00PM, and then completes the reconciliation.\n\nAfter these intricate steps involving multiple checks and decisions based on the presence of new records, returns, advised codes, and the time of day, the process ultimately ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Backup Database",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Check Database for New Records",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Check CRM System for New Returns",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "Register Accounts and Customers with Defaults",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "Produce and Send Defaulting Accounts Table",
                        "type": "Service"
                    },
                    {
                        "id": "10",
                        "name": "Check if Time is After 2:30 PM",
                        "type": "Service"
                    },
                    {
                        "id": "12",
                        "name": "Send Alert to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "13",
                        "name": "Supervisor Fills in Returns",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Check if Returns are Filled",
                        "type": "Service"
                    },
                    {
                        "id": "16",
                        "name": "Reconcile Returns with Account Defaulters Table",
                        "type": "Service"
                    },
                    {
                        "id": "17",
                        "name": "Check if Time is After 4:00 PM",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "19",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "New Records Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "New Returns Exist?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "Codes Advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "name": "Is it after 2:30 PM?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "name": "Returns Filled?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "18",
                        "name": "Is it after 4:00 PM?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf_0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf_1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "3",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "11",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "15",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf_21",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf_22",
                        "sourceRef": "18",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf_23",
                        "sourceRef": "18",
                        "targetRef": "19"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with backing up the database.  Next, the database is checked.  Based on this check, the process branches:\n\n* **If no new records are found:** The CRM system is checked.  Following this, another decision point is reached based on whether new returns exist in the CRM system.\n    * **If new returns exist:**  All defaulting accounts and customers are registered.  Then, the process determines if codes have been advised.\n        * **If codes have *not* been advised:** A new table of defaulting accounts is produced and sent to account management.  Afterward, a decision point leads to either checking if it's after 2:30 pm or sending an alert to the supervisor. More on this later.\n        * **If codes *have* been advised:** This merges back with the path where no new returns were found in the CRM, described below.\n    * **If no new returns exist:** This also merges back with the path where codes *have* been advised, described below.\n* **If new records *are* found in the database check:** This also merges back with the path where codes *have* been advised, described below.\n\nAt the merge point where codes have been advised, no new returns were found, or new records were found in the initial database check, the process continues by checking if it is after 2:30 pm.\n\n* **If it is after 2:30 pm:** An alert is sent to the supervisor, and a further check determines if the returns have been filled.\n    * **If returns are filled:** This takes the process to reconcile with the existing account defaulters table.\n    * **If returns are not filled:**  This re-checks if it's after 2:30 pm. This creates a loop until the returns are filled. Note the other path from the initial \"after 2:30 pm\" check below:\n* **If it is *not* after 2:30 pm:**  This also takes the process to check if it is after 2:30 pm, which creates a loop to check again in case of negative results.\n\n\nOnce the existing account defaulters table reconciliation is complete, a decision is made based on whether it is after 4:00 pm.\n\n* **If it is after 4:00 pm:** A message is sent to the supervisor.\n* **If it is *not* after 4:00 pm:**  The reconciliation is completed.\n\nAfter either sending the message to the supervisor or completing the reconciliation, the final step is reached, regardless of the path taken, ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup Database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Database for New Records",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check CRM System for New Returns",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Register Defaulting Accounts and Customers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Produce and Send New Table of Defaulting Accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Send Alert to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if After 2:30 PM",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Check if Returns are Filled",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Reconcile with Existing Account Defaulters Table",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if After 4:00 PM",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send Message to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Complete Reconciliation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "New Records Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "New Returns Exist?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Codes Advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "After 2:30 PM?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Returns Filled?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "After 4:00 PM?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id19",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with backing up the database.  Next, the database is checked.  Based on this check, the process diverges.\n\nIf the check reveals no new records, the CRM system is checked.  This CRM check then leads to another decision point: are there new returns?  If yes, accounts and customers with defaults are registered.  After registration, another decision follows concerning whether codes have been advised.  If no codes are advised, a new table of defaulting accounts is produced and sent to account management.  This is followed by a decision point, and if a certain condition is met (implicitly understood in the model, perhaps related to timing or approval), the process checks if returns are filled. If yes, the system reconciles with the existing account defaulters table. Then another decision, possibly time-related (>16:00?), leads to either sending a message to the supervisor or completing the reconciliation, after which the entire process ends.  However, if returns are *not* filled after the initial \"codes advised?\" check, a time check (>16:00) occurs, and depending on that, a message is sent to the supervisor or the process directly moves to the final reconciliation before the end.\n\nReturning to the earlier CRM check: if there are *no* new returns, the process bypasses the account registration and proceeds to a decision point. From there, two paths exist based on an implicit condition (similar to the one after sending the table to account management). One path leads to a time check (>14.30?), which, if true, sends an alert to the supervisor, who then performs another CRM check leading to another return check.  The second path from that decision point, if the implicit condition is not met, flows directly to the time check (>14.30?). Regardless of the path, after the alert to the supervisor and the CRM check, the remaining process regarding returns and reconciliation mirrors the previously described flow.\n\nFinally, if the initial database check *does* reveal new records, the process skips the initial CRM check and moves directly to the decision point where the implicit condition is evaluated (like in the scenarios described earlier).  Following this, the flow becomes the same as the two previously explained branches, involving the time checks, the alerts to the supervisor, the returns check, and the reconciliation process, eventually concluding the whole operation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup Database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Database",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check CRM",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Register Defaulters",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Produce and Send Defaulters Table",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Reconcile with Defaulters Table",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Message to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Reconciliation",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "CRM Check (by Supervisor)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "New Records?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "New Returns?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Codes Advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Condition Met?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Returns Filled?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "> 16:00?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Condition Met?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "> 14:30?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_6.json": {
        "0": {
            "text": "The process begins with the MSPN sending a dismissal.  The MSPO then reviews the dismissal. Based on the review, the MSPO makes a decision.  If the MSPO rejects the dismissal, the process continues to the \"reject the dismissal of the MSPN\" task. Following this rejection, the process continues back to the MSPO for a further decision. If the MSPO confirms the dismissal instead of rejecting it, the process moves to the \"confirm the dismissal of the MSPN\" task.  Regardless of whether the dismissal was initially rejected or confirmed, the process reaches a final decision point after the subsequent tasks are completed.  After this final decision, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "send dismissal",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "review dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "reject the dismissal of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "confirm the dismissal of the MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Review Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the MSPN sending a dismissal.  Next, the MSPO reviews the dismissal. Based on the review, the MSPO can either reject or confirm the dismissal of the MSPN. If the dismissal is rejected, the MSPO rejects the dismissal of the MSPN.  Following this rejection, the process loops back to the MSPO reviewing the dismissal again. If, however, the MSPO confirms the dismissal of the MSPN, the process reaches its end. Regardless of whether the dismissal is initially rejected or confirmed, the process concludes only after the MSPO makes a final confirmation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sends dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO rejects dismissal of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSPO confirms dismissal of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Review Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Confirmation Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the MSPN sending a dismissal.  The MSPO then reviews this dismissal. Based on the MSPO's review, there are two possible outcomes. If the MSPO rejects the dismissal, they then reject the dismissal of the MSPN.  Following this rejection, the process reaches its end. Alternatively, if the MSPO does not reject the dismissal during their review, they confirm the dismissal of the MSPN. After either confirming or rejecting the dismissal, the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sends dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO rejects dismissal of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO confirms dismissal of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Dismissal Rejected?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_10.json": {
        "0": {
            "text": "The process begins with a decision point.  There are two initial paths: one where a Fault Detector reports a failure to the MPO (Measuring Point Operator), and another where the MPO suspects a fault.  These two paths converge to a single point where the MPO examines the failure.\n\nAfter examination, the MPO faces another decision.  If the examination suggests a fault with the detector itself, the MPO must then confirm the failure of the fault detector. If the failure isn\u2019t related to the fault detector, the MPO rejects the fault detector failure and the process moves forward.\n\nIf the fault detector failure is confirmed, the MPO informs the GO (Grid Operator). Following this, the MPO informs the MSP (Meter Service Provider) about the confirmed failure.  Then, the MPO fixes the fault at the measuring device.\n\nOnce the fault is fixed, the MPO shares the results of the repairs.  The MPO then informs the GO about the resolution of the interference.  Subsequently, the MPO also informs the MSP about the resolution of the interference. A final decision point exists here \u2013  after informing the MSP of the resolution, the process ends.  Likewise, if the MPO had rejected the fault detector failure earlier, the process also proceeds to this same endpoint and concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Fault Detector reports failure",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "MPO suspects fault",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPO examines failure",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPO confirms failure of fault detector",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "MPO informs GO of confirmed failure",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "MPO informs MSP of confirmed failure",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "MPO fixes fault at measuring device",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "MPO shares results of repairs",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "MPO informs GO of resolution",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "MPO informs MSP of resolution",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MPO rejects fault detector failure",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Fault origin",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Fault detector issue?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "3",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "7",
                        "targetRef": "14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a decision point.  There are two initial paths:\n\n* **Path 1: Fault Detector Initiated:** The Fault Detector reports a failure to the MPO. Following this report, another decision is made. This decision branches into two further possibilities:\n\n    * **Path 1A:** The MPO confirms the failure of the fault detector. Then, the MPO informs the Grid Operator (GO).  After informing the GO, the MPO informs the Meter Service Provider (MSP).  Finally, the MPO fixes the fault at the measuring device, shares the repair results with the GO, who then informs the MSP about the resolution. This concludes the process.\n\n    * **Path 1B:** The MPO rejects the failure report from the fault detector. Then the process continues as in Path 1A, starting from informing the MSP directly (bypassing the informing GO step).\n\n* **Path 2: MPO Initiated:** The MPO suspects a fault. This leads to examining the failure. After examining the failure, a decision point occurs, with the same possibilities as the decision point in Path 1:\n\n    * **Path 2A:** The MPO confirms the failure.  This path then follows the same steps as Path 1A (informing the GO, informing the MSP, fixing the fault, sharing results, GO informing MSP).\n\n    * **Path 2B:** The MPO rejects the failure. This path then follows the same steps as Path 1B starting from the informing MSP step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "5",
                        "name": "MPO confirms failure",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPO informs GO",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MPO informs MSP",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "MPO fixes fault",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "MPO shares repair results with GO",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "GO informs MSP of resolution",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "MPO rejects failure report",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "MPO suspects fault",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "MPO examines failure",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "MPO rejects failure",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "24",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "Fault Source",
                        "type": "Exclusive"
                    },
                    {
                        "id": "4",
                        "name": "Failure Confirmed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "name": "MPO confirms failure?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "19",
                        "name": "Failure Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "14",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "19",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "20",
                        "targetRef": "7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a decision point.  There are two initial paths:\n\n* **Path 1: Fault Detection by the System:** The system's Fault Detector reports a failure to the MPO (Meter Point Operator). Following this report, another decision is made.\n\n* **Path 2: Suspected Fault:** The MPO suspects a fault. This suspicion also leads to the next stage, mirroring the path from the automatic fault detection.\n\nBoth paths converge to a point where the MPO examines the reported or suspected failure. After examination, a decision is made:\n\n* **Decision 1: Failure Confirmed:** If the MPO confirms the failure of the fault detector, they inform the GO (Grid Operator).  The GO then informs the MSP (Meter Service Provider), who fixes the fault at the measuring device. After fixing the fault, the MSP shares the results of the repairs and informs the GO that the interference has been resolved. The GO subsequently informs the MSP that the interference has been resolved. Finally, a concluding decision is reached.\n\n* **Decision 2: Failure Rejected:**  If the MPO rejects the failure of the fault detector after examination, they reject the failure of the fault detector. This rejection also leads to the concluding decision.\n\nThe process ends after the final decision point, regardless of the path taken.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fault Detector reports failure",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "MPO examines failure",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPO informs GO",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO informs MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP fixes fault",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP shares repair results, informs GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs MSP interference resolved",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "MPO rejects failure",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Initial Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Failure Confirmation",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Concluding Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_3.json": {
        "0": {
            "text": "The hotel's room service process begins when a guest calls room service. The room service manager takes down the order and then simultaneously submits an order ticket to the kitchen and gives the beverage order to the sommelier.  \n\nIn the kitchen, the food is prepared.  At the same time, the sommelier prepares the beverages. Once both the food and beverages are ready, the waiter readies a cart.  The waiter then delivers the cart to the guest.\n\nAfter the delivery, the waiter returns to the room-service station.  At this point, there's a decision to be made: are there other orders to be handled?  If yes, the waiter waits to do the billing for the next order. If no, the waiter debits the guest\u2019s account, concluding the process for that order.  After the guest's account is debited, the current instance of the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Food Order Ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Beverage Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver Cart",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Debit Guest Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest Calls Room Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Other orders?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a guest calls room service. The room service manager takes down the order and then simultaneously submits an order ticket to the kitchen and gives the beverage order to the sommelier.  \n\nIn the kitchen, the food is prepared.  At the same time, the sommelier prepares the beverages.  Once both the food and beverages are ready, the waiter readies a cart. After the cart is ready, it\u2019s delivered to the guest. The waiter then returns to the room-service station.\n\nBack at the station, the waiter checks if there are any other orders to be processed. If there are more orders, the waiter waits to do the billing for the next order. This loop continues until there are no further orders.  If there are no other orders, the guest\u2019s account is debited, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Food Order Ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Beverage Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver to Guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check for other orders",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Wait to do billing for next order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit Guest Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest calls room service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Food and Beverages Ready?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "More orders?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "join",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The hotel's room service process begins when a guest calls room service. The room service manager takes down the order and then submits an order ticket to the kitchen and simultaneously gives the beverage order to the sommelier.  This starts two parallel processes: one in the kitchen and one with the sommelier.\n\nThe kitchen prepares the food.  The sommelier prepares the beverages. Once both the food and beverages are ready, they converge and the waiter readies a cart. The waiter then delivers the cart to the guest.  After delivery, the waiter returns to the room-service station.\n\nBack at the station, the waiter checks if there are any other orders to fulfill. If there are more orders, the waiter waits until billing is completed. Once billing is done, the waiter debits the guest's account, and the process repeats from taking the next room service order. Alternatively, if there are no further orders, the waiter debits the guest\u2019s account for the current order and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Order Ticket to Kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Beverage Order to Sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver Cart to Guest",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Return to Room-Service Station",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check for Other Orders",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Debit Guest's Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest Calls Room Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Food and Beverages Ready?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "More Orders?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Billing Completed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "10_14.json": {
        "0": {
            "text": "The process begins with the Meter Point Operator Organization (MPOO).  The MPOO has a choice to make regarding which bill to send to the Grid Operator (GO): a bill for metering point operations, a bill for measurement, a bill for additional readings, or a bill for equipment acquisition.\n\nIf the MPOO chooses to send the bill for metering point operations to the GO, then the process continues to a decision point. From this decision point, the MPOO might send the same bill to the Meter Point Operator Network (MPON), or continue with one of the other billing options (measurement, additional readings, or equipment acquisition), each leading back to the same decision point. This means the MPOO can send multiple bills if needed. Once all bills are sent to the GO, the process moves forward.\n\nWhether the bill is for metering point operations, measurement, additional readings, or equipment acquisition, all bills sent to the GO follow the same subsequent path. The GO examines the bill. Then, the GO decides whether to confirm the invoice with a payment advice or reject the invoice.  Regardless of confirmation or rejection, the process then moves to a final decision point.\n\nIf the MPOO originally chose to send a bill for equipment acquisition to the MPON instead of the GO, the MPON examines the bill. The MPON then decides to either confirm the invoice with a payment advice or reject the invoice. Again, regardless of confirmation or rejection, the process leads to the same final decision point as the bills sent to the GO.\n\nFrom this final decision point, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Examine Bill",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Examine Bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "4",
                        "name": "Send to MPON?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "GO Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "name": "MPON Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "All Bills Sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "name": "Final Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "MPON",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "4",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "4",
                        "targetRef": "1"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "4",
                        "targetRef": "2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the Meter Point Operator Organization (MPOO).  The MPOO has a choice to make regarding the type of bill to send to the Grid Operator (GO).  They can send one of four different bills: a measurement bill, a bill for additional readings, a bill for equipment acquisition, or a metering point operations bill.\n\nOnly one of these bills is sent at a time. After sending the bill for equipment acquisition to the GO, the process continues without any additional action by the MPOO.\n\nFor the other three bill types (measurement, additional readings, or metering point operations), once sent, they are simultaneously also sent to the Meter Point Operator Network (MPON).  The MPON receives a copy regardless of which of these three types was sent.\n\nOnce any of the four types of bills arrive at the GO, it's examined. Following the examination, the GO decides to either confirm the invoice with a payment advice or reject the invoice. Regardless of confirmation or rejection, the process ends for the GO.\n\nIf the MPOO initially sent an equipment acquisition bill to the Meter Point Operator Network (MPON), the MPON examines the bill. Then, the MPON decides whether to confirm the invoice with payment advice or reject the invoice.\n\nIf the MPON confirms the invoice, a final check occurs where the status is once again confirmed or rejected. If rejected at this point, or if the MPON initially rejects the invoice, the process ends for the MPON.  If the final check confirms the invoice, the entire process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Send Measurement Bill",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Send Bill for Additional Readings",
                        "type": "Service"
                    },
                    {
                        "id": "3",
                        "name": "Send Bill for Equipment Acquisition",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Send Metering Point Operations Bill",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "Examine Bill",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Confirm Invoice with Payment Advice",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Reject Invoice",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Examine Bill",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Confirm Invoice with Payment Advice",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Reject Invoice",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Final Check",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Confirm Invoice",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Reject Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "Bill Sent to GO",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "GO Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "MPON Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Final Check Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "MPOO",
                        "name": "Meter Point Operator Organization",
                        "lanes": []
                    },
                    {
                        "id": "GO",
                        "name": "Grid Operator",
                        "lanes": []
                    },
                    {
                        "id": "MPON",
                        "name": "Meter Point Operator Network",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "g1",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g2",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g2",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "8",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "9",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "1",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "4",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "10",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "g3",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "g3",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "11",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "13",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "g4",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "g4",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "14",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "12",
                        "targetRef": "16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Meter Point Operator Organization (MPOO).  The MPOO has a choice to make regarding sending bills to the Grid Operator (GO). They can send one of four different types of bills: a measurement bill, a bill for additional readings, a bill for equipment acquisition, or a metering point operations bill.  \n\nOnly one of these bills is sent at a time. After sending any of these bills to the GO, the MPOO then makes another decision.  Depending on whether the bill is intended for the Meter Point Operator Network (MPON), they will either send the equipment acquisition bill directly to the MPON or continue with the original GO route.\n\nIf the bill was sent to the MPON, they then \"Examine the bill.\"  After examining the bill, the MPON decides whether to \"Confirm the invoice with payment advice\" or \"Reject the invoice.\" Following either of these actions, the MPON sends this decision to the Market Participant Balance Data Organization (MPOB). The process then ends.\n\nIf the bill was originally sent to the GO (and not diverted to the MPON), the GO will \"Examine the bill.\" Following this, they will choose to either \"Confirm the invoice with payment advice\" or \"Reject the invoice.\"  After making this decision, the GO then reports their action to the MPOB, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Examine the bill",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine the bill",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm the invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Reject the invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm the invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reject the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "MPON or GO?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Confirm or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Confirm or Reject?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "id14",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id15",
                        "name": "MPON",
                        "lanes": []
                    },
                    {
                        "id": "id16",
                        "name": "MPOB",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_3.json": {
        "0": {
            "text": "The process begins with the Head of the functional department detecting a number of personnel requirements.  They then report the vacancy to the Personnel Department. Following this, the Personnel Department provides a job description to the Head of the functional department for review.\n\nThe Head of the functional department then makes a decision: approve the job description or ask for corrections. If they approve the job description, the process moves forward to advertising the vacancy, and then the process ends.\n\nHowever, if the Head of the functional department is not satisfied with the job description and asks for corrections, the Personnel Department must revise the job description and resubmit it for review.  This creates a loop where the Head of the functional department can repeatedly ask for corrections until the job description is approved. Once the job description is finally approved, the vacancy is advertised, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Revise job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Advertise vacancy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Detect personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Vacancy advertised",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Approve or Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the Head of the functional department detects a number of personnel requirements.  They then report the vacancy to the Personnel Department.  Next, the Head of the functional department gets the job description for review from the Personnel Department.  At this point, a decision is needed: is the job description approved?\n\nIf yes, the Head of the functional department approves the job description and advertises the vacancy, ending the process.\n\nIf no, the Head of the functional department asks for corrections from the Personnel Department. After receiving the corrected job description, it goes back for review to the Head of the functional department who again decides whether to approve it or not.  This back-and-forth between asking for corrections and reviewing the updated job description from the Personnel Department continues until the Head of the functional department approves it. Once approved, the vacancy is advertised, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Provide job description for review",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Advertise vacancy",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Provide corrected job description",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Review corrected job description",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Head of Department detects personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "Vacancy advertised",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "6",
                        "targetRef": "7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the Head of the functional department detects a number of personnel requirements.  They then report the vacancy to the Personnel Department.  Next, the Personnel Department provides a job description to the Head of the functional department for review.\n\nThe Head of the functional department now has a decision to make: do they approve the job description?  If yes, they approve the job description. If no, they ask for corrections from the Personnel Department.  If corrections were requested, the Personnel Department sends back a revised job description for review, bringing us back to the approval decision. This cycle repeats until the Head of the functional department approves the job description.\n\nOnce the job description is approved, the vacancy is advertised, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request corrections",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send revised job description",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Advertise vacancy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Detect personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Approve job description?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Description Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_3.json": {
        "0": {
            "text": "The process begins with the Production Team receiving a new order from the sales department.  A Master on the Production Team then determines the necessary parts, quantities, and delivery date for the order.  This information is entered into the Production Planning System (PPS).  The PPS then creates a list of the procured parts.  This list is used to transfer data from the PPS to the Enterprise Resource Planning (ERP) system.\n\nNext, the system checks if there are any missing parts.  If parts are missing, the Production Team procures them.  After procuring the missing parts, or if there were no missing parts initially, the Production Team receives a notice from the system.  Following this notification, an Employee on the Production Team takes care of implementing the order.  Once the order has been implemented, the Production Team checks the order for quality.  After the quality check, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "PPS creates list of procured parts",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Transfer data from PPS to ERP",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Implement order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check order for quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receive new order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Missing parts?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Production Team receiving a new order from the sales department.  The Master then determines the necessary parts, quantities, and delivery date for the order.  This information is entered into the Production Planning System (PPS). The PPS then creates a list of the procured parts.  This information is then transferred from the PPS to the Enterprise Resource Planning system.\n\nNow, the system checks if there are any missing parts. If there are missing parts, the Production staff must procure them. After procuring the missing parts, the process continues. If there are no missing parts, the process proceeds directly.\n\nAfter the parts check (regardless of whether parts were missing or not), the system sends a notice to the Production Team. An Employee then takes care of implementing the order based on this notice.  After the implementation is complete, the Production staff checks the order for quality. Once the quality check is complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "PPS creates list of procured parts",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Transfer information from PPS to ERP",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Employee implements order",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Production staff checks order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Receive new order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "10",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "name": "Missing parts?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Production Team receiving a new order from the sales department.  The Master then determines the necessary parts, quantities, and delivery date for the order.  This information is entered into the Production Planning System (PPS).  The PPS then creates a list of the procured parts and transfers data to the Enterprise Resource Planning system.\n\nNow, the system checks if any parts are missing. If there are missing parts, the Production staff procures them.  After procuring the missing parts, or if there were no missing parts initially, the Production staff receives a notice from the system.  Following this notice, the Employee takes care of the implementation of the order.  Finally, the Production staff checks the order for quality. Once the quality check is complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "PPS creates list of procured parts and transfers data to ERP",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "System checks for missing parts",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive notice from system",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Implement the order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check order for quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receive new order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Missing Parts?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_2.json": {
        "0": {
            "text": "The process begins when a Department reports a vacancy to the HR clerk.  The HR clerk then creates a job description.  After creating the description, the HR clerk checks if there is any confusion in the description.\n\nIf there is confusion, the HR clerk asks the Department for clarification. After receiving clarification from the department, the HR clerk faces a decision point.  They can either choose to submit the job description for consideration or, if further confusion arises, they loop back to asking the Department again for more clarification.  This cycle can repeat until the description is clear.\n\nIf there's no confusion with the initial job description, the HR clerk proceeds directly to asking the Department. They then face the same decision as mentioned before: submit for consideration or ask for more clarification.\n\nOnce the HR clerk submits the job description for consideration, they wait for approval. After reviewing, if the description is approved, the process progresses.  If rejected, the Department is requested to make corrections. The Department corrects the description and the HR clerk, after receiving the corrected description, checks for approval again. This can create another loop where the description goes back and forth between the Department and HR Clerk until it's finally approved.\n\nFinally, when the job description is approved, the HR clerk posts the job, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Department reports vacancy",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Check for confusion",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Ask Department for clarification",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Wait for approval",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Request corrections from Department",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Correct job description",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Post job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "name": "Confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "Further Confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "name": "Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "12",
                        "targetRef": "13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a Department reports a vacancy to the HR clerk. The HR clerk then creates a job description.  After creating the description, the HR clerk checks if there is any confusion in the description.\n\nIf there is confusion, the HR clerk asks the Department for clarification.  After receiving clarification from the Department, the HR clerk may need to submit the job description for consideration. Subsequently, the HR clerk waits for approval.\n\nIf there's no confusion with the initial job description, the clerk skips asking the department and directly submits the job description for consideration and then waits for approval.\n\nOnce the HR clerk receives a response regarding the submitted job description, it's checked whether it's approved.  If it's rejected, the Department is requested to make corrections. The HR clerk then corrects the description based on the Department's input and submits the revised description for consideration again, restarting the approval process. This cycle of submitting, waiting for approval, and requesting corrections continues until the job description is approved.\n\nIf the job description is approved, there's a final check to see if it is indeed approved. If confirmed approved, the HR clerk posts the job, and the process ends. If somehow it is not approved at this final check, the description goes back for correction, restarting the loop as described earlier.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Department reports vacancy",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Check for confusion",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Ask department for clarification",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Wait for approval",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check approval status",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Request corrections from Department",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Correct description",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Final approval check",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Post job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g2",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "9",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "10",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g3",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g3",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when a Department initiates a request to create a new job posting.  The HR clerk then creates a job description.  After creating the description, the HR clerk checks if there is any confusion in the description.  If so, they ask the Department for clarification.  If the Department provides feedback, the HR Clerk incorporates it and checks for confusion again.  This loop continues until the description is clear.\n\nOnce the description is clear, the HR Clerk submits the job description to the Department for consideration. Following submission, the HR Clerk waits for approval from the Department.  The Department then decides whether to approve the job description.\n\nIf the Department rejects the description, they request a correction from the HR clerk.  The HR clerk corrects the description and the process loops back to the Department\u2019s approval decision point.\n\nIf the Department approves the description, the HR clerk proceeds to post the job and finally reports the vacancy to HR.  After reporting the vacancy, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Initiates a request to create a new job posting",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Creates job description",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Checks for confusion",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Asks the Department for clarification",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Provides feedback",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Incorporates feedback",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Submits job description",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Waits for approval",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Decides on approval",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Requests correction",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Corrects description",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Posts the job",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Reports the vacancy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "g1",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g2",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "13",
                        "targetRef": "14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_1.json": {
        "0": {
            "text": "The invoice processing at ACME AG begins when the Secretariat receives invoices.  They then perform a visual inspection of the invoice. Following this, the invoice is forwarded to an Accounting employee.\n\nThe Accounting employee identifies the charging suppliers and creates a new invoice in the system. They check the invoice items and note the cost center and the cost center managers on a docket. Then, the docket and a copy of the invoice are sent to the Internal Mail for delivery to the cost center manager.\n\nWhen the cost center manager receives the invoice copy and docket, they review the content for accuracy.  The cost center manager then decides if the invoice is in order.  If it is, they note their code (AP) on the docket and return the invoice copy. Next, they determine if all items on the invoice are correct. If yes, they decide whether to reject the AP or not.\n\nIf the cost center manager decides the invoice is *not* in order, they return the copy of the invoice and the process moves back to the Accounting employee.  The accounting employee can then consult the cost center manager. The accounting employee will then decide whether further questions exist or not. If more questions are needed, they will proceed with clarification with the vendor. If not, the accounting employee sends a copy of the invoice to the cost center managers. This triggers the cost center managers to receive the copy and goes through the steps of reviewing and making decisions based on whether items are correct and whether to reject AP. Independently if the questions are answered or not, the accounting employee eventually sends the invoice to the cost center manager.\n\nWhether the AP is rejected or items are incorrect, the cost center manager can pass the invoice copy to the next cost center manager, repeating the review and decision-making steps.  If all cost center managers are satisfied, the invoice is sent back to accounting.\n\n\nOnce back with the Accounting employee after review by the cost center manager(s), they forward the invoice copy to the Commercial manager. The Commercial manager performs a commercial audit.  If a complaint arises during the audit, the Accounting employee resolves the complaint and the process continues. If not, the process continues without the complaint resolution. After the audit (with or without a complaint), the commercial manager issues approval for payment.\n\nThe Commercial manager then moves the invoice copy and the docket back to the Accounting employee. The accounting employee checks the invoice and decides whether the amount is greater than 20 or not. If it is greater than 20, the invoice goes to the board for checking. Regardless of the amount being greater than 20 or not, the commercial manager can send the copy and docket to accounting, where the accounting employee gives payment instructions. The invoice is finally closed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Visual inspection of invoice",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Identify charging suppliers and create new invoice in system",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Check invoice items and note cost center/manager on docket",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Review invoice content for accuracy",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Note code (AP) on docket and return invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Determine if all items on invoice are correct",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Decide whether to reject AP",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Consult with cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Clarification with vendor",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Perform commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "t11",
                        "name": "Resolve complaint",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Issue approval for payment",
                        "type": "User"
                    },
                    {
                        "id": "t13",
                        "name": "Check invoice",
                        "type": "User"
                    },
                    {
                        "id": "t14",
                        "name": "Board checks invoice",
                        "type": "User"
                    },
                    {
                        "id": "t15",
                        "name": "Give payment instructions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Invoice received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Invoice closed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Invoice in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "All items correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Further questions?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Amount > 20?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Secretariat",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Secretariat Lane",
                                "elemRefs": [
                                    "t1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Accounting",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Accounting Lane",
                                "elemRefs": [
                                    "t2",
                                    "t3",
                                    "t8",
                                    "t9",
                                    "t11",
                                    "t13",
                                    "t15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Cost Center Manager",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Cost Center Manager Lane",
                                "elemRefs": [
                                    "t4",
                                    "t5",
                                    "t6",
                                    "t7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Commercial Manager",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Commercial Manager Lane",
                                "elemRefs": [
                                    "t10",
                                    "t12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool5",
                        "name": "Board",
                        "lanes": [
                            {
                                "id": "lane5",
                                "name": "Board Lane",
                                "elemRefs": [
                                    "t14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool6",
                        "name": "Internal Mail",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t4",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t6",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g2",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t2",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "t8",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g3",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "t9",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g2",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t7",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t7",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t10",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "g4",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "t11",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "g4",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "t12",
                        "targetRef": "t13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "t13",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "g5",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "t14",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "g5",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "t15",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Secretariat receiving invoices.  Next, they perform a visual inspection of the invoice.  Following the inspection, the invoice is forwarded to an Accounting employee.\n\nThe Accounting employee then identifies the charging suppliers and creates a new invoice in the system.  The items on the new invoice are checked, and the cost center along with the responsible cost center managers are noted on a docket.  The docket and a copy of the invoice are then sent via Internal Mail.\n\nOnce the cost center manager receives the docket and invoice copy, they review the content for accuracy. If everything is in order, the cost center manager notes their code (AP) on the docket and returns the invoice copy.  If it's not in order, the invoice copy is rejected and sent back to the Accounting employee.\n\nThe returned invoice copy prompts the Accounting employee to consult the cost center managers. This consultation can lead to several outcomes.  If questions arise during this consultation, there might be a need to clarify details with the vendor.  If so, the Accounting employee proceeds with clarification.  Following this clarification, or if no clarification is needed, the next step is to resend the invoice to the cost center managers.\n\nIf the invoice is not rejected and the items are all correct according to the cost center managers, they will pass the invoice to the next cost center manager if one exists. This process repeats until all cost center managers have reviewed and approved the invoice.\n\nRegardless of any questions or clarifications needed with the cost center managers, the accounting employee will also forward a copy of the invoice to the Commercial manager. The Commercial manager performs an audit.  If there is a complaint during the commercial audit, the Accounting employee resolves it.  After the audit (and any complaint resolution), the Commercial manager issues approval for payment.\n\nOnce approval is given, the Commercial manager sends the invoice and docket back to the Accounting employee. If the invoice amount is greater than 20, it is checked by the Board. If it is less than or equal to 20, or after the Board has checked it (if applicable), the Accounting employee receives the invoice and docket.\n\nAfter receiving back the invoice copy and docket (and after any Board review if required), the Accounting employee gives payment instructions and closes the invoice, thus concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Visual Inspection of Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Forward Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Identify Charging Suppliers and Create New Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Invoice Items",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Note Cost Center and Manager on Docket",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Docket and Invoice Copy via Internal Mail",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Review Invoice Content",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Note Code (AP) on Docket",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Return Invoice Copy",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Reject Invoice Copy",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Consult Cost Center Managers",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Clarify Details with Vendor",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Resend Invoice to Cost Center Managers",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Pass Invoice to Next Cost Center Manager",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Forward Invoice Copy to Commercial Manager",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Perform Commercial Audit",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Resolve Complaint",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Issue Approval for Payment",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Send Invoice and Docket Back to Accounting",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Check Invoice (Board)",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Give Payment Instructions and Close Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id25",
                        "name": "Invoice in Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Need Vendor Clarification?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "More Cost Center Managers?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Complaint During Audit?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Invoice Amount > 20?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id25",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id25",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id26",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id26",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id27",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id17",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id28",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id28",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id20",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id29",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id29",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id22",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id27",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The invoice processing at ACME AG begins when the Secretariat receives invoices.  The Secretariat then performs a visual inspection of the invoice.  Following the inspection, the invoice is forwarded to an Accounting employee.\n\nThe Accounting employee identifies the charging suppliers and creates a new invoice in the system. The items on the new invoice are checked.  Next, the Accounting employee notes the cost center and the cost center managers on a docket. The docket, along with a copy of the invoice, is then sent via Internal Mail to the cost center manager.\n\nThe Cost center manager reviews the invoice content for accuracy and determines if the invoice is \"in order\". If it is, the cost center manager notes their code (AP) on the docket and returns the invoice copy. Next, the cost center manager checks if all items on the invoice are correct.\n\nIf not all items are correct, the cost center manager passes the invoice copy to the next cost center manager, effectively repeating the \"in order\" and item accuracy checks by each subsequent manager.  Once a cost center manager confirms that all items are correct, they check the amount.  If the cost center manager says the invoice isn't \"in order\",  the invoice copy is sent back to the accounting employee, who rejects the AP, and sends it back to the cost center manager who must then check the amount on the invoice.\n\nIf the amount is greater than 20, the invoice is sent to the Board for checking.  After the Board checks the invoice, or if the amount is less than or equal to 20, the invoice and docket copy are forwarded to the Commercial manager.\n\nThe Commercial manager performs a commercial audit.  If a complaint arises during the audit, it needs to be resolved by the Accounting employee.  Once the complaint is resolved, or if there was no complaint, the Commercial manager issues the approval for payment. The approved invoice and docket are moved to the Accounting employee.\n\nIf there were any questions during the process after the initial invoice creation and check, the Accounting employee could consult the cost center managers, and then the invoice would be sent to the cost center manager.  If there are questions after the cost center managers have reviewed the invoice, the Accounting employee will proceed with clarification with the vendor, then restart with consulting the cost center managers and then send it to them.\n\nFinally, the Accounting employee gives payment instructions and closes the invoice, completing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive Invoice",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Visual Inspection",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Identify Charging Suppliers/Create Invoice",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Check Items",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Note Cost Center/Managers",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Send Docket/Invoice Copy",
                        "type": "Manual"
                    },
                    {
                        "id": "7",
                        "name": "Review Invoice Content",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Note Code (AP) on Docket",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Check Items",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Pass Invoice Copy",
                        "type": "Manual"
                    },
                    {
                        "id": "11",
                        "name": "Check Amount",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Send Invoice Back",
                        "type": "Manual"
                    },
                    {
                        "id": "13",
                        "name": "Reject AP",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Send Back to CCM",
                        "type": "Manual"
                    },
                    {
                        "id": "15",
                        "name": "Check Amount",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Board Checks Invoice",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "Forward Invoice/Docket",
                        "type": "Manual"
                    },
                    {
                        "id": "18",
                        "name": "Commercial Audit",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "Resolve Complaint",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "Issue Payment Approval",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "Move to Accounting",
                        "type": "Manual"
                    },
                    {
                        "id": "22",
                        "name": "Consult Cost Center Managers",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "Send to Cost Center Manager",
                        "type": "Manual"
                    },
                    {
                        "id": "24",
                        "name": "Clarify with Vendor",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "Give Payment Instructions/Close Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Invoice Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "26",
                        "name": "Invoice Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Invoice in Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "All Items Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Amount > 20?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Questions?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g6",
                        "name": "Questions After CCM Review?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g1",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g1",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g2",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "10",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "11",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g3",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "g3",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "15",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "18",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "g4",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "g4",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "20",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "21",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "g5",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "g5",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "22",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "23",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "g6",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "24",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "25",
                        "targetRef": "26"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "2_2.json": {
        "0": {
            "text": "The process begins when a customer transmits data to the customer service department of a company. The company receives the customer data and enters it into their CRM system.  They then compare the entered data with their existing internal customer data.  This check determines if there are any discrepancies in the data.\n\nIf there are data errors, the customer service department corrects the data and then re-checks it for completeness and plausibility. This loop continues until the data is error-free.  If the data is accurate and complete, the system checks if the customer already exists in their records.\n\nIf the customer doesn't exist, a new customer object is created.  Whether a new customer object is created or an existing one is found, the process continues with the preparation of contract documents for the power supplier switch.  Simultaneously, the company also receives meter data and imports it into their systems.  After importing this data, they proceed with the switch.\n\nThe prepared contract documents are then checked.  If the documents aren't generated correctly, the causing issues are analyzed and resolved, after which the documents are regenerated.  This loop continues until the contract documents are correctly generated.  Once correctly generated, they are sent to the Customer Information System (CIS) to create a CIS contract. This contract is then sent to the customer for review.\n\nThe customer checks the contract details and decides whether to confirm or withdraw from the switch contract. If the customer withdraws, they inform the company, and the process ends.\n\nIf the customer confirms the switch contract, the company sends out a confirmation document to the customer. Concurrently, they also send a grid operator request. The grid operator checks the request for supplier concurrence.\n\nIf the grid operator finds concurrence, they inform all suppliers, and simultaneously, the company communicates with the old supplier to terminate the sales agreement.  The old supplier transmits the power meter data to the company, who computes the final billing.  The company then sends the final billing to the old supplier and the customer in parallel, after which the process ends.\n\nHowever, if the grid operator does not find concurrence, they transmit a response comment and demand the resolution of the conflict. This effectively restarts the process from the point of creating the contract document.  If at any point after receiving the CIS contract and before confirming, the customer withdraws, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Transmit Data",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Receive Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Enter Data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Compare Data",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Correct Data",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Re-check Data",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Create New Customer Object",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Prepare Contract Documents",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Receive Meter Data",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Import Meter Data",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Proceed with Switch",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Check Contract Documents",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Analyze/Resolve Issues",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Regenerate Documents",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Send to CIS",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Create CIS Contract",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "Send Contract to Customer",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "Check Contract Details",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "Inform Company of Withdrawal",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "Send Confirmation Document",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "Send Grid Operator Request",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "Check for Supplier Concurrence",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "Inform Suppliers",
                        "type": "User"
                    },
                    {
                        "id": "24",
                        "name": "Terminate Sales Agreement",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "Transmit Meter Data",
                        "type": "User"
                    },
                    {
                        "id": "26",
                        "name": "Compute Final Billing",
                        "type": "User"
                    },
                    {
                        "id": "27",
                        "name": "Send Final Billing",
                        "type": "User"
                    },
                    {
                        "id": "28",
                        "name": "Transmit Response/Demand Resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "29",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "30",
                        "name": "Withdrawal",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "31",
                        "name": "Withdrawal",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Data Errors?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Customer Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Documents Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "Confirm or Withdraw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "name": "Concurrence?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gw1",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw2",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "8",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "12",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "gw3",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "14",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "gw3",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "18",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "gw4",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "19",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "gw4",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "20",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "21",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "22",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "gw5",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "23",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "24",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "25",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "26",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "27",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "gw5",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "28",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf40",
                        "sourceRef": "18",
                        "targetRef": "31"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a customer transmits data to the customer service department of a company. The company receives the customer data and enters it into their CRM system.  They then compare this entered data with existing internal customer data. This check leads to a decision point: does the customer already exist in the system?\n\nIf the customer exists, the process flows to checking the entered customer data for completeness and plausibility. If any errors are found, the customer data is corrected and the check is repeated. If the data is complete and plausible, the process moves forward.\n\nIf the customer *doesn't* exist in the system, a new customer object is created. Following this, regardless of whether a new customer object was created or an existing one was used, the company prepares the contract documents for the power supplier switch.\n\nAfter the documents are prepared, they are checked by the Customer Information System.  If there's a problem, a decision gateway determines if the problem can be resolved. If so, the company analyzes and resolves the issues, then generates the contract documents again. If the issues *cannot* be resolved, the process continues.\n\nIf the contract documents are deemed acceptable, the CIS creates a contract and sends it to the customer.  The customer then checks the contract details. At this point, the customer decides whether to confirm or withdraw from the switch contract.\n\nIf the customer withdraws, the company receives their response, and the process ends.\n\nIf the customer confirms, the company receives their response and performs two parallel processes: transmitting the power meter data to the old supplier and creating a final billing for the old supplier. The company also sends out a confirmation document to the customer.  After the power meter data is transmitted, the old supplier computes the final billing and sends it back to the company. The company then sends this billing to the customer, requests concurrence from the grid operator, and informs all suppliers.\n\nIf the grid operator concurs, the process proceeds to communicating with the old supplier to terminate the sales agreement. Simultaneously, a final billing is created for the customer and sent.  Once the old supplier receives and confirms the billing, and the agreement is terminated, the entire process concludes.\n\nHowever, if the grid operator *doesn't* concur, the company demands a resolution to the conflict. After this demand, the process again involves communication with the old supplier and the termination of the sales agreement, creating the final billing, and sending it to both the old supplier and the customer.  Once the billing is received by the old supplier, the process completes.\n\n\nFinally, after receiving the meter data and importing it to systems, the process checks if the customer withdrew. If so, it ends; otherwise, if the customer confirmed, it triggers the two parallel processes mentioned earlier (transmitting power meter data and creating final billing for the old supplier).\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Transmit Data to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Receive and Enter Customer Data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Compare Data with Existing Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Check Customer Data for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Correct Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Create New Customer Object",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Prepare Contract Documents",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Check Documents with CIS",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Analyze and Resolve Issues",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Regenerate Contract Documents",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "CIS Creates Contract and Sends to Customer",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Customer Checks Contract Details",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "Receive Customer Withdrawal",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "Receive Customer Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "Transmit Power Meter Data to Old Supplier",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "Create Final Billing for Old Supplier",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "Send Confirmation to Customer",
                        "type": "User"
                    },
                    {
                        "id": "24",
                        "name": "Old Supplier Computes Final Bill",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "Send Final Bill to Customer",
                        "type": "User"
                    },
                    {
                        "id": "26",
                        "name": "Request Grid Operator Concurrence",
                        "type": "User"
                    },
                    {
                        "id": "27",
                        "name": "Inform All Suppliers",
                        "type": "User"
                    },
                    {
                        "id": "29",
                        "name": "Demand Resolution to Conflict",
                        "type": "User"
                    },
                    {
                        "id": "30",
                        "name": "Communicate with Old Supplier and Terminate Agreement",
                        "type": "User"
                    },
                    {
                        "id": "31",
                        "name": "Create and Send Final Bill to Customer and Old Supplier",
                        "type": "User"
                    },
                    {
                        "id": "33",
                        "name": "Receive and Confirm Billing (Old Supplier)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "19",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "32",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "name": "Customer Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "name": "Problem Resolvable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "17",
                        "name": "Confirm or Withdraw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "28",
                        "name": "Grid Operator Concurs?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "13",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "17",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "20",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "20",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "20",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "21",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "24",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "22",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "23",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "26",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "28",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "28",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "29",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "30",
                        "targetRef": "31"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "31",
                        "targetRef": "33"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "33",
                        "targetRef": "32"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer transmits data to the customer service department of a company. The company receives the customer data and enters it into their CRM system.  They then compare this entered data with existing internal customer data.  This data comparison is checked for completeness and plausibility.\n\nIf there are errors found during the data check, the customer data needs correction, and the check is performed again. This repeats until the data is deemed complete and plausible.\n\nOnce the data is validated, the company checks if the customer already exists in their system. If not, a new customer object is created. If the customer already exists, or once a new customer object is created, the company prepares the contract documents for the power supplier switch.\n\nSimultaneously, after contract document preparation, the company checks if these documents have been generated correctly. If not, the issues causing the problem are analyzed and resolved, after which the documents are generated again. This loop continues until the contract documents are successfully generated.  Once the documents are correctly generated, they are checked by the Customer Information System (CIS) and a CIS contract is created.  This contract is then sent to the customer.\n\nThe customer now checks the contract details. After reviewing the contract, the customer decides whether to confirm or withdraw from the switch contract.\n\nIf the customer withdraws, the process ends. If the customer confirms, their response is received by the company, and the process forks into three parallel paths:\n\n1.  The grid operator receives a request and checks for supplier concurrence.  If there is concurrence, the grid operator informs all suppliers. If there isn't concurrence, they demand a resolution to the conflict and communicate with the old supplier. This communication loop continues until there is concurrence.  Once there is concurrence or the conflict is resolved, the grid operator gets the power meter data from the old supplier, transmits it, and calculates the final billing.\n\n2.  The company communicates with the old supplier to terminate the sales agreement, which may involve addressing objections from the supplier. If there are objections, the process loops back to creating a CIS contract and getting the customer to confirm.  If there are no objections, or once they are resolved, the process continues.\n\n3.  The old supplier creates a final billing and sends it to both the customer and the grid operator.\n\nOnce the grid operator has sent the final billing, transmitted the meter data, and the old supplier has sent the billing to the customer, all three parallel paths converge, and the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Transmit Data to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and Enter Customer Data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Compare Data with Existing Internal Data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Data for Completeness and Plausibility",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Correct Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check if Customer Exists",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create New Customer Object",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare Contract Documents",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Contract Documents for Correctness",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Analyze and Resolve Document Issues",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check Documents with CIS",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create CIS Contract",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Contract to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Customer Checks Contract Details",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Receive Customer Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Grid Operator Receives Request and Checks for Supplier Concurrence",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Grid Operator Informs All Suppliers",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Demand Resolution to Conflict",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Communicate with Old Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Get Power Meter Data from Old Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Transmit Meter Data",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Calculate Final Billing",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Communicate with Old Supplier to Terminate Sales Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Address Objections from Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id25",
                        "name": "Old Supplier Creates Final Billing",
                        "type": "User"
                    },
                    {
                        "id": "id26",
                        "name": "Send Final Billing to Customer and Grid Operator",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id27",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "Customer Withdraws",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id29",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id30",
                        "name": "Data Check OK?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id31",
                        "name": "Customer Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id32",
                        "name": "Documents Generated Correctly?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id33",
                        "name": "Confirm or Withdraw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id34",
                        "name": "Supplier Concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id35",
                        "name": "Objections from Supplier?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id36",
                        "name": "Join",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id27",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id30",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id30",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id31",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id31",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id32"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id32",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id32",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id14",
                        "targetRef": "id33"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id33",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id33",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id15",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id15",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id16",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id34",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id17",
                        "targetRef": "id36"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id34",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id19",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id23",
                        "targetRef": "id35"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id35",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id24",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id35",
                        "targetRef": "id36"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id26",
                        "targetRef": "id36"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "id36",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf40",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf41",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf42",
                        "sourceRef": "id22",
                        "targetRef": "id29"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "7_1.json": {
        "0": {
            "text": "The process begins with the Manager checking the open leads.  Following this, the Manager selects the top five leads. The Manager then tells the Sales Assistant to contact these leads.\n\nThe Sales Assistant then calls a customer.  After the call, the Sales Assistant determines if the customer is interested.\n\nIf the customer *is* interested, the Sales Assistant sends a note to the Manager. The Manager then processes the lead. After processing the lead, the Manager decides if there is another customer to contact from the top five.\n\nIf the customer is *not* interested, the Manager also checks if there's another customer to contact from the top five.\n\nWhether the customer was interested or not, if there *is* another customer to contact, the Sales Assistant proceeds to call the next customer.  This loop repeats until all five leads have been contacted.\n\nIf there are *no more* customers to contact from the top five, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top five leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Tell Sales Assistant to contact leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call customer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Determine if customer is interested",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process lead",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Decide if there is another customer to contact",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Is customer interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Another customer to contact?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Manager Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Sales Assistant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Sales Assistant Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the Manager checking the open leads.  Following this, the Manager selects the top five leads. The Manager then tells the Sales Assistant to contact these leads.\n\nThe Sales Assistant then calls the customer.  After the call, the Sales Assistant checks if the customer is interested.\n\nIf the customer *is* interested, the Sales Assistant sends a note to the Manager.  The Manager then processes the lead. After processing the lead, the Manager checks if there is another customer to contact from the top 5.\n\nIf the customer is *not* interested, the Manager also checks if there is another customer to contact from the top 5.\n\nIf there *is* another customer, the Sales Assistant calls the next customer, and the cycle repeats from the point where the Sales Assistant determines customer interest.\n\nIf there are *no more* customers to contact, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top 5 leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Tell Sales Assistant to contact leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call customer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check customer interest",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process lead",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check for more customers",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Is customer interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "More customers?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Manager Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Sales Assistant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Sales Assistant Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the Manager checking the open leads.  Following this, the Manager selects the top five leads. The Manager then tells the Sales Assistant to contact these leads.\n\nThe Sales Assistant then calls a customer.  After the call, the Sales Assistant determines if the customer is interested.\n\nIf the customer *is* interested, the Sales Assistant sends a note to the Manager.  The Manager then processes the lead. Following this, the Manager checks if there is another customer to process.\n\nIf the customer is *not* interested, the Manager also checks if there is another customer to process.\n\nIf there *is* another customer, the Sales Assistant calls the next customer, and the cycle repeats from the point where the Sales Assistant determines customer interest.\n\nIf there are *no more* customers to contact, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top 5 leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Tell Sales Assistant to contact leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call customer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Determine customer interest",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Is customer interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Another customer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_5.json": {
        "0": {
            "text": "The expense report process begins when an employee submits a report.  The system then checks if the employee has an existing account.\n\nIf the employee *doesn't* have an account, a new one is created.  Regardless of whether a new account was needed, the system next reviews the report to determine if it qualifies for automatic approval. Based on this review, the system checks the amount of the expense report.\n\nIf the amount is less than 200, the report is automatically approved. If the amount is 200 or greater, the report is sent to the employee's supervisor for approval.\n\nThe supervisor then approves or rejects the report. If approved, the reimbursement is sent to the employee's bank account. This transfer is then checked for completion. After completion or if there are issues, this information is sent for status update.\n\nIf the supervisor rejects the report, the employee receives a rejection notice.  The employee can then choose to either re-submit the expense report after revisions, or cancel the request.  If the request is cancelled, the process stops and the employee is notified.  If the employee resubmits the report, it goes back to the system for processing, starting again with account verification.\n\n\nIf the report was automatically approved, the system sends the reimbursement to the employee's bank account.  This transfer is also checked for completion.  If completed within 7 days, the process ends.  If completion takes longer than 7 days but less than 30 days, the employee receives an \"approval in progress\" email and the process ends.  If the transfer is not completed within 30 days, the process stops, and the employee receives a cancellation notice.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee submits report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for existing account",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Create new account",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Review report for auto-approval",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check expense report amount",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Auto-approve report",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send to supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Supervisor approves/rejects",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send reimbursement",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check transfer completion",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send status update",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send rejection notice",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Resubmit report",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Cancel request",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send cancellation notice (employee)",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Send \"approval in progress\" email",
                        "type": "Service"
                    },
                    {
                        "id": "id17",
                        "name": "Send cancellation notice (transfer)",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Account exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Auto-approval?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Supervisor decision?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Resubmit or cancel?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Transfer < 7 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Transfer < 30 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id22",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id22",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id23",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id24",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id24",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id25",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id25",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id26",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id26",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id23",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id10",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id27",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id27",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id28",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id16",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id28",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id17",
                        "targetRef": "id21"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The expense report process begins when an employee submits a report.\n\nThe system then checks if the employee has an existing account. If not, a new account is created.  Regardless of whether a new account was needed, the system then reviews the report to see if it qualifies for automatic approval.  This check involves assessing the amount of the expense report.  If the amount is less than 200, the report is automatically approved.  If the amount is 200 or greater, the report goes to the supervisor for approval.\n\nThe supervisor then makes a decision to approve or reject the report.  If approved, the system sends the reimbursement to the employee's bank account.  After the reimbursement is sent, another check is performed. This check involves assessing whether any additional actions are needed before finalizing the process. This additional check could represent actions like updating internal accounting systems or generating reports. If further action is required, the system performs those actions. Once completed, the process ends.\n\n\nIf the supervisor rejects the report, the employee receives a rejection notice.  The employee can then decide whether to cancel the report or resubmit it.  If the report is cancelled, the employee receives an email cancellation notice, and the process ends.  If the report is resubmitted, it goes back to the beginning of the process, where the system checks for an existing account and reviews the report for automatic approval.\n\n\nWhen a report is automatically approved,  another series of system checks and actions begin. The system will first check if the processing of the reimbursement is complete. This check is done repeatedly until the processing is complete, sending an email to the employee every time the check is made, notifying them that the approval is in progress, but more time might be needed. This cycle of checking and notification can repeat a number of times.  However, if the processing exceeds 7 days but is less than 30 days, the employee receives an email detailing that the process is ongoing. If the processing takes 30 days or more, the process stops, and the employee receives a cancellation notice, and then, they need to re-submit the report from the beginning.  If the processing takes less than or equals 7 days, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee submits report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for existing account",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Create new account",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Review report for automatic approval",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Supervisor approves/rejects report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send reimbursement",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check for additional actions",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Perform additional actions",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send rejection notice",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Employee cancels/resubmits report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send cancellation notice",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Check reimbursement processing status",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send in-progress email",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Send ongoing process email (7-30 days)",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Send cancellation notice (30+ days)",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Account exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Automatic approval?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Supervisor approval?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional actions needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Cancel or resubmit?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Processing complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Processing time?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id17",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id10",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id21",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id21",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id13",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id23",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id23",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id22",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id23",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The expense report process begins when an employee submits an expense report.  The system then checks if the employee has an existing account.\n\nIf the employee *doesn't* have an existing account, a new account is created. Regardless of whether a new account was needed, the system then reviews the report to see if it qualifies for automatic approval.  Based on this review, the amount of the expense report is checked.\n\nIf the amount is less than 200, the report is automatically approved.  If the amount is 200 or greater, the report is sent to the employee's supervisor for approval.\n\nThe supervisor then reviews the report and decides whether to approve it. If the report is approved, the system sends the reimbursement to the employee's bank account. This reimbursement process then needs to complete.  After it completes, another check occurs. This check looks at how long the reimbursement process took. If it took 7 days or less, the process is complete. If it took longer than 7 days but less than 30 days, the employee receives an email confirming that approval is in progress. If the reimbursement process took 30 days or more, the process is stopped, and the employee receives an email cancellation notice.\n\nBack to the supervisor\u2019s decision: If the supervisor *rejects* the expense report, the employee receives a rejection notice.  The employee can then choose to either resubmit the expense report, in which case the process cycles back to the beginning, or do nothing, which ends the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for existing account",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Create new account",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Review report for automatic approval",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check expense report amount",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Auto-approve report",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send report to supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Supervisor reviews report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send reimbursement",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Wait for reimbursement process to complete",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Check reimbursement processing time",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send confirmation email (approval in progress)",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Stop process, send cancellation email",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Send rejection notice",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Resubmit expense report?",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Existing Account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Automatic Approval?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Supervisor Approve?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Processing Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Resubmit?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id17",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id22",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_8.json": {
        "0": {
            "text": "The car insurance claim process begins when a customer submits a claim.  This claim is then sent to the Car Insurance company's Notification department where the submitted documents are checked.  Following the document check, the claim is registered.  Next, the Handling department picks up the registered claim and checks the customer's insurance.\n\nAfter checking the insurance, an assessment of the claim is performed.  Based on this assessment, a decision is made. If the assessment is positive, the Handling department phones the garage to authorize the repairs. Following authorization, the payment for the repairs is scheduled.  \n\nIf, however, the assessment is negative, the claim is rejected. Regardless of whether the claim is approved or rejected, a letter is sent to the customer by the Handling department, concluding the process for the Car Insurance company. The customer\u2019s involvement ends after submitting the claim.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Submitted Documents",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Customer Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assess Claim",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Phone Garage to Authorize Repairs",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule Payment for Repairs",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Reject Claim",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Letter to Customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Claim Submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Car Insurance Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The car insurance claim process begins when a customer submits a claim.  This claim is then sent to the Car Insurance company's Notification department.  The Notification department checks the documents provided with the claim and registers it.  Once registered, the claim is picked up by the Handling department.\n\nThe Handling department then checks the customer's insurance.  Following this check, an assessment of the claim is performed. Based on this assessment, a decision is made.\n\nIf the assessment is positive, the Handling department phones the garage to authorize the repairs. After the authorization, the payment for the repairs is scheduled, and then a letter is sent to the customer to inform them about the outcome.\n\nIf the assessment is negative, the claim is rejected. Following the rejection, a letter is sent to the customer explaining the reasons for rejection. Regardless of whether the claim is approved or rejected, the process ends with the customer receiving a letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer submits claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department checks customer's insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Handling department assesses claim",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Handling department phones garage to authorize repairs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule payment for repairs",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send letter to customer (positive outcome)",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send letter to customer (negative outcome)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Claim process starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Claim process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The car insurance claim process begins when a customer submits a claim.  This claim is then sent to the Car Insurance company's Notification department. The Notification department checks the documents provided with the claim and registers it.  Next, the claim goes to the Handling department.\n\nWithin the Handling department, an employee picks up the claim and checks the customer's insurance. Following this check, an assessment of the claim is performed. Based on this assessment, a decision is made.\n\nIf the assessment is positive, the Handling department phones the garage to authorize the repairs.  After authorization, the payment for the repairs is scheduled.  Finally, whether the assessment was positive and the repairs authorized *or* if the assessment was negative, the Handling department sends a letter to the customer, concluding the process for the Car Insurance company.  At the same time the customer submits the claim, it marks the end of the process for them.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Submit Claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Check Documents and Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Pick up Claim and Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Assessment of Claim",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Phone Garage to Authorize Repairs",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Schedule Payment for Repairs",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Send Letter to Customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Customer Submits Claim",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "Claim Concluded",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "Process End for Customer",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Car Insurance Company",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "1",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_4.json": {
        "0": {
            "text": "The process begins with the organization deciding to go public.  This leads to the selection of underwriters.  Once the underwriters are selected, the organization sends information to them, which triggers two parallel processes.\n\nThe first process involves the underwriters preparing a registration statement for approval by the SEC.  Simultaneously, they also begin checking the issue's compliance.  Once both the registration statement is prepared and the compliance check is complete, the organization and the underwriters begin to firm up the issue price. At the same time, the underwriters await approval of the registration statement by the SEC.\n\nThe second parallel process starts when the issue price is being firmed up. The underwriters arrange a road show to generate interest in the stock. When the road show is complete and the registration statement has been approved by the SEC and the SEC gives clearance, the issue price is fixed.  Following this, the underwriters enter into a firm commitment to buy the stock.\n\nOnce the underwriters have committed to buy the stock, they offer the stock to the public. This concludes the underwriters' part of the process.  Meanwhile, after selecting the underwriters, the organization simply waits for the underwriters to select the underwriters, and once chosen, the process ends for the organization.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Information to Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Issue's Compliance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Firm Up Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Arrange Road Show",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Await SEC Approval",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Fix Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter Firm Commitment to Buy Stock",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Offer Stock to Public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Organization Decides to Go Public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Underwriters Finish",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Organization Finish",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Organization deciding to go public.  This decision triggers two parallel tracks.  The Organization selects the underwriters and, at the same time, the Underwriters begin preparing a registration statement for SEC approval.  The selection of underwriters also informs the creation of the registration statement (think of this as handing off information between the two groups). Once the registration statement is prepared, the Underwriters check the issue's compliance.  This compliance check triggers two more parallel actions: awaiting approval of the registration statement from the SEC, and beginning to firm up the issue price.  While waiting for approval, the Underwriters arrange a road show.  Once the SEC grants clearance, and the road show is complete, the issue price is fixed.  The Underwriters then enter into a firm commitment to buy the stock.  After the stock purchase commitment is finalized and the underwriters have been selected, the stock is offered to the public. This marks the end of the main process flow.  However, if at the very beginning the Organization decides *not* to go public, the process ends there as well.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Issue's Compliance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Firm Up Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Arrange Road Show",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Fix Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter Firm Commitment to Buy Stock",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Offer Stock to Public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Organization Decides to Go Public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process Ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Decision Not to Go Public",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Go Public?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Compliance Check Complete?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Ready to Offer Stock?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Organization deciding to go public.  This decision triggers two parallel tracks. The Organization selects the underwriters and simultaneously, the Underwriters begin preparing a registration statement for SEC approval.  The Organization then sends the details of the selected underwriters to the Underwriters.\n\nOnce the registration statement is prepared, the Underwriters check the issue's compliance.  This compliance check, along with the preparation of the registration statement, allows two parallel processes to proceed: the Underwriters begin to firm up the issue price and also await the approval of the registration statement.\n\nAs the Underwriters work on firming up the issue price, they also arrange a road show. These two activities happen concurrently. Once both the road show is complete and the registration statement is approved by the SEC, the Underwriters receive clearance from the SEC. This clearance then allows them to fix the issue price.\n\nAfter the issue price is fixed, the Underwriters enter into a firm commitment to buy the stock. This commitment then triggers the final action: offering the stock to the public.  Once the stock is offered, the process ends for the Underwriters.\n\nBack on the Organization's side, after selecting the underwriters, if they don't immediately proceed to go public, the process ends there. If they do decide to go public after selecting underwriters, the process ends after the underwriters have been selected and contacted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Underwriter Details",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Issue's Compliance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Firm Up Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Arrange Road Show",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Fix Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter Firm Commitment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer Stock to Public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Organization Decides to Go Public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Exclusive Gateway",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Gateway 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "Pool1",
                        "name": "Organization",
                        "lanes": [
                            {
                                "id": "Lane1",
                                "name": "Organization Lane",
                                "elemRefs": [
                                    "id0",
                                    "id1",
                                    "id3",
                                    "id10",
                                    "id14",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Pool2",
                        "name": "Underwriters",
                        "lanes": [
                            {
                                "id": "Lane2",
                                "name": "Underwriters Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id12",
                                    "id13",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_2.json": {
        "0": {
            "text": "The computer repair process begins when a customer brings in a defective computer.  The Customer Repair Specialist (CRS) then checks the defect and provides the customer with a cost calculation for the repair.\n\nAt this point, the customer decides whether the cost is acceptable. If not, the customer simply takes the computer home and the process ends.\n\nIf the customer accepts the cost estimate, the actual repair process begins.  The CRS checks the hardware and, simultaneously, checks the software. These tasks happen in parallel.  If the hardware check reveals issues, the CRS repairs the hardware.  Once any necessary hardware repairs are complete, the CRS tests the system functionality.  Meanwhile, if the software check identifies any necessary configurations, the CRS configures the software. Once the software configuration is done, this also feeds into the system functionality test.  So, both hardware repair and software configuration must be completed before the system functionality test can happen.\n\nAfter testing the system functionality, the CRS determines if any errors remain.  If errors are found, the CRS loops back and repeats the process of checking and repairing the hardware and configuring the software, followed by another round of system functionality testing.  This cycle continues until no further errors are detected.\n\nFinally, once the system functionality test passes without any errors, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "provides cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "checks hardware",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "repairs hardware",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "tests system functionality",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "checks software",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "configures software",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Customer brings in computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "3",
                        "name": "Customer decides on cost",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "9",
                        "name": "Process Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Cost Acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Hardware Issues?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Software Issues?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Errors Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "type": "Parallel"
                    },
                    {
                        "id": "g6",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "g5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "4",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g2",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "5",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "7",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g3",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "8",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g6",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "6",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "g4",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "g4",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The computer repair process begins when a customer brings in a defective computer. The Customer Repair Service (CRS) then checks the defect and provides the customer with a cost calculation for the repair.\n\nAt this point, the customer decides whether the cost is acceptable. If not, the customer simply takes the computer home and the process ends.\n\nIf the customer accepts the cost, the repair process continues. The CRS then performs two checks simultaneously: a hardware check and a software check.  Once the hardware check is complete, the CRS repairs any faulty hardware.  Simultaneously, after the software check is complete, the CRS configures the software.\n\nAfter both the hardware repair and software configuration are finished, the CRS tests the overall system functionality.  If any errors are found during testing, the process loops back to the point where the CRS checks the hardware and software again. This loop continues until no errors are found.\n\nOnce the system functionality tests pass without any errors, the process ends, and the computer is ready for the customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Check defect and calculate cost",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Repair faulty hardware",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Configure software",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Test overall system functionality",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Hardware Check",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Software Check",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Customer brings in defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "3",
                        "name": "Customer takes computer home",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "Computer ready for customer",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "Cost Acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "Errors found?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "9",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "10",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The Computer Repair process begins when a customer brings in a defective computer. The Customer Repair Service (CRS) then checks the defect and provides the customer with a cost calculation for the repair.\n\nAt this point, the customer decides whether the cost is acceptable. If not, the customer takes the computer home and the process ends.\n\nIf the cost is acceptable, the CRS proceeds with the repair.  This involves two parallel tracks: checking the hardware and checking the software.  Once the hardware check is complete, the CRS repairs the hardware.  Similarly, after checking the software, the CRS configures the software.\n\nAfter both the hardware repair and software configuration are finished, the CRS tests the system functionality.  The CRS then checks for any remaining errors. If errors are found, the process loops back to the start of the parallel hardware and software checks, meaning the hardware and software checks, subsequent repairs/configuration, and system test are repeated.  This cycle continues until no errors are found.\n\nIf no errors are found after the system functionality test, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Check defect",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Calculate repair cost",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Configure software",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Test system functionality",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check for errors",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Check hardware",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Check software",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Computer brought in",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "Computer taken home",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "11",
                        "name": "Cost acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "name": "Errors found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "name": "Parallel Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "14",
                        "name": "Parallel End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "11",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "11",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "13",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "13",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "4",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "14",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "7",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "12",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_8.json": {
        "0": {
            "text": "The process begins with the MSPO deregistering at the GO.  Following this, the GO verifies the deregistration.  At this point, a decision must be made.  If the GO rejects the deregistration, the process effectively splits.  The GO informs the MSPO of the rejection, and then the process ends.  \n\nAlternatively, if the GO confirms the deregistration, the GO assigns themselves as the MSP.  After this assignment, the GO informs the MSPO about the state of the assignment. Then, the GO informs the MPO about the assignment. Finally, the GO informs the SP about the assignment, and the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPO deregisters at GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO verifies deregistration",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "GO informs MSPO of rejection",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "GO assigns self as MSP",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO informs MSPO of assignment",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO informs MPO of assignment",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO informs SP of assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Deregistration Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the MSPO (Management Service Provider Operator) initiating a deregistration request at the GO (Government Office). The GO then verifies the deregistration request.  At this point, a decision must be made.  If the GO rejects the deregistration, the process splits. The GO rejects the deregistration and then a second decision point is reached based on the rejection. Whether the deregistration is ultimately rejected or confirmed, after the decision is made, both paths converge.\n\nIf the GO confirms the deregistration (meaning the initial verification was successful), this also leads to the second decision point mentioned earlier. \n\nOnce a decision is reached, whether through rejection or confirmation, the GO then assigns itself as the MSP (Management Service Provider). Following the assignment, the GO informs the MSPO about the status of the assignment.  Then, the GO informs the MPO (Management Process Operator) about the assignment. Finally, the GO informs the SP (Service Provider) about the assignment.  Once the SP is informed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO initiates deregistration request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies deregistration request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO rejects the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO confirms deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO assigns itself as the MSP",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "GO informs MSPO about assignment status",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "GO informs MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "GO informs SP about assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Verify Deregistration Request",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Rejection Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Join",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MSPO",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "MPO",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the MSPO (Managed Service Provider Operator) initiating a deregistration request at the GO (Government Office).  The GO then verifies the deregistration request. Based on the verification, there are two possible outcomes.\n\nIf the GO rejects the deregistration, the process reaches a decision point.  From this point, after rejection, the process loops back to the GO verifying the deregistration again. This cycle can repeat until the verification leads to a different outcome.\n\nIf the GO confirms the deregistration (the other outcome of the verification), the GO then assigns itself as the MSP (Managed Service Provider). Following this self-assignment, the GO informs the MSPO about the state of the assignment.  Then, the GO informs the MPO (Managed Portfolio Office) about the assignment.  Finally, the GO informs the SP (Service Provider) about the assignment, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO initiates deregistration request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies deregistration request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO assigns itself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs MSPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs SP about assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Verification Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Rejection Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MSPO",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "MPO",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_2.json": {
        "0": {
            "text": "The process begins with a Customer Service Representative sending a mortgage offer to a customer.  The representative then waits for a reply from the customer.\n\nAfter receiving the customer's reply, the process branches based on whether the customer declined the offer. If the customer declines, the case details are updated and then another decision is made: whether two weeks have passed since the initial offer. If two weeks have passed, the case is moved to administration. If two weeks haven't passed, the case details are updated again and the process loops back to waiting for a customer reply.  This continues until either the customer accepts, declines after two weeks or declines within two weeks.\n\nIf the customer does not decline the offer initially, the case is moved to administration.\n\nOnce the case is moved to administration, the representative checks if all necessary documents have been received. If all documents are present, a decision is made about whether the two week period from the initial offer has elapsed. If the time is up, the process ends. If the time is not up, then it waits for the two weeks before finishing.\n\nIf the documents are not all present, the representative generates a request for the outstanding documents.  After the request is generated, the check for all documents is repeated. This loop continues until all documents are received.\n\nIf, at any point after sending the initial offer, the customer declines, and two weeks have passed since the initial offer, the case is moved to administration. Following that, the work is archived. Subsequently, the process is performed to cancel the application.  After the cancellation is performed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Send mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Wait for customer reply",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check for documents",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Generate request for documents",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Wait for two weeks",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Cancel application",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Customer declined?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Two weeks passed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "name": "All documents received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "name": "Two weeks passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "5",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a Customer Service Representative sending a mortgage offer to a customer.  Then, the representative waits for a customer reply.  Following the reply, there's a decision point: Did the customer decline the offer?\n\nIf the customer declines, the case details are updated, and then another decision follows.\n\nIf the customer did *not* decline, the case is moved to administration, which leads to another decision point: are all documents submitted?\n\nLet's follow the \"decline\" path first.  After updating the case details, there is a decision to be made: was there an answer within two weeks? If yes, the work is archived and then a cancellation is performed. After the cancellation, the process ends. If there wasn't an answer within two weeks, it loops back to updating the case details and awaits a decision.\n\nNow, back to the \"not decline\" path. If all documents *are* submitted, the customer service representative makes another decision: was there an answer within two weeks? If so, the process ends. If not, the process loops back to awaiting the two-week window. If all documents are *not* submitted, the representative generates a request for the outstanding documents and then, this rejoins the earlier path where the decision is made about all documents being submitted. Following this loop, the process ends when all documents are received and a two-week window with an answer has transpired or if there's a cancellation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Send mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Wait for customer reply",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Perform cancellation",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Generate request for outstanding documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "name": "Customer declined?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Answer within two weeks?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "name": "All documents submitted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "name": "Answer within two weeks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "3",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "12",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a Customer Service Representative sending a mortgage offer to a customer.  Then, the representative waits for a reply from the customer.  Following the customer's reply, there are several possible paths.\n\nIf the customer declines the offer, the representative checks if they have provided all the necessary documents. If all documents have been received, the case moves to administration. If documents are still outstanding, the representative generates a request for the missing documents and waits for the customer to provide them before checking again if all documents are present. This creates a loop, where the representative keeps requesting outstanding documents until all are received.\n\nIf the customer does not decline the offer, the representative updates the case details.  After updating the details, the representative checks if all required documents have been received.  If so, they check if 2 weeks have passed since the customer's reply.  If two weeks have passed, the case is moved to a final decision point. If less than two weeks have passed, the representative waits for further communication from the customer and returns to the point of checking for a reply. This loop continues until either two weeks have passed or the customer declines.\n\nIf at the final decision point, two weeks have passed, the case is canceled and archived.  If at any point after the customer's initial response, the customer does not decline but hasn't provided all required documents, the representative requests the outstanding documents and the process loops back to checking for the customer\u2019s response.  Once all documents are received and either two weeks have passed, or the customer declines, the case is either archived (after cancellation) or moves to administration. Finally, the process ends with archiving the case after cancellation or moving the case to administration.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Send mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Wait for reply",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Check if all documents received",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Generate request for missing documents",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Wait for documents",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check if 2 weeks passed",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Wait for further communication",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Cancel case",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Archive case",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Request outstanding documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "14",
                        "name": "Customer declines?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "name": "All documents received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "16",
                        "name": "2 weeks passed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "17",
                        "name": "All documents received?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "15",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "14",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "17",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "16",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "16",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "8",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "17",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "15",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "10",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "11",
                        "targetRef": "13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    }
}